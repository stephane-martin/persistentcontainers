/* Generated by Cython 0.23.4 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_23_4"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
#define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__pcontainers___pdict
#define __PYX_HAVE_API__pcontainers___pdict
#include "string.h"
#include "stdio.h"
#include <vector>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <utility>
#include "stddef.h"
#include "time.h"
#include "stdlib.h"
#include "custom_exc.h"
#include "boost/scoped_ptr.hpp"
#include "boost/shared_ptr.hpp"
#include "bstrlib/bstrlib.h"
#include "bstrlib/bstrwrap.h"
#include "lmdb.h"
#include "pyfunctor.h"
#include "logging.h"
#include "pylogging.h"
#include "pyutils.h"
#include "lmdb_options.h"
#include "persistentdict.h"
#include "persistentqueue.h"
#include "utils.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "pcontainers/lmdb_options_impl.pxi",
  "pcontainers/pdict_impl.pxi",
  "pcontainers/filters_impl.pxi",
  "pcontainers/pqueue_impl.pxi",
  "pcontainers/expiry_dict_impl.pxi",
  "pcontainers/logging_impl.pxi",
  "pcontainers/_pdict.pyx",
  "pcontainers/_pdict.pxd",
  "pcontainers/helpers.pxi",
  "type.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_11pcontainers_6_pdict_PRawDict;
struct __pyx_obj_11pcontainers_6_pdict_PDict;
struct __pyx_obj_11pcontainers_6_pdict_PRawQueue;
struct __pyx_obj_11pcontainers_6_pdict_PQueue;
struct __pyx_obj_11pcontainers_6_pdict_expiry_dict;
struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions;
struct __pyx_obj_11pcontainers_6_pdict_Filter;
struct __pyx_obj_11pcontainers_6_pdict_Serializer;
struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer;
struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer;
struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer;
struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer;
struct __pyx_obj_11pcontainers_6_pdict_Signer;
struct __pyx_obj_11pcontainers_6_pdict_NoneSigner;
struct __pyx_obj_11pcontainers_6_pdict_HMACSigner;
struct __pyx_obj_11pcontainers_6_pdict_Compresser;
struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser;
struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser;
struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser;
struct __pyx_obj_11pcontainers_6_pdict_Chain;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate;
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate;
struct __pyx_opt_args_11pcontainers_6_pdict_set_logger;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iterkeys;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_itervalues;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iteritems;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to;
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates;
struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_put;
struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_get;
struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to;
struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_get;
struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_set;
struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_pop;
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_get;
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_setdefault;
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_pop;
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_copy_to;
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_move_to;
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_remove_duplicates;
struct __pyx_opt_args_11pcontainers_6_pdict_6PQueue_move_to;

/* "pcontainers/_pdict.pxd":88
 *     shared_ptr[TempDirectory] make_temp_directory "utils::TempDirectory::make"(cpp_bool create, cpp_bool destroy)
 * 
 * cpdef set_logger(int level=?)             # <<<<<<<<<<<<<<
 * cpdef set_python_logger(name)
 * 
 */
struct __pyx_opt_args_11pcontainers_6_pdict_set_logger {
  int __pyx_n;
  int level;
};

/* "pcontainers/pdict.pxi":10
 *     cpdef noiteritems(self)
 *     cpdef erase(self, first, last)
 *     cpdef get(self, key, default=?)             # <<<<<<<<<<<<<<
 *     cpdef setdefault(self, key, default=?)
 *     cpdef pop(self, key, default=?)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get {
  int __pyx_n;
  PyObject *__pyx_default;
};

/* "pcontainers/pdict.pxi":11
 *     cpdef erase(self, first, last)
 *     cpdef get(self, key, default=?)
 *     cpdef setdefault(self, key, default=?)             # <<<<<<<<<<<<<<
 *     cpdef pop(self, key, default=?)
 *     cpdef popitem(self)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault {
  int __pyx_n;
  PyObject *__pyx_default;
};

/* "pcontainers/pdict.pxi":12
 *     cpdef get(self, key, default=?)
 *     cpdef setdefault(self, key, default=?)
 *     cpdef pop(self, key, default=?)             # <<<<<<<<<<<<<<
 *     cpdef popitem(self)
 *     cpdef clear(self)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop {
  int __pyx_n;
  PyObject *__pyx_default;
};

/* "pcontainers/pdict.pxi":18
 *     cpdef transform_values(self, binary_funct)
 *     cpdef remove_if(self, binary_pred)
 *     cpdef iterkeys(self, reverse=?)             # <<<<<<<<<<<<<<
 *     cpdef itervalues(self, reverse=?)
 *     cpdef iteritems(self, reverse=?)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iterkeys {
  int __pyx_n;
  PyObject *reverse;
};

/* "pcontainers/pdict.pxi":19
 *     cpdef remove_if(self, binary_pred)
 *     cpdef iterkeys(self, reverse=?)
 *     cpdef itervalues(self, reverse=?)             # <<<<<<<<<<<<<<
 *     cpdef iteritems(self, reverse=?)
 *     cpdef copy_to(self, other, ssize_t chunk_size=?)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_itervalues {
  int __pyx_n;
  PyObject *reverse;
};

/* "pcontainers/pdict.pxi":20
 *     cpdef iterkeys(self, reverse=?)
 *     cpdef itervalues(self, reverse=?)
 *     cpdef iteritems(self, reverse=?)             # <<<<<<<<<<<<<<
 *     cpdef copy_to(self, other, ssize_t chunk_size=?)
 *     cpdef move_to(self, other, ssize_t chunk_size=?)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iteritems {
  int __pyx_n;
  PyObject *reverse;
};

/* "pcontainers/pdict.pxi":21
 *     cpdef itervalues(self, reverse=?)
 *     cpdef iteritems(self, reverse=?)
 *     cpdef copy_to(self, other, ssize_t chunk_size=?)             # <<<<<<<<<<<<<<
 *     cpdef move_to(self, other, ssize_t chunk_size=?)
 *     cpdef remove_duplicates(self, first=?, last=?)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to {
  int __pyx_n;
  Py_ssize_t chunk_size;
};

/* "pcontainers/pdict.pxi":22
 *     cpdef iteritems(self, reverse=?)
 *     cpdef copy_to(self, other, ssize_t chunk_size=?)
 *     cpdef move_to(self, other, ssize_t chunk_size=?)             # <<<<<<<<<<<<<<
 *     cpdef remove_duplicates(self, first=?, last=?)
 * 
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to {
  int __pyx_n;
  Py_ssize_t chunk_size;
};

/* "pcontainers/pdict.pxi":23
 *     cpdef copy_to(self, other, ssize_t chunk_size=?)
 *     cpdef move_to(self, other, ssize_t chunk_size=?)
 *     cpdef remove_duplicates(self, first=?, last=?)             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_get_key(self, cppConstIterator& it)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates {
  int __pyx_n;
  PyObject *first;
  PyObject *last;
};

/* "pcontainers/pqueue.pxi":14
 *     cpdef qsize(self)
 *     cpdef full(self)
 *     cpdef put(self, item, block=?, timeout=?)             # <<<<<<<<<<<<<<
 *     cpdef get(self, block=?, timeout=?)
 *     cpdef put_nowait(self, item)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_put {
  int __pyx_n;
  PyObject *block;
  PyObject *timeout;
};

/* "pcontainers/pqueue.pxi":15
 *     cpdef full(self)
 *     cpdef put(self, item, block=?, timeout=?)
 *     cpdef get(self, block=?, timeout=?)             # <<<<<<<<<<<<<<
 *     cpdef put_nowait(self, item)
 *     cpdef get_nowait(self)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_get {
  int __pyx_n;
  PyObject *block;
  PyObject *timeout;
};

/* "pcontainers/pqueue.pxi":21
 *     cpdef transform_values(self, unary_funct)
 *     cpdef remove_if(self, unary_pred)
 *     cpdef move_to(self, other, ssize_t chunk_size=?)             # <<<<<<<<<<<<<<
 *     cpdef remove_duplicates(self)
 * 
 */
struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to {
  int __pyx_n;
  Py_ssize_t chunk_size;
};

/* "pcontainers/expirydict.pxi":8
 *     cdef PDict values_dict
 *     cdef PDict index_dict
 *     cpdef get(self, key, default=?)             # <<<<<<<<<<<<<<
 *     cpdef set(self, key, value, time_t expiry=?)
 *     cpdef pop(self, key, default=?)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_get {
  int __pyx_n;
  PyObject *__pyx_default;
};

/* "pcontainers/expirydict.pxi":9
 *     cdef PDict index_dict
 *     cpdef get(self, key, default=?)
 *     cpdef set(self, key, value, time_t expiry=?)             # <<<<<<<<<<<<<<
 *     cpdef pop(self, key, default=?)
 *     cpdef popitem(self)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_set {
  int __pyx_n;
  time_t expiry;
};

/* "pcontainers/expirydict.pxi":10
 *     cpdef get(self, key, default=?)
 *     cpdef set(self, key, value, time_t expiry=?)
 *     cpdef pop(self, key, default=?)             # <<<<<<<<<<<<<<
 *     cpdef popitem(self)
 *     cpdef prune_expired(self)
 */
struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_pop {
  int __pyx_n;
  PyObject *__pyx_default;
};

/* "pcontainers/pdict_impl.pxi":434
 *         return self.value_chain.loads(self.raw_get_value_buf_const(it))
 * 
 *     cpdef get(self, key, default=None):             # <<<<<<<<<<<<<<
 *         try:
 *             return self[key]
 */
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_get {
  int __pyx_n;
  PyObject *__pyx_default;
};

/* "pcontainers/pdict_impl.pxi":440
 *             return default
 * 
 *     cpdef setdefault(self, key, default=None):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(self.value_chain.dumps(default)))
 */
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_setdefault {
  int __pyx_n;
  PyObject *__pyx_default;
};

/* "pcontainers/pdict_impl.pxi":479
 * 
 * 
 *     cpdef pop(self, key, default=None):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef CBString v
 */
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_pop {
  int __pyx_n;
  PyObject *__pyx_default;
};

/* "pcontainers/pdict_impl.pxi":579
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PDict):
 *             raise TypeError()
 */
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_copy_to {
  int __pyx_n;
  Py_ssize_t chunk_size;
};

/* "pcontainers/pdict_impl.pxi":586
 *             self.ptr.copy_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PDict):
 *             raise TypeError()
 */
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_move_to {
  int __pyx_n;
  Py_ssize_t chunk_size;
};

/* "pcontainers/pdict_impl.pxi":593
 *             self.ptr.move_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 *     cpdef remove_duplicates(self, first="", last=""):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_duplicates()
 */
struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_remove_duplicates {
  int __pyx_n;
  PyObject *first;
  PyObject *last;
};

/* "pcontainers/pqueue_impl.pxi":214
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PQueue):
 *             raise TypeError()
 */
struct __pyx_opt_args_11pcontainers_6_pdict_6PQueue_move_to {
  int __pyx_n;
  Py_ssize_t chunk_size;
};

/* "pcontainers/pdict.pxi":2
 * 
 * cdef class PRawDict(object):             # <<<<<<<<<<<<<<
 *     cdef cppPersistentDict* ptr
 *     cdef bint rmrf_at_delete
 */
struct __pyx_obj_11pcontainers_6_pdict_PRawDict {
  PyObject_HEAD
  struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *__pyx_vtab;
  quiet::PersistentDict *ptr;
  int rmrf_at_delete;
};


/* "pcontainers/pdict.pxi":37
 * 
 * 
 * cdef class PDict(PRawDict):             # <<<<<<<<<<<<<<
 *     cdef Chain key_chain
 *     cdef Chain value_chain
 */
struct __pyx_obj_11pcontainers_6_pdict_PDict {
  struct __pyx_obj_11pcontainers_6_pdict_PRawDict __pyx_base;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *key_chain;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *value_chain;
};


/* "pcontainers/pqueue.pxi":1
 * cdef class PRawQueue(object):             # <<<<<<<<<<<<<<
 *     cdef cppPersistentQueue* ptr
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_PRawQueue {
  PyObject_HEAD
  struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue *__pyx_vtab;
  quiet::PersistentQueue *ptr;
};


/* "pcontainers/pqueue.pxi":25
 * 
 * 
 * cdef class PQueue(PRawQueue):             # <<<<<<<<<<<<<<
 *     cdef bytes secret_key
 *     cdef Chain value_chain
 */
struct __pyx_obj_11pcontainers_6_pdict_PQueue {
  struct __pyx_obj_11pcontainers_6_pdict_PRawQueue __pyx_base;
  PyObject *secret_key;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *value_chain;
};


/* "pcontainers/expirydict.pxi":3
 * 
 * 
 * cdef class expiry_dict(object):             # <<<<<<<<<<<<<<
 *     cdef time_t default_expiry
 *     cdef time_t prune_period
 */
struct __pyx_obj_11pcontainers_6_pdict_expiry_dict {
  PyObject_HEAD
  struct __pyx_vtabstruct_11pcontainers_6_pdict_expiry_dict *__pyx_vtab;
  time_t default_expiry;
  time_t prune_period;
  struct __pyx_obj_11pcontainers_6_pdict_PDict *values_dict;
  struct __pyx_obj_11pcontainers_6_pdict_PDict *index_dict;
  PyObject *stopping;
  PyObject *pruning_thread;
};


/* "pcontainers/_pdict.pxd":95
 * include "expirydict.pxi"
 * 
 * cdef class LmdbOptions(object):             # <<<<<<<<<<<<<<
 *     cdef lmdb_options opts
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions {
  PyObject_HEAD
  lmdb::lmdb_options opts;
};


/* "pcontainers/filters.pxi":2
 * 
 * cdef class Filter(object):             # <<<<<<<<<<<<<<
 *     cpdef dumps(self, obj)
 *     cpdef loads(self, obj)
 */
struct __pyx_obj_11pcontainers_6_pdict_Filter {
  PyObject_HEAD
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter *__pyx_vtab;
};


/* "pcontainers/filters.pxi":6
 *     cpdef loads(self, obj)
 * 
 * cdef class Serializer(Filter):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_Serializer {
  struct __pyx_obj_11pcontainers_6_pdict_Filter __pyx_base;
};


/* "pcontainers/filters.pxi":9
 *     pass
 * 
 * cdef class NoneSerializer(Serializer):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer {
  struct __pyx_obj_11pcontainers_6_pdict_Serializer __pyx_base;
};


/* "pcontainers/filters.pxi":12
 *     pass
 * 
 * cdef class PickleSerializer(Serializer):             # <<<<<<<<<<<<<<
 *     cdef object pickle_module
 *     cdef int protocol
 */
struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer {
  struct __pyx_obj_11pcontainers_6_pdict_Serializer __pyx_base;
  PyObject *pickle_module;
  int protocol;
};


/* "pcontainers/filters.pxi":16
 *     cdef int protocol
 * 
 * cdef class MessagePackSerializer(Serializer):             # <<<<<<<<<<<<<<
 *     cdef object messagepack_module
 *     cdef dict mpack_args
 */
struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer {
  struct __pyx_obj_11pcontainers_6_pdict_Serializer __pyx_base;
  PyObject *messagepack_module;
  PyObject *mpack_args;
  PyObject *use_list;
  PyObject *ext_hook;
};


/* "pcontainers/filters.pxi":22
 *     cdef object ext_hook
 * 
 * cdef class JsonSerializer(Serializer):             # <<<<<<<<<<<<<<
 *     cdef object json_module
 *     cdef object default
 */
struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer {
  struct __pyx_obj_11pcontainers_6_pdict_Serializer __pyx_base;
  PyObject *json_module;
  PyObject *__pyx_default;
};


/* "pcontainers/filters.pxi":26
 *     cdef object default
 * 
 * cdef class Signer(Filter):             # <<<<<<<<<<<<<<
 *     cdef bytes secret
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_Signer {
  struct __pyx_obj_11pcontainers_6_pdict_Filter __pyx_base;
  PyObject *secret;
};


/* "pcontainers/filters.pxi":29
 *     cdef bytes secret
 * 
 * cdef class NoneSigner(Signer):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_NoneSigner {
  struct __pyx_obj_11pcontainers_6_pdict_Signer __pyx_base;
};


/* "pcontainers/filters.pxi":32
 *     pass
 * 
 * cdef class HMACSigner(Signer):             # <<<<<<<<<<<<<<
 *     cdef object hmac_module
 *     cdef object hashlib_module
 */
struct __pyx_obj_11pcontainers_6_pdict_HMACSigner {
  struct __pyx_obj_11pcontainers_6_pdict_Signer __pyx_base;
  PyObject *hmac_module;
  PyObject *hashlib_module;
};


/* "pcontainers/filters.pxi":36
 *     cdef object hashlib_module
 * 
 * cdef class Compresser(Filter):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_Compresser {
  struct __pyx_obj_11pcontainers_6_pdict_Filter __pyx_base;
};


/* "pcontainers/filters.pxi":39
 *     pass
 * 
 * cdef class NoneCompresser(Compresser):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser {
  struct __pyx_obj_11pcontainers_6_pdict_Compresser __pyx_base;
};


/* "pcontainers/filters.pxi":42
 *     pass
 * 
 * cdef class SnappyCompresser(Compresser):             # <<<<<<<<<<<<<<
 *     cdef object snappyx_module
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser {
  struct __pyx_obj_11pcontainers_6_pdict_Compresser __pyx_base;
  PyObject *snappyx_module;
};


/* "pcontainers/filters.pxi":45
 *     cdef object snappyx_module
 * 
 * cdef class LZ4Compresser(Compresser):             # <<<<<<<<<<<<<<
 *     cdef object lz4_module
 *     cdef int blocksize_default
 */
struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser {
  struct __pyx_obj_11pcontainers_6_pdict_Compresser __pyx_base;
  PyObject *lz4_module;
  int blocksize_default;
  int compression_min;
  PyObject *block_mode_linked;
  PyObject *checksum;
  int level;
  int block_size_id;
};


/* "pcontainers/filters.pxi":54
 *     cdef int block_size_id
 * 
 * cdef class Chain(Filter):             # <<<<<<<<<<<<<<
 *     cdef Serializer serializer
 *     cdef Signer signer
 */
struct __pyx_obj_11pcontainers_6_pdict_Chain {
  struct __pyx_obj_11pcontainers_6_pdict_Filter __pyx_base;
  struct __pyx_obj_11pcontainers_6_pdict_Serializer *serializer;
  struct __pyx_obj_11pcontainers_6_pdict_Signer *signer;
  struct __pyx_obj_11pcontainers_6_pdict_Compresser *compresser;
};


/* "pcontainers/pdict_impl.pxi":282
 *         return self.keys()
 * 
 *     def keys(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef cppConstIterator it
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys {
  PyObject_HEAD
  quiet::PersistentDict::const_iterator __pyx_v_it;
  MDB_val __pyx_v_k;
  int __pyx_v_keysize;
  PyObject *__pyx_v_obj;
  PyObject *__pyx_v_reverse;
  struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self;
  utils::PyBufferWrap __pyx_v_view;
};


/* "pcontainers/pdict_impl.pxi":302
 *         return self.keys(reverse)
 * 
 *     def values(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values {
  PyObject_HEAD
  quiet::PersistentDict::const_iterator __pyx_v_it;
  PyObject *__pyx_v_reverse;
  struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self;
};


/* "pcontainers/pdict_impl.pxi":318
 *         return self.values(reverse)
 * 
 *     def items(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items {
  PyObject_HEAD
  quiet::PersistentDict::const_iterator __pyx_v_it;
  PyObject *__pyx_v_reverse;
  struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self;
};


/* "pcontainers/pdict_impl.pxi":372
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else make_utf8(v)
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys {
  PyObject_HEAD
  PyObject *__pyx_v_S;
  PyObject *__pyx_v_v;
};


/* "pcontainers/pdict_impl.pxi":376
 *         v = b'' if v is None else make_utf8(v)
 *         if S is not None:
 *             d.update((make_utf8(key), v) for key in S)             # <<<<<<<<<<<<<<
 *         return d
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr {
  PyObject_HEAD
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *__pyx_outer_scope;
  PyObject *__pyx_v_key;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "pcontainers/pdict_impl.pxi":502
 *     # MBufferIO is used from here to avoid any more copy of bytestring arguments
 * 
 *     def keys(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys {
  PyObject_HEAD
  quiet::PersistentDict::const_iterator __pyx_v_it;
  PyObject *__pyx_v_reverse;
  struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self;
};


/* "pcontainers/pdict_impl.pxi":515
 *                 it.incr()
 * 
 *     def values(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values {
  PyObject_HEAD
  quiet::PersistentDict::const_iterator __pyx_v_it;
  PyObject *__pyx_v_reverse;
  struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self;
};


/* "pcontainers/pdict_impl.pxi":528
 *                 it.incr()
 * 
 *     def items(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items {
  PyObject_HEAD
  quiet::PersistentDict::const_iterator __pyx_v_it;
  PyObject *__pyx_v_key;
  PyObject *__pyx_v_reverse;
  struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self;
  PyObject *__pyx_v_val;
};


/* "pcontainers/pdict_impl.pxi":562
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else v
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys {
  PyObject_HEAD
  PyObject *__pyx_v_S;
  PyObject *__pyx_v_v;
};


/* "pcontainers/pdict_impl.pxi":566
 *         v = b'' if v is None else v
 *         if S is not None:
 *             d.update((key, v) for key in S)             # <<<<<<<<<<<<<<
 *         return d
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr {
  PyObject_HEAD
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *__pyx_outer_scope;
  PyObject *__pyx_v_key;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "pcontainers/pqueue_impl.pxi":194
 *         return [self.value_chain.loads(topy(v)) for v in vec]
 * 
 *     def push_front_many(self, vals):             # <<<<<<<<<<<<<<
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_front_many(values_iter)
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many {
  PyObject_HEAD
  struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self;
  PyObject *__pyx_v_vals;
};


/* "pcontainers/pqueue_impl.pxi":195
 * 
 *     def push_front_many(self, vals):
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)             # <<<<<<<<<<<<<<
 *         super(PQueue, self).push_front_many(values_iter)
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr {
  PyObject_HEAD
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *__pyx_outer_scope;
  PyObject *__pyx_v_val;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "pcontainers/pqueue_impl.pxi":198
 *         super(PQueue, self).push_front_many(values_iter)
 * 
 *     def push_back_many(self, vals):             # <<<<<<<<<<<<<<
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_back_many(values_iter)
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many {
  PyObject_HEAD
  struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self;
  PyObject *__pyx_v_vals;
};


/* "pcontainers/pqueue_impl.pxi":199
 * 
 *     def push_back_many(self, vals):
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)             # <<<<<<<<<<<<<<
 *         super(PQueue, self).push_back_many(values_iter)
 * 
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr {
  PyObject_HEAD
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *__pyx_outer_scope;
  PyObject *__pyx_v_val;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "pcontainers/expiry_dict_impl.pxi":175
 *         raise EmptyDatabase()
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ {
  PyObject_HEAD
  time_t __pyx_v_expiry;
  PyObject *__pyx_v_key;
  time_t __pyx_v_now;
  PyObject *__pyx_v_s_expiry;
  struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "pcontainers/expiry_dict_impl.pxi":189
 *         return self.__iter__(self)
 * 
 *     def values(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values {
  PyObject_HEAD
  time_t __pyx_v_expiry;
  PyObject *__pyx_v_key;
  time_t __pyx_v_now;
  PyObject *__pyx_v_s_expiry;
  struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "pcontainers/expiry_dict_impl.pxi":200
 *                     yield self.values_dict[key]
 * 
 *     def items(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items {
  PyObject_HEAD
  time_t __pyx_v_expiry;
  PyObject *__pyx_v_key;
  time_t __pyx_v_now;
  PyObject *__pyx_v_s_expiry;
  struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "pcontainers/_pdict.pyx":31
 * 
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x):
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor {
  PyObject_HEAD
  PyObject *__pyx_v_unary_funct;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain;
};


/* "pcontainers/_pdict.pyx":37
 * 
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x, y):
 *         return value_chain.dumps(
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor {
  PyObject_HEAD
  PyObject *__pyx_v_binary_funct;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain;
};


/* "pcontainers/_pdict.pyx":48
 * 
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x):
 *         return bool(unary_pred(value_chain.loads(x)))
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate {
  PyObject_HEAD
  PyObject *__pyx_v_unary_pred;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain;
};


/* "pcontainers/_pdict.pyx":54
 * 
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x, y):
 *         return bool(
 */
struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate {
  PyObject_HEAD
  PyObject *__pyx_v_binary_pred;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain;
};



/* "pcontainers/pdict_impl.pxi":2
 * 
 * cdef class PRawDict(object):             # <<<<<<<<<<<<<<
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         self.rmrf_at_delete = 0
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict {
  PyObject *(*noiterkeys)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch);
  PyObject *(*noitervalues)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch);
  PyObject *(*noiteritems)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch);
  PyObject *(*erase)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*get)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get *__pyx_optional_args);
  PyObject *(*setdefault)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault *__pyx_optional_args);
  PyObject *(*pop)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop *__pyx_optional_args);
  PyObject *(*popitem)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch);
  PyObject *(*clear)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch);
  PyObject *(*has_key)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*transform_values)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*remove_if)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*iterkeys)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iterkeys *__pyx_optional_args);
  PyObject *(*itervalues)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_itervalues *__pyx_optional_args);
  PyObject *(*iteritems)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iteritems *__pyx_optional_args);
  PyObject *(*copy_to)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to *__pyx_optional_args);
  PyObject *(*move_to)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to *__pyx_optional_args);
  PyObject *(*remove_duplicates)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates *__pyx_optional_args);
  PyObject *(*raw_get_key)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &);
  PyObject *(*raw_get_key_buf)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::iterator &);
  PyObject *(*raw_get_key_buf_const)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &);
  PyObject *(*raw_get_value)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &);
  PyObject *(*raw_get_value_buf)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::iterator &);
  PyObject *(*raw_get_value_buf_const)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &);
  PyObject *(*raw_get_item)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &);
  PyObject *(*raw_get_item_buf)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::iterator &);
  PyObject *(*raw_get_item_buf_const)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &);
  PyObject *(*raw_set_item_buf)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::iterator &, PyObject *, PyObject *);
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *__pyx_vtabptr_11pcontainers_6_pdict_PRawDict;


/* "pcontainers/pdict_impl.pxi":409
 * 
 * 
 * cdef class PDict(PRawDict):             # <<<<<<<<<<<<<<
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         self.key_chain = key_chain if key_chain else Chain(None, None, None)
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *__pyx_vtabptr_11pcontainers_6_pdict_PDict;


/* "pcontainers/pqueue_impl.pxi":2
 * 
 * cdef class PRawQueue(object):             # <<<<<<<<<<<<<<
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue {
  PyObject *(*push_front)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*push_back)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*pop_back)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
  PyObject *(*pop_front)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
  PyObject *(*pop_all)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
  PyObject *(*clear)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
  PyObject *(*empty)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
  PyObject *(*qsize)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
  PyObject *(*full)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
  PyObject *(*put)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_put *__pyx_optional_args);
  PyObject *(*get)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_get *__pyx_optional_args);
  PyObject *(*put_nowait)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*get_nowait)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
  PyObject *(*transform_values)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*remove_if)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*move_to)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to *__pyx_optional_args);
  PyObject *(*remove_duplicates)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue *__pyx_vtabptr_11pcontainers_6_pdict_PRawQueue;


/* "pcontainers/pqueue_impl.pxi":154
 * 
 * 
 * cdef class PQueue(PRawQueue):             # <<<<<<<<<<<<<<
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_PQueue {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PQueue *__pyx_vtabptr_11pcontainers_6_pdict_PQueue;


/* "pcontainers/expiry_dict_impl.pxi":2
 * 
 * cdef class expiry_dict(object):             # <<<<<<<<<<<<<<
 *     def __init__(self, PDict values_dict, PDict index_dict, time_t default_expiry=3600, time_t prune_period=5):
 *         if not values_dict:
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_expiry_dict {
  PyObject *(*get)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_get *__pyx_optional_args);
  PyObject *(*set)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, PyObject *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_set *__pyx_optional_args);
  PyObject *(*pop)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_pop *__pyx_optional_args);
  PyObject *(*popitem)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, int __pyx_skip_dispatch);
  PyObject *(*prune_expired)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_expiry_dict *__pyx_vtabptr_11pcontainers_6_pdict_expiry_dict;


/* "pcontainers/filters_impl.pxi":3
 * 
 * 
 * cdef class Filter(object):             # <<<<<<<<<<<<<<
 *     cpdef dumps(self, obj):
 *         raise NotImplementedError()
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter {
  PyObject *(*dumps)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*loads)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter *__pyx_vtabptr_11pcontainers_6_pdict_Filter;


/* "pcontainers/filters_impl.pxi":10
 * 
 * # noinspection PyAbstractClass
 * cdef class Serializer(Filter):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer *__pyx_vtabptr_11pcontainers_6_pdict_Serializer;


/* "pcontainers/filters_impl.pxi":14
 * 
 * 
 * cdef class NoneSerializer(Serializer):             # <<<<<<<<<<<<<<
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneSerializer {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneSerializer *__pyx_vtabptr_11pcontainers_6_pdict_NoneSerializer;


/* "pcontainers/filters_impl.pxi":27
 * 
 * 
 * cdef class PickleSerializer(Serializer):             # <<<<<<<<<<<<<<
 *     def __init__(self, protocol=2):
 *         if self.pickle_module is None:
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_PickleSerializer {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PickleSerializer *__pyx_vtabptr_11pcontainers_6_pdict_PickleSerializer;


/* "pcontainers/filters_impl.pxi":51
 * 
 * 
 * cdef class MessagePackSerializer(Serializer):             # <<<<<<<<<<<<<<
 *     def __init__(self, unicode_errors='strict', use_single_float=False, use_list=True, default=None, ext_hook=None):
 *         if self.messagepack_module is None:
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_MessagePackSerializer {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_MessagePackSerializer *__pyx_vtabptr_11pcontainers_6_pdict_MessagePackSerializer;


/* "pcontainers/filters_impl.pxi":79
 *         )
 * 
 * cdef class JsonSerializer(Serializer):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, default=None):
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_JsonSerializer {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_JsonSerializer *__pyx_vtabptr_11pcontainers_6_pdict_JsonSerializer;


/* "pcontainers/filters_impl.pxi":106
 * 
 * # noinspection PyAbstractClass
 * cdef class Signer(Filter):             # <<<<<<<<<<<<<<
 *     def __init__(self, bytes secret=b''):
 *         self.secret = secret
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_Signer {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Signer *__pyx_vtabptr_11pcontainers_6_pdict_Signer;


/* "pcontainers/filters_impl.pxi":111
 * 
 * 
 * cdef class NoneSigner(Signer):             # <<<<<<<<<<<<<<
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneSigner {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Signer __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneSigner *__pyx_vtabptr_11pcontainers_6_pdict_NoneSigner;


/* "pcontainers/filters_impl.pxi":124
 * 
 * 
 * cdef class HMACSigner(Signer):             # <<<<<<<<<<<<<<
 *     def __init__(self, secret):
 *         super(HMACSigner, self).__init__(secret)
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_HMACSigner {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Signer __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_HMACSigner *__pyx_vtabptr_11pcontainers_6_pdict_HMACSigner;


/* "pcontainers/filters_impl.pxi":157
 * 
 * # noinspection PyAbstractClass
 * cdef class Compresser(Filter):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_Compresser {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Compresser *__pyx_vtabptr_11pcontainers_6_pdict_Compresser;


/* "pcontainers/filters_impl.pxi":161
 * 
 * 
 * cdef class NoneCompresser(Compresser):             # <<<<<<<<<<<<<<
 *     cpdef dumps(self, obj):
 *         return obj
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneCompresser {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Compresser __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneCompresser *__pyx_vtabptr_11pcontainers_6_pdict_NoneCompresser;


/* "pcontainers/filters_impl.pxi":168
 * 
 * 
 * cdef class SnappyCompresser(Compresser):             # <<<<<<<<<<<<<<
 *     def __init__(self):
 *         if self.snappyx_module is None:
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_SnappyCompresser {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Compresser __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_SnappyCompresser *__pyx_vtabptr_11pcontainers_6_pdict_SnappyCompresser;


/* "pcontainers/filters_impl.pxi":180
 * 
 * 
 * cdef class LZ4Compresser(Compresser):             # <<<<<<<<<<<<<<
 *     def __init__(self, level=None, block_size_id=None, block_mode_linked=True, checksum=True):
 *         if self.lz4_module is None:
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_LZ4Compresser {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Compresser __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_LZ4Compresser *__pyx_vtabptr_11pcontainers_6_pdict_LZ4Compresser;


/* "pcontainers/filters_impl.pxi":216
 * 
 * 
 * cdef class Chain(Filter):             # <<<<<<<<<<<<<<
 *     def __init__(self, Serializer serializer=None, Signer signer=None, Compresser compresser=None):
 *         self.serializer = serializer if serializer else NoneSerializer()
 */

struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain {
  struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter __pyx_base;
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *__pyx_vtabptr_11pcontainers_6_pdict_Chain;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o,n,NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_EqObjC(op1, op2, intval, inplace)\
    PyObject_RichCompare(op1, op2, Py_EQ)
    #endif

#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb);
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb);

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE int __Pyx_IterFinish(void);

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** value1, PyObject** value2,
                                             int is_tuple, int has_known_size, int decref_tuple);

static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

#include <string.h>

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return __Pyx_PyObject_GetAttrStr(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#else
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

#define __Pyx_CyFunction_USED 1
#include <structmember.h>
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_NewEx(ml, flags, qualname, self, module, globals, code)\
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, qualname, self, module, globals, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

#include <new>

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE time_t __Pyx_PyInt_As_time_t(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value);

static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_time_t(time_t value);

#include "descrobject.h"
static PyObject* __Pyx_Method_ClassMethod(PyObject *method);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyObject *);
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(PyTypeObject *type, __pyx_coroutine_body_t body,
                                                   PyObject *closure, PyObject *name, PyObject *qualname);
static int __Pyx_Coroutine_clear(PyObject *self);
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue);
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue) PyGen_FetchStopIterationValue(pvalue)
#endif

static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

static int __Pyx_patch_abc(void);

#define __Pyx_Generator_USED
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_New(body, closure, name, qualname)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, closure, name, qualname)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(void);

static int __Pyx_check_binary_version(void);

static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_ImportVoidPtr(PyObject *module, const char *name, void **p, const char *sig);

static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key_buf(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key_buf_const(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value_buf(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value_buf_const(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item_buf(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item_buf_const(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_set_item_buf(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::iterator &__pyx_v_it, PyObject *__pyx_v_k, PyObject *__pyx_v_v); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_get(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_item, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_setdefault(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_erase(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_noiterkeys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_noitervalues(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_noiteritems(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_pop(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_popitem(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_iterkeys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iterkeys *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_itervalues(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_itervalues *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_iteritems(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iteritems *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_clear(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_has_key(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_transform_values(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_binary_funct, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_remove_if(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_binary_pred, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_copy_to(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_move_to(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_get(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_get *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_setdefault(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_setdefault *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_erase(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_first, CYTHON_UNUSED PyObject *__pyx_v_last, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_noiterkeys(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_noitervalues(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_noiteritems(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_pop(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_pop *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_popitem(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_transform_values(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_binary_funct, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_remove_if(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_binary_pred, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_copy_to(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_copy_to *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_move_to(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_move_to *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_remove_duplicates *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_empty(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_qsize(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_full(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_clear(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_push_front(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_val, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_push_back(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_val, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_put(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_item, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_put *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_put_nowait(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_item, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_back(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_front(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_all(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_get(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_get *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_get_nowait(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_transform_values(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_unary_funct, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_remove_if(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_unary_pred, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_move_to(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_push_front(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_val, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_push_back(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_val, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_pop_back(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_pop_front(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_pop_all(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_transform_values(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_unary_funct, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_remove_if(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_unary_pred, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_move_to(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_6PQueue_move_to *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_prune_expired(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_get(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_get *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_set(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_set *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_pop(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_pop *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_popitem(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6Filter_dumps(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Filter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6Filter_loads(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Filter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14NoneSerializer_dumps(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14NoneSerializer_loads(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_16PickleSerializer_dumps(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_16PickleSerializer_loads(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_21MessagePackSerializer_dumps(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_21MessagePackSerializer_loads(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14JsonSerializer_dumps(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14JsonSerializer_loads(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_10NoneSigner_dumps(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_10NoneSigner_loads(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_10HMACSigner_dumps(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_10HMACSigner_loads(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14NoneCompresser_dumps(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14NoneCompresser_loads(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_16SnappyCompresser_dumps(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_16SnappyCompresser_loads(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_13LZ4Compresser_dumps(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_13LZ4Compresser_loads(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5Chain_dumps(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5Chain_loads(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libc.stddef' */

/* Module declarations from 'libc.time' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'pcontainers._py_exceptions' */
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_lmdb_error = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_lmdb_error (*__pyx_vp_11pcontainers_14_py_exceptions_py_lmdb_error)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_not_initialized = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_not_initialized (*__pyx_vp_11pcontainers_14_py_exceptions_py_not_initialized)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_access_error = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_access_error (*__pyx_vp_11pcontainers_14_py_exceptions_py_access_error)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_key_exist = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_key_exist (*__pyx_vp_11pcontainers_14_py_exceptions_py_key_exist)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_not_found = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_not_found (*__pyx_vp_11pcontainers_14_py_exceptions_py_not_found)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_empty_key = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_empty_key (*__pyx_vp_11pcontainers_14_py_exceptions_py_empty_key)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_empty_database = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_empty_database (*__pyx_vp_11pcontainers_14_py_exceptions_py_empty_database)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_page_not_found = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_page_not_found (*__pyx_vp_11pcontainers_14_py_exceptions_py_page_not_found)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_corrupted = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_corrupted (*__pyx_vp_11pcontainers_14_py_exceptions_py_corrupted)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_panic = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_panic (*__pyx_vp_11pcontainers_14_py_exceptions_py_panic)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_version_mismatch = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_version_mismatch (*__pyx_vp_11pcontainers_14_py_exceptions_py_version_mismatch)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_invalid = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_invalid (*__pyx_vp_11pcontainers_14_py_exceptions_py_invalid)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_map_full = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_map_full (*__pyx_vp_11pcontainers_14_py_exceptions_py_map_full)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_dbs_full = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_dbs_full (*__pyx_vp_11pcontainers_14_py_exceptions_py_dbs_full)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_readers_full = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_readers_full (*__pyx_vp_11pcontainers_14_py_exceptions_py_readers_full)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_tls_full = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_tls_full (*__pyx_vp_11pcontainers_14_py_exceptions_py_tls_full)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_txn_full = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_txn_full (*__pyx_vp_11pcontainers_14_py_exceptions_py_txn_full)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_cursor_full = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_cursor_full (*__pyx_vp_11pcontainers_14_py_exceptions_py_cursor_full)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_page_full = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_page_full (*__pyx_vp_11pcontainers_14_py_exceptions_py_page_full)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_map_resized = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_map_resized (*__pyx_vp_11pcontainers_14_py_exceptions_py_map_resized)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_incompatible = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_incompatible (*__pyx_vp_11pcontainers_14_py_exceptions_py_incompatible)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_bad_rslot = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_bad_rslot (*__pyx_vp_11pcontainers_14_py_exceptions_py_bad_rslot)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_bad_txn = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_bad_txn (*__pyx_vp_11pcontainers_14_py_exceptions_py_bad_txn)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_bad_val_size = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_bad_val_size (*__pyx_vp_11pcontainers_14_py_exceptions_py_bad_val_size)
static PyObject **__pyx_vp_11pcontainers_14_py_exceptions_py_bad_dbi = 0;
#define __pyx_v_11pcontainers_14_py_exceptions_py_bad_dbi (*__pyx_vp_11pcontainers_14_py_exceptions_py_bad_dbi)
static void (*__pyx_f_11pcontainers_14_py_exceptions_custom_handler)(void); /*proto*/

/* Module declarations from 'pcontainers._pdict' */
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_PRawDict = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_PDict = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_PRawQueue = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_PQueue = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_expiry_dict = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_LmdbOptions = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_Filter = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_Serializer = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_NoneSerializer = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_PickleSerializer = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_MessagePackSerializer = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_JsonSerializer = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_Signer = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_NoneSigner = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_HMACSigner = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_Compresser = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_NoneCompresser = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_SnappyCompresser = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_LZ4Compresser = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict_Chain = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct__keys = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_1_values = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_2_items = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_5_keys = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_6_values = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_7_items = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_15_values = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_16_items = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate = 0;
static PyTypeObject *__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate = 0;
static CYTHON_INLINE PyObject *__pyx_f_11pcontainers_6_pdict_topy(Bstrlib::CBString const &); /*proto*/
static CYTHON_INLINE Bstrlib::CBString __pyx_f_11pcontainers_6_pdict_tocbstring(PyObject *); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_set_logger(int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_set_logger *__pyx_optional_args); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_set_python_logger(PyObject *, int __pyx_skip_dispatch); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_11pcontainers_6_pdict_make_unicode(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_11pcontainers_6_pdict_make_utf8(PyObject *); /*proto*/
static CYTHON_INLINE void *__pyx_f_11pcontainers_6_pdict_copy_mdb_val(MDB_val); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_11pcontainers_6_pdict_make_mbufferio(void *, size_t); /*proto*/
#define __Pyx_MODULE_NAME "pcontainers._pdict"
int __pyx_module_is_main_pcontainers___pdict = 0;

/* Implementation of 'pcontainers._pdict' */
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_super;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_ImportError;
static char __pyx_k_S[] = "S";
static char __pyx_k_e[] = "e";
static char __pyx_k_v[] = "v";
static char __pyx_k_x[] = "x";
static char __pyx_k_y[] = "y";
static char __pyx_k__5[] = "";
static char __pyx_k__19[] = ",";
static char __pyx_k__20[] = ":";
static char __pyx_k_get[] = "get";
static char __pyx_k_key[] = "key";
static char __pyx_k_new[] = "new";
static char __pyx_k_pop[] = "pop";
static char __pyx_k_put[] = "put";
static char __pyx_k_set[] = "set";
static char __pyx_k_INFO[] = "INFO";
static char __pyx_k_args[] = "args";
static char __pyx_k_dump[] = "dump";
static char __pyx_k_exit[] = "__exit__";
static char __pyx_k_full[] = "full";
static char __pyx_k_hmac[] = "hmac";
static char __pyx_k_init[] = "__init__";
static char __pyx_k_item[] = "item";
static char __pyx_k_iter[] = "__iter__";
static char __pyx_k_join[] = "join";
static char __pyx_k_json[] = "json";
static char __pyx_k_keys[] = "keys";
static char __pyx_k_last[] = "last";
static char __pyx_k_load[] = "load";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_none[] = "none";
static char __pyx_k_opts[] = "opts";
static char __pyx_k_pack[] = "pack";
static char __pyx_k_read[] = "read";
static char __pyx_k_seek[] = "seek";
static char __pyx_k_send[] = "send";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_time[] = "time";
static char __pyx_k_uuid[] = "uuid";
static char __pyx_k_wait[] = "wait";
static char __pyx_k_DEBUG[] = "DEBUG";
static char __pyx_k_ERROR[] = "ERROR";
static char __pyx_k_Empty[] = "Empty";
static char __pyx_k_Event[] = "Event";
static char __pyx_k_block[] = "block";
static char __pyx_k_bytes[] = "__bytes__";
static char __pyx_k_clear[] = "clear";
static char __pyx_k_close[] = "close";
static char __pyx_k_dumps[] = "dumps";
static char __pyx_k_empty[] = "empty";
static char __pyx_k_enter[] = "__enter__";
static char __pyx_k_erase[] = "erase";
static char __pyx_k_first[] = "first";
static char __pyx_k_items[] = "items";
static char __pyx_k_level[] = "level";
static char __pyx_k_loads[] = "loads";
static char __pyx_k_other[] = "other";
static char __pyx_k_qsize[] = "qsize";
static char __pyx_k_queue[] = "queue";
static char __pyx_k_sleep[] = "sleep";
static char __pyx_k_start[] = "start";
static char __pyx_k_super[] = "super";
static char __pyx_k_throw[] = "throw";
static char __pyx_k_utf_8[] = "utf-8";
static char __pyx_k_uuid4[] = "uuid4";
static char __pyx_k_value[] = "value";
static char __pyx_k_write[] = "write";
static char __pyx_k_NOTSET[] = "NOTSET";
static char __pyx_k_Thread[] = "Thread";
static char __pyx_k_dbname[] = "dbname";
static char __pyx_k_decode[] = "decode";
static char __pyx_k_digest[] = "digest";
static char __pyx_k_exc_tb[] = "exc_tb";
static char __pyx_k_expiry[] = "expiry";
static char __pyx_k_format[] = "format";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_indent[] = "indent";
static char __pyx_k_is_set[] = "is_set";
static char __pyx_k_no_tls[] = "no_tls";
static char __pyx_k_pickle[] = "pickle";
static char __pyx_k_rmtree[] = "rmtree";
static char __pyx_k_secret[] = "secret";
static char __pyx_k_sha256[] = "sha256";
static char __pyx_k_shutil[] = "shutil";
static char __pyx_k_signer[] = "signer";
static char __pyx_k_strict[] = "strict";
static char __pyx_k_target[] = "target";
static char __pyx_k_unpack[] = "unpack";
static char __pyx_k_update[] = "update";
static char __pyx_k_values[] = "values";
static char __pyx_k_ExtType[] = "ExtType";
static char __pyx_k_WARNING[] = "WARNING";
static char __pyx_k_cPickle[] = "cPickle";
static char __pyx_k_copy_to[] = "copy_to";
static char __pyx_k_default[] = "default";
static char __pyx_k_destroy[] = "destroy";
static char __pyx_k_dirname[] = "dirname";
static char __pyx_k_exc_val[] = "exc_val";
static char __pyx_k_functor[] = "functor";
static char __pyx_k_genexpr[] = "genexpr";
static char __pyx_k_has_key[] = "has_key";
static char __pyx_k_hashlib[] = "hashlib";
static char __pyx_k_logging[] = "logging";
static char __pyx_k_mapping[] = "mapping";
static char __pyx_k_max_dbs[] = "max_dbs";
static char __pyx_k_move_to[] = "move_to";
static char __pyx_k_msgpack[] = "msgpack";
static char __pyx_k_no_lock[] = "no_lock";
static char __pyx_k_no_sync[] = "no_sync";
static char __pyx_k_pop_all[] = "pop_all";
static char __pyx_k_popitem[] = "popitem";
static char __pyx_k_reverse[] = "reverse";
static char __pyx_k_snappyx[] = "snappyx";
static char __pyx_k_timeout[] = "timeout";
static char __pyx_k_tobytes[] = "tobytes";
static char __pyx_k_unicode[] = "__unicode__";
static char __pyx_k_CRITICAL[] = "CRITICAL";
static char __pyx_k_NotFound[] = "NotFound";
static char __pyx_k_checksum[] = "checksum";
static char __pyx_k_compress[] = "compress";
static char __pyx_k_encoding[] = "encoding";
static char __pyx_k_exc_type[] = "exc_type";
static char __pyx_k_ext_hook[] = "ext_hook";
static char __pyx_k_fromkeys[] = "fromkeys";
static char __pyx_k_iterkeys[] = "iterkeys";
static char __pyx_k_map_size[] = "map_size";
static char __pyx_k_pop_back[] = "pop_back";
static char __pyx_k_protocol[] = "protocol";
static char __pyx_k_register[] = "register";
static char __pyx_k_skipkeys[] = "skipkeys";
static char __pyx_k_use_list[] = "use_list";
static char __pyx_k_MBufferIO[] = "MBufferIO";
static char __pyx_k_TypeError[] = "TypeError";
static char __pyx_k_allow_nan[] = "allow_nan";
static char __pyx_k_autoflush[] = "autoflush";
static char __pyx_k_fixed_map[] = "fixed_map";
static char __pyx_k_iteritems[] = "iteritems";
static char __pyx_k_key_chain[] = "key_chain";
static char __pyx_k_lz4framed[] = "lz4framed";
static char __pyx_k_make_temp[] = "make_temp";
static char __pyx_k_map_async[] = "map_async";
static char __pyx_k_mbufferio[] = "mbufferio";
static char __pyx_k_no_subdir[] = "no_subdir";
static char __pyx_k_pop_front[] = "pop_front";
static char __pyx_k_predicate[] = "predicate";
static char __pyx_k_push_back[] = "push_back";
static char __pyx_k_read_only[] = "read_only";
static char __pyx_k_remove_if[] = "remove_if";
static char __pyx_k_threading[] = "threading";
static char __pyx_k_write_map[] = "write_map";
static char __pyx_k_Compressor[] = "Compressor";
static char __pyx_k_PDict_keys[] = "PDict.keys";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_chunk_size[] = "chunk_size";
static char __pyx_k_compresser[] = "compresser";
static char __pyx_k_decompress[] = "decompress";
static char __pyx_k_from_mview[] = "from_mview";
static char __pyx_k_get_nowait[] = "get_nowait";
static char __pyx_k_index_dict[] = "index_dict";
static char __pyx_k_itervalues[] = "itervalues";
static char __pyx_k_noiterkeys[] = "noiterkeys";
static char __pyx_k_push_front[] = "push_front";
static char __pyx_k_put_nowait[] = "put_nowait";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_separators[] = "separators";
static char __pyx_k_serializer[] = "serializer";
static char __pyx_k_setdefault[] = "setdefault";
static char __pyx_k_simplejson[] = "simplejson";
static char __pyx_k_unary_pred[] = "unary_pred";
static char __pyx_k_ImportError[] = "ImportError";
static char __pyx_k_PDict_items[] = "PDict.items";
static char __pyx_k_binary_pred[] = "binary_pred";
static char __pyx_k_collections[] = "collections";
static char __pyx_k_max_readers[] = "max_readers";
static char __pyx_k_no_mem_init[] = "no_mem_init";
static char __pyx_k_noiteritems[] = "noiteritems";
static char __pyx_k_unary_funct[] = "unary_funct";
static char __pyx_k_value_chain[] = "value_chain";
static char __pyx_k_values_dict[] = "values_dict";
static char __pyx_k_Decompressor[] = "Decompressor";
static char __pyx_k_PDict_values[] = "PDict.values";
static char __pyx_k_binary_funct[] = "binary_funct";
static char __pyx_k_ensure_ascii[] = "ensure_ascii";
static char __pyx_k_no_meta_sync[] = "no_meta_sync";
static char __pyx_k_noitervalues[] = "noitervalues";
static char __pyx_k_prune_period[] = "prune_period";
static char __pyx_k_use_bin_type[] = "use_bin_type";
static char __pyx_k_EmptyDatabase[] = "EmptyDatabase";
static char __pyx_k_PRawDict_keys[] = "PRawDict.keys";
static char __pyx_k_block_size_id[] = "block_size_id";
static char __pyx_k_empty_dirname[] = "empty dirname";
static char __pyx_k_no_read_ahead[] = "no_read_ahead";
static char __pyx_k_prune_expired[] = "prune_expired";
static char __pyx_k_py_exceptions[] = "_py_exceptions";
static char __pyx_k_MutableMapping[] = "MutableMapping";
static char __pyx_k_PRawDict_items[] = "PRawDict.items";
static char __pyx_k_check_circular[] = "check_circular";
static char __pyx_k_compare_digest[] = "compare_digest";
static char __pyx_k_default_expiry[] = "default_expiry";
static char __pyx_k_push_back_many[] = "push_back_many";
static char __pyx_k_unicode_errors[] = "unicode_errors";
static char __pyx_k_PRawDict_values[] = "PRawDict.values";
static char __pyx_k_push_front_many[] = "push_front_many";
static char __pyx_k_transform_values[] = "transform_values";
static char __pyx_k_use_single_float[] = "use_single_float";
static char __pyx_k_block_mode_linked[] = "block_mode_linked";
static char __pyx_k_expiry_dict_items[] = "expiry_dict.items";
static char __pyx_k_remove_duplicates[] = "remove_duplicates";
static char __pyx_k_expiry_dict___iter[] = "expiry_dict.__iter__";
static char __pyx_k_expiry_dict_values[] = "expiry_dict.values";
static char __pyx_k_pcontainers__pdict[] = "pcontainers._pdict";
static char __pyx_k_pruning_thread_fun[] = "pruning_thread_fun";
static char __pyx_k_NotImplementedError[] = "NotImplementedError";
static char __pyx_k_adapt_unary_functor[] = "_adapt_unary_functor";
static char __pyx_k_LZ4F_COMPRESSION_MIN[] = "LZ4F_COMPRESSION_MIN";
static char __pyx_k_Lz4FramedNoDataError[] = "Lz4FramedNoDataError";
static char __pyx_k_PDict_dbname_dirname[] = "PDict(dbname='{}', dirname='{}')";
static char __pyx_k_adapt_binary_functor[] = "_adapt_binary_functor";
static char __pyx_k_PQueue_dbname_dirname[] = "PQueue(dbname='{}', dirname='{}')";
static char __pyx_k_adapt_unary_predicate[] = "_adapt_unary_predicate";
static char __pyx_k_LZ4F_BLOCKSIZE_DEFAULT[] = "LZ4F_BLOCKSIZE_DEFAULT";
static char __pyx_k_adapt_binary_predicate[] = "_adapt_binary_predicate";
static char __pyx_k_unsupported_comparison[] = "unsupported comparison";
static char __pyx_k_PRawDict_dbname_dirname[] = "PRawDict(dbname='{}', dirname='{}')";
static char __pyx_k_fromkeys_locals_genexpr[] = "fromkeys.<locals>.genexpr";
static char __pyx_k_PRawQueue_dbname_dirname[] = "PRawQueue(dbname='{}', dirname='{}')";
static char __pyx_k_index_dict_is_not_initialized[] = "index_dict is not initialized";
static char __pyx_k_push_back_many_locals_genexpr[] = "push_back_many.<locals>.genexpr";
static char __pyx_k_push_front_many_locals_genexpr[] = "push_front_many.<locals>.genexpr";
static char __pyx_k_timeout_must_be_a_non_negative[] = "'timeout' must be a non-negative number";
static char __pyx_k_values_dict_is_not_initialized[] = "values_dict is not initialized";
static char __pyx_k_HMAC_check_failed_data_has_been[] = "HMAC check failed : data has been tampered ?";
static char __pyx_k_Users_stef_Documents_Seafile_de[] = "/Users/stef/Documents/Seafile/dev/persistentcontainers/pcontainers/_pdict.pyx";
static char __pyx_k_adapt_binary_functor_locals_fun[] = "_adapt_binary_functor.<locals>.functor";
static char __pyx_k_adapt_binary_predicate_locals_p[] = "_adapt_binary_predicate.<locals>.predicate";
static char __pyx_k_adapt_unary_functor_locals_func[] = "_adapt_unary_functor.<locals>.functor";
static char __pyx_k_adapt_unary_predicate_locals_pr[] = "_adapt_unary_predicate.<locals>.predicate";
static char __pyx_k_prune_period_must_be_strictly_po[] = "prune_period must be strictly positive";
static char __pyx_k_values_dict_and_index_dict_can_n[] = "values_dict and index_dict can not point to the same LMDB database";
static PyObject *__pyx_n_s_CRITICAL;
static PyObject *__pyx_n_s_Compressor;
static PyObject *__pyx_n_s_DEBUG;
static PyObject *__pyx_n_s_Decompressor;
static PyObject *__pyx_n_s_ERROR;
static PyObject *__pyx_n_s_Empty;
static PyObject *__pyx_n_s_EmptyDatabase;
static PyObject *__pyx_n_s_Event;
static PyObject *__pyx_n_s_ExtType;
static PyObject *__pyx_kp_s_HMAC_check_failed_data_has_been;
static PyObject *__pyx_n_s_INFO;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_n_s_LZ4F_BLOCKSIZE_DEFAULT;
static PyObject *__pyx_n_s_LZ4F_COMPRESSION_MIN;
static PyObject *__pyx_n_s_Lz4FramedNoDataError;
static PyObject *__pyx_n_s_MBufferIO;
static PyObject *__pyx_n_s_MutableMapping;
static PyObject *__pyx_n_s_NOTSET;
static PyObject *__pyx_n_s_NotFound;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_kp_u_PDict_dbname_dirname;
static PyObject *__pyx_n_s_PDict_items;
static PyObject *__pyx_n_s_PDict_keys;
static PyObject *__pyx_n_s_PDict_values;
static PyObject *__pyx_kp_u_PQueue_dbname_dirname;
static PyObject *__pyx_kp_u_PRawDict_dbname_dirname;
static PyObject *__pyx_n_s_PRawDict_items;
static PyObject *__pyx_n_s_PRawDict_keys;
static PyObject *__pyx_n_s_PRawDict_values;
static PyObject *__pyx_kp_u_PRawQueue_dbname_dirname;
static PyObject *__pyx_n_s_S;
static PyObject *__pyx_n_s_Thread;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_kp_s_Users_stef_Documents_Seafile_de;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_WARNING;
static PyObject *__pyx_kp_s__19;
static PyObject *__pyx_kp_s__20;
static PyObject *__pyx_kp_b__5;
static PyObject *__pyx_kp_s__5;
static PyObject *__pyx_kp_u__5;
static PyObject *__pyx_n_s_adapt_binary_functor;
static PyObject *__pyx_n_s_adapt_binary_functor_locals_fun;
static PyObject *__pyx_n_s_adapt_binary_predicate;
static PyObject *__pyx_n_s_adapt_binary_predicate_locals_p;
static PyObject *__pyx_n_s_adapt_unary_functor;
static PyObject *__pyx_n_s_adapt_unary_functor_locals_func;
static PyObject *__pyx_n_s_adapt_unary_predicate;
static PyObject *__pyx_n_s_adapt_unary_predicate_locals_pr;
static PyObject *__pyx_n_s_allow_nan;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_autoflush;
static PyObject *__pyx_n_s_binary_funct;
static PyObject *__pyx_n_s_binary_pred;
static PyObject *__pyx_n_s_block;
static PyObject *__pyx_n_s_block_mode_linked;
static PyObject *__pyx_n_s_block_size_id;
static PyObject *__pyx_n_s_bytes;
static PyObject *__pyx_n_s_cPickle;
static PyObject *__pyx_n_s_check_circular;
static PyObject *__pyx_n_s_checksum;
static PyObject *__pyx_n_s_chunk_size;
static PyObject *__pyx_n_s_clear;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_collections;
static PyObject *__pyx_n_s_compare_digest;
static PyObject *__pyx_n_s_compress;
static PyObject *__pyx_n_s_compresser;
static PyObject *__pyx_n_s_copy_to;
static PyObject *__pyx_n_s_dbname;
static PyObject *__pyx_n_s_decode;
static PyObject *__pyx_n_s_decompress;
static PyObject *__pyx_n_s_default;
static PyObject *__pyx_n_s_default_expiry;
static PyObject *__pyx_n_s_destroy;
static PyObject *__pyx_n_s_digest;
static PyObject *__pyx_n_s_dirname;
static PyObject *__pyx_n_s_dump;
static PyObject *__pyx_n_s_dumps;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_empty;
static PyObject *__pyx_kp_s_empty_dirname;
static PyObject *__pyx_n_s_encoding;
static PyObject *__pyx_n_s_ensure_ascii;
static PyObject *__pyx_n_s_enter;
static PyObject *__pyx_n_s_erase;
static PyObject *__pyx_n_s_exc_tb;
static PyObject *__pyx_n_s_exc_type;
static PyObject *__pyx_n_s_exc_val;
static PyObject *__pyx_n_s_exit;
static PyObject *__pyx_n_s_expiry;
static PyObject *__pyx_n_s_expiry_dict___iter;
static PyObject *__pyx_n_s_expiry_dict_items;
static PyObject *__pyx_n_s_expiry_dict_values;
static PyObject *__pyx_n_s_ext_hook;
static PyObject *__pyx_n_s_first;
static PyObject *__pyx_n_s_fixed_map;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_from_mview;
static PyObject *__pyx_n_s_fromkeys;
static PyObject *__pyx_n_s_fromkeys_locals_genexpr;
static PyObject *__pyx_n_s_full;
static PyObject *__pyx_n_s_functor;
static PyObject *__pyx_n_s_genexpr;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_get_nowait;
static PyObject *__pyx_n_s_has_key;
static PyObject *__pyx_n_s_hashlib;
static PyObject *__pyx_n_s_hmac;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_indent;
static PyObject *__pyx_n_s_index_dict;
static PyObject *__pyx_kp_s_index_dict_is_not_initialized;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_is_set;
static PyObject *__pyx_n_s_item;
static PyObject *__pyx_n_s_items;
static PyObject *__pyx_n_s_iter;
static PyObject *__pyx_n_s_iteritems;
static PyObject *__pyx_n_s_iterkeys;
static PyObject *__pyx_n_s_itervalues;
static PyObject *__pyx_n_s_join;
static PyObject *__pyx_n_s_json;
static PyObject *__pyx_n_s_key;
static PyObject *__pyx_n_s_key_chain;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_last;
static PyObject *__pyx_n_s_level;
static PyObject *__pyx_n_s_load;
static PyObject *__pyx_n_s_loads;
static PyObject *__pyx_n_s_logging;
static PyObject *__pyx_n_s_lz4framed;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_make_temp;
static PyObject *__pyx_n_s_map_async;
static PyObject *__pyx_n_s_map_size;
static PyObject *__pyx_n_s_mapping;
static PyObject *__pyx_n_s_max_dbs;
static PyObject *__pyx_n_s_max_readers;
static PyObject *__pyx_n_s_mbufferio;
static PyObject *__pyx_n_s_move_to;
static PyObject *__pyx_n_s_msgpack;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_n_s_no_lock;
static PyObject *__pyx_n_s_no_mem_init;
static PyObject *__pyx_n_s_no_meta_sync;
static PyObject *__pyx_n_s_no_read_ahead;
static PyObject *__pyx_n_s_no_subdir;
static PyObject *__pyx_n_s_no_sync;
static PyObject *__pyx_n_s_no_tls;
static PyObject *__pyx_n_s_noiteritems;
static PyObject *__pyx_n_s_noiterkeys;
static PyObject *__pyx_n_s_noitervalues;
static PyObject *__pyx_n_b_none;
static PyObject *__pyx_n_s_opts;
static PyObject *__pyx_n_s_other;
static PyObject *__pyx_n_s_pack;
static PyObject *__pyx_n_s_pcontainers__pdict;
static PyObject *__pyx_n_s_pickle;
static PyObject *__pyx_n_s_pop;
static PyObject *__pyx_n_s_pop_all;
static PyObject *__pyx_n_s_pop_back;
static PyObject *__pyx_n_s_pop_front;
static PyObject *__pyx_n_s_popitem;
static PyObject *__pyx_n_s_predicate;
static PyObject *__pyx_n_s_protocol;
static PyObject *__pyx_n_s_prune_expired;
static PyObject *__pyx_n_s_prune_period;
static PyObject *__pyx_kp_s_prune_period_must_be_strictly_po;
static PyObject *__pyx_n_s_pruning_thread_fun;
static PyObject *__pyx_n_s_push_back;
static PyObject *__pyx_n_s_push_back_many;
static PyObject *__pyx_n_s_push_back_many_locals_genexpr;
static PyObject *__pyx_n_s_push_front;
static PyObject *__pyx_n_s_push_front_many;
static PyObject *__pyx_n_s_push_front_many_locals_genexpr;
static PyObject *__pyx_n_s_put;
static PyObject *__pyx_n_s_put_nowait;
static PyObject *__pyx_n_s_py_exceptions;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_qsize;
static PyObject *__pyx_n_s_queue;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_s_read_only;
static PyObject *__pyx_n_s_register;
static PyObject *__pyx_n_s_remove_duplicates;
static PyObject *__pyx_n_s_remove_if;
static PyObject *__pyx_n_s_reverse;
static PyObject *__pyx_n_s_rmtree;
static PyObject *__pyx_n_s_secret;
static PyObject *__pyx_n_s_seek;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_separators;
static PyObject *__pyx_n_s_serializer;
static PyObject *__pyx_n_s_set;
static PyObject *__pyx_n_s_setdefault;
static PyObject *__pyx_n_s_sha256;
static PyObject *__pyx_n_s_shutil;
static PyObject *__pyx_n_s_signer;
static PyObject *__pyx_n_s_simplejson;
static PyObject *__pyx_n_s_skipkeys;
static PyObject *__pyx_n_s_sleep;
static PyObject *__pyx_n_s_snappyx;
static PyObject *__pyx_n_s_start;
static PyObject *__pyx_n_s_strict;
static PyObject *__pyx_n_s_super;
static PyObject *__pyx_n_s_target;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_threading;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_n_s_time;
static PyObject *__pyx_n_s_timeout;
static PyObject *__pyx_kp_s_timeout_must_be_a_non_negative;
static PyObject *__pyx_n_s_tobytes;
static PyObject *__pyx_n_s_transform_values;
static PyObject *__pyx_n_s_unary_funct;
static PyObject *__pyx_n_s_unary_pred;
static PyObject *__pyx_n_s_unicode;
static PyObject *__pyx_n_s_unicode_errors;
static PyObject *__pyx_n_s_unpack;
static PyObject *__pyx_kp_s_unsupported_comparison;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_use_bin_type;
static PyObject *__pyx_n_s_use_list;
static PyObject *__pyx_n_s_use_single_float;
static PyObject *__pyx_kp_s_utf_8;
static PyObject *__pyx_n_s_uuid;
static PyObject *__pyx_n_s_uuid4;
static PyObject *__pyx_n_s_v;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_value_chain;
static PyObject *__pyx_n_s_values;
static PyObject *__pyx_n_s_values_dict;
static PyObject *__pyx_kp_s_values_dict_and_index_dict_can_n;
static PyObject *__pyx_kp_s_values_dict_is_not_initialized;
static PyObject *__pyx_n_s_wait;
static PyObject *__pyx_n_s_write;
static PyObject *__pyx_n_s_write_map;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_y;
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions___init__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_fixed_map, PyObject *__pyx_v_no_subdir, PyObject *__pyx_v_read_only, PyObject *__pyx_v_write_map, PyObject *__pyx_v_no_meta_sync, PyObject *__pyx_v_no_sync, PyObject *__pyx_v_map_async, PyObject *__pyx_v_no_tls, PyObject *__pyx_v_no_lock, PyObject *__pyx_v_no_read_ahead, PyObject *__pyx_v_no_mem_init, PyObject *__pyx_v_map_size, PyObject *__pyx_v_max_readers, PyObject *__pyx_v_max_dbs); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9fixed_map___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_fixed_map); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9no_subdir___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_subdir); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9read_only___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9read_only_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_read_only); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9write_map___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9write_map_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_write_map); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_meta_sync); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_sync___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_sync_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_sync); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9map_async___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9map_async_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_map_async); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_6no_tls___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_6no_tls_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_tls); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_lock___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_lock_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_lock); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_read_ahead); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_mem_init); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_8map_size___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_8map_size_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_map_size); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11max_readers___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11max_readers_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_max_readers); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7max_dbs___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_max_dbs); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_8PRawDict___cinit__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED PyObject *__pyx_v_mapping, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain, CYTHON_UNUSED PyObject *__pyx_v_kwarg); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_2__init__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dirname, CYTHON_UNUSED PyObject *__pyx_v_dbname, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, PyObject *__pyx_v_mapping, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain, PyObject *__pyx_v_kwarg); /* proto */
static void __pyx_pf_11pcontainers_6_pdict_8PRawDict_4__dealloc__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_6__repr__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_8make_temp(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_destroy, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_10__reduce__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_12__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, PyObject *__pyx_v_op); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_7dirname___get__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_6dbname___get__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_14__getitem__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_item); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_16get(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_default); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_18setdefault(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_20__setitem__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_22__delitem__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_24erase(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_26noiterkeys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_28noitervalues(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_30noiteritems(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_32pop(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_34popitem(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_36__iter__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_38keys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_41iterkeys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_43values(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_46itervalues(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_48items(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_51iteritems(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_53__nonzero__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_pf_11pcontainers_6_pdict_8PRawDict_55__len__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_57clear(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_59__contains__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_item); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_61has_key(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_63update(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_kwds); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_8fromkeys_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_65fromkeys(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, PyObject *__pyx_v_opts, PyObject *__pyx_v_S, PyObject *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_67transform_values(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_binary_funct); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_69remove_if(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_binary_pred); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_71copy_to(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_73move_to(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_75remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_5PDict___cinit__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dirname, CYTHON_UNUSED PyObject *__pyx_v_dbname, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED PyObject *__pyx_v_mapping, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain, CYTHON_UNUSED PyObject *__pyx_v_kwarg); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_5PDict_2__init__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, PyObject *__pyx_v_mapping, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain, PyObject *__pyx_v_kwarg); /* proto */
static void __pyx_pf_11pcontainers_6_pdict_5PDict_4__dealloc__(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_6__repr__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_8__reduce__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_10__getitem__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_12get(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_14setdefault(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_5PDict_16__setitem__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_5PDict_18__delitem__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_20erase(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_22noiterkeys(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_24noitervalues(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_26noiteritems(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_28pop(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_30popitem(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_32__iter__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_34keys(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_37values(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_40items(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_reverse); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_5PDict_43__contains__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_45update(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_kwds); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_8fromkeys_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_47fromkeys(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, PyObject *__pyx_v_opts, PyObject *__pyx_v_S, PyObject *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_49transform_values(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_binary_funct); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_51remove_if(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_binary_pred); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_53copy_to(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_55move_to(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_57remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_9PRawQueue___cinit__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_9PRawQueue_2__init__(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dirname, CYTHON_UNUSED PyObject *__pyx_v_dbname, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static void __pyx_pf_11pcontainers_6_pdict_9PRawQueue_4__dealloc__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_6__repr__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_7dirname___get__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_6dbname___get__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_8empty(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_10qsize(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_12full(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_14clear(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_16push_front(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_18push_back(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_20put(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_block, PyObject *__pyx_v_timeout); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_22put_nowait(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_item); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_24pop_back(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_26pop_front(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_28pop_all(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_30get(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_block, PyObject *__pyx_v_timeout); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_32get_nowait(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_34push_front_many(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_vals); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_36push_back_many(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_vals); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_38push_many(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_vals); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_40transform_values(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_unary_funct); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_42remove_if(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_unary_pred); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_44move_to(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_46remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_6PQueue___cinit__(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dirname, CYTHON_UNUSED PyObject *__pyx_v_dbname, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_6PQueue_2__init__(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_4__repr__(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_6push_front(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_8push_back(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_10pop_back(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_12pop_front(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_14pop_all(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_15push_front_many_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_16push_front_many(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_vals); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_14push_back_many_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_18push_back_many(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_vals); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_20transform_values(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_unary_funct); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_22remove_if(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_unary_pred); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_24move_to(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11expiry_dict___init__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_values_dict, struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_index_dict, time_t __pyx_v_default_expiry, time_t __pyx_v_prune_period); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_2__enter__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_4__exit__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_exc_type, CYTHON_UNUSED PyObject *__pyx_v_exc_val, CYTHON_UNUSED PyObject *__pyx_v_exc_tb); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_6pruning_thread_fun(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_8prune_expired(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_10__getitem__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_12get(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11expiry_dict_14__setitem__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_16set(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value, time_t __pyx_v_expiry); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11expiry_dict_18__delitem__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_20pop(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_22popitem(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_24__iter__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_27keys(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_29values(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_32items(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_11expiry_dict_35__contains__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_37update(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_kwds); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_set_logger(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_level); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_2set_python_logger(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_name_or_logger_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6Filter_dumps(struct __pyx_obj_11pcontainers_6_pdict_Filter *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6Filter_2loads(struct __pyx_obj_11pcontainers_6_pdict_Filter *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_14NoneSerializer_dumps(struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_14NoneSerializer_2loads(struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_16PickleSerializer___init__(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_protocol); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_16PickleSerializer_2dumps(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_16PickleSerializer_4loads(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer___init__(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_unicode_errors, PyObject *__pyx_v_use_single_float, PyObject *__pyx_v_use_list, PyObject *__pyx_v_default, PyObject *__pyx_v_ext_hook); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer_2dumps(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer_4loads(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_14JsonSerializer___init__(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_default); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_14JsonSerializer_2dumps(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_14JsonSerializer_4loads(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_6Signer___init__(struct __pyx_obj_11pcontainers_6_pdict_Signer *__pyx_v_self, PyObject *__pyx_v_secret); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_10NoneSigner_dumps(struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_10NoneSigner_2loads(struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_10HMACSigner___init__(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_secret); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_10HMACSigner_2dumps(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_10HMACSigner_4loads(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_14NoneCompresser_dumps(struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_14NoneCompresser_2loads(struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_16SnappyCompresser___init__(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_16SnappyCompresser_2dumps(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_16SnappyCompresser_4loads(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_13LZ4Compresser___init__(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_level, PyObject *__pyx_v_block_size_id, PyObject *__pyx_v_block_mode_linked, PyObject *__pyx_v_checksum); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_13LZ4Compresser_2dumps(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_13LZ4Compresser_4loads(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static int __pyx_pf_11pcontainers_6_pdict_5Chain___init__(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, struct __pyx_obj_11pcontainers_6_pdict_Serializer *__pyx_v_serializer, struct __pyx_obj_11pcontainers_6_pdict_Signer *__pyx_v_signer, struct __pyx_obj_11pcontainers_6_pdict_Compresser *__pyx_v_compresser); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5Chain_2dumps(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_5Chain_4loads(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, PyObject *__pyx_v_obj); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_20_adapt_unary_functor_functor(PyObject *__pyx_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_4_adapt_unary_functor(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_unary_funct, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_21_adapt_binary_functor_functor(PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_6_adapt_binary_functor(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_binary_funct, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_22_adapt_unary_predicate_predicate(PyObject *__pyx_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_8_adapt_unary_predicate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_unary_pred, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_23_adapt_binary_predicate_predicate(PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_11pcontainers_6_pdict_10_adapt_binary_predicate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_binary_pred, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain); /* proto */
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PRawDict(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PDict(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PRawQueue(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PQueue(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_expiry_dict(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_LmdbOptions(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Filter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Serializer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_NoneSerializer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PickleSerializer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_MessagePackSerializer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_JsonSerializer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Signer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_NoneSigner(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_HMACSigner(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Compresser(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_NoneCompresser(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_SnappyCompresser(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_LZ4Compresser(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Chain(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct__keys(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_1_values(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_2_items(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_5_keys(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_6_values(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_7_items(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_14___iter__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_15_values(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_16_items(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_16;
static PyObject *__pyx_int_126;
static PyObject *__pyx_int_4096;
static PyObject *__pyx_int_65536;
static PyObject *__pyx_int_10485760;
static PyObject *__pyx_int_neg_32;
static int __pyx_k__13;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_slice__28;
static PyObject *__pyx_slice__29;
static PyObject *__pyx_slice__31;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_codeobj__38;
static PyObject *__pyx_codeobj__40;
static PyObject *__pyx_codeobj__42;
static PyObject *__pyx_codeobj__44;
static PyObject *__pyx_codeobj__49;
static PyObject *__pyx_codeobj__51;
static PyObject *__pyx_codeobj__53;
static PyObject *__pyx_codeobj__55;

/* "pcontainers/lmdb_options_impl.pxi":3
 * 
 * cdef class LmdbOptions(object):
 *     def __init__(self, fixed_map=False, no_subdir=False, read_only=False, write_map=False, no_meta_sync=False,             # <<<<<<<<<<<<<<
 *                  no_sync=False, map_async=False, no_tls=True, no_lock=False, no_read_ahead=False, no_mem_init=False,
 *                  map_size=10485760, max_readers=126, max_dbs=16):
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fixed_map = 0;
  PyObject *__pyx_v_no_subdir = 0;
  PyObject *__pyx_v_read_only = 0;
  PyObject *__pyx_v_write_map = 0;
  PyObject *__pyx_v_no_meta_sync = 0;
  PyObject *__pyx_v_no_sync = 0;
  PyObject *__pyx_v_map_async = 0;
  PyObject *__pyx_v_no_tls = 0;
  PyObject *__pyx_v_no_lock = 0;
  PyObject *__pyx_v_no_read_ahead = 0;
  PyObject *__pyx_v_no_mem_init = 0;
  PyObject *__pyx_v_map_size = 0;
  PyObject *__pyx_v_max_readers = 0;
  PyObject *__pyx_v_max_dbs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fixed_map,&__pyx_n_s_no_subdir,&__pyx_n_s_read_only,&__pyx_n_s_write_map,&__pyx_n_s_no_meta_sync,&__pyx_n_s_no_sync,&__pyx_n_s_map_async,&__pyx_n_s_no_tls,&__pyx_n_s_no_lock,&__pyx_n_s_no_read_ahead,&__pyx_n_s_no_mem_init,&__pyx_n_s_map_size,&__pyx_n_s_max_readers,&__pyx_n_s_max_dbs,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    values[0] = ((PyObject *)Py_False);
    values[1] = ((PyObject *)Py_False);
    values[2] = ((PyObject *)Py_False);
    values[3] = ((PyObject *)Py_False);
    values[4] = ((PyObject *)Py_False);

    /* "pcontainers/lmdb_options_impl.pxi":4
 * cdef class LmdbOptions(object):
 *     def __init__(self, fixed_map=False, no_subdir=False, read_only=False, write_map=False, no_meta_sync=False,
 *                  no_sync=False, map_async=False, no_tls=True, no_lock=False, no_read_ahead=False, no_mem_init=False,             # <<<<<<<<<<<<<<
 *                  map_size=10485760, max_readers=126, max_dbs=16):
 * 
 */
    values[5] = ((PyObject *)Py_False);
    values[6] = ((PyObject *)Py_False);
    values[7] = ((PyObject *)Py_True);
    values[8] = ((PyObject *)Py_False);
    values[9] = ((PyObject *)Py_False);
    values[10] = ((PyObject *)Py_False);
    values[11] = ((PyObject *)__pyx_int_10485760);
    values[12] = ((PyObject *)__pyx_int_126);
    values[13] = ((PyObject *)__pyx_int_16);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fixed_map);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_no_subdir);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_read_only);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_write_map);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_no_meta_sync);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_no_sync);
          if (value) { values[5] = value; kw_args--; }
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_map_async);
          if (value) { values[6] = value; kw_args--; }
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_no_tls);
          if (value) { values[7] = value; kw_args--; }
        }
        case  8:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_no_lock);
          if (value) { values[8] = value; kw_args--; }
        }
        case  9:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_no_read_ahead);
          if (value) { values[9] = value; kw_args--; }
        }
        case 10:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_no_mem_init);
          if (value) { values[10] = value; kw_args--; }
        }
        case 11:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_map_size);
          if (value) { values[11] = value; kw_args--; }
        }
        case 12:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_readers);
          if (value) { values[12] = value; kw_args--; }
        }
        case 13:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_dbs);
          if (value) { values[13] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fixed_map = values[0];
    __pyx_v_no_subdir = values[1];
    __pyx_v_read_only = values[2];
    __pyx_v_write_map = values[3];
    __pyx_v_no_meta_sync = values[4];
    __pyx_v_no_sync = values[5];
    __pyx_v_map_async = values[6];
    __pyx_v_no_tls = values[7];
    __pyx_v_no_lock = values[8];
    __pyx_v_no_read_ahead = values[9];
    __pyx_v_no_mem_init = values[10];
    __pyx_v_map_size = values[11];
    __pyx_v_max_readers = values[12];
    __pyx_v_max_dbs = values[13];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 14, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions___init__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), __pyx_v_fixed_map, __pyx_v_no_subdir, __pyx_v_read_only, __pyx_v_write_map, __pyx_v_no_meta_sync, __pyx_v_no_sync, __pyx_v_map_async, __pyx_v_no_tls, __pyx_v_no_lock, __pyx_v_no_read_ahead, __pyx_v_no_mem_init, __pyx_v_map_size, __pyx_v_max_readers, __pyx_v_max_dbs);

  /* "pcontainers/lmdb_options_impl.pxi":3
 * 
 * cdef class LmdbOptions(object):
 *     def __init__(self, fixed_map=False, no_subdir=False, read_only=False, write_map=False, no_meta_sync=False,             # <<<<<<<<<<<<<<
 *                  no_sync=False, map_async=False, no_tls=True, no_lock=False, no_read_ahead=False, no_mem_init=False,
 *                  map_size=10485760, max_readers=126, max_dbs=16):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions___init__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_fixed_map, PyObject *__pyx_v_no_subdir, PyObject *__pyx_v_read_only, PyObject *__pyx_v_write_map, PyObject *__pyx_v_no_meta_sync, PyObject *__pyx_v_no_sync, PyObject *__pyx_v_map_async, PyObject *__pyx_v_no_tls, PyObject *__pyx_v_no_lock, PyObject *__pyx_v_no_read_ahead, PyObject *__pyx_v_no_mem_init, PyObject *__pyx_v_map_size, PyObject *__pyx_v_max_readers, PyObject *__pyx_v_max_dbs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":7
 *                  map_size=10485760, max_readers=126, max_dbs=16):
 * 
 *         self.fixed_map = fixed_map             # <<<<<<<<<<<<<<
 *         self.no_subdir = no_subdir
 *         self.read_only = read_only
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_fixed_map, __pyx_v_fixed_map) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":8
 * 
 *         self.fixed_map = fixed_map
 *         self.no_subdir = no_subdir             # <<<<<<<<<<<<<<
 *         self.read_only = read_only
 *         self.write_map = write_map
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_no_subdir, __pyx_v_no_subdir) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":9
 *         self.fixed_map = fixed_map
 *         self.no_subdir = no_subdir
 *         self.read_only = read_only             # <<<<<<<<<<<<<<
 *         self.write_map = write_map
 *         self.no_meta_sync = no_meta_sync
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read_only, __pyx_v_read_only) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":10
 *         self.no_subdir = no_subdir
 *         self.read_only = read_only
 *         self.write_map = write_map             # <<<<<<<<<<<<<<
 *         self.no_meta_sync = no_meta_sync
 *         self.no_sync = no_sync
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_write_map, __pyx_v_write_map) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":11
 *         self.read_only = read_only
 *         self.write_map = write_map
 *         self.no_meta_sync = no_meta_sync             # <<<<<<<<<<<<<<
 *         self.no_sync = no_sync
 *         self.map_async = map_async
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_no_meta_sync, __pyx_v_no_meta_sync) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":12
 *         self.write_map = write_map
 *         self.no_meta_sync = no_meta_sync
 *         self.no_sync = no_sync             # <<<<<<<<<<<<<<
 *         self.map_async = map_async
 *         self.no_tls = no_tls
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_no_sync, __pyx_v_no_sync) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":13
 *         self.no_meta_sync = no_meta_sync
 *         self.no_sync = no_sync
 *         self.map_async = map_async             # <<<<<<<<<<<<<<
 *         self.no_tls = no_tls
 *         self.no_lock = no_lock
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_map_async, __pyx_v_map_async) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":14
 *         self.no_sync = no_sync
 *         self.map_async = map_async
 *         self.no_tls = no_tls             # <<<<<<<<<<<<<<
 *         self.no_lock = no_lock
 *         self.no_read_ahead = no_read_ahead
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_no_tls, __pyx_v_no_tls) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":15
 *         self.map_async = map_async
 *         self.no_tls = no_tls
 *         self.no_lock = no_lock             # <<<<<<<<<<<<<<
 *         self.no_read_ahead = no_read_ahead
 *         self.no_mem_init = no_mem_init
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_no_lock, __pyx_v_no_lock) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":16
 *         self.no_tls = no_tls
 *         self.no_lock = no_lock
 *         self.no_read_ahead = no_read_ahead             # <<<<<<<<<<<<<<
 *         self.no_mem_init = no_mem_init
 *         self.map_size = map_size
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_no_read_ahead, __pyx_v_no_read_ahead) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":17
 *         self.no_lock = no_lock
 *         self.no_read_ahead = no_read_ahead
 *         self.no_mem_init = no_mem_init             # <<<<<<<<<<<<<<
 *         self.map_size = map_size
 *         self.max_readers = max_readers
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_no_mem_init, __pyx_v_no_mem_init) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":18
 *         self.no_read_ahead = no_read_ahead
 *         self.no_mem_init = no_mem_init
 *         self.map_size = map_size             # <<<<<<<<<<<<<<
 *         self.max_readers = max_readers
 *         self.max_dbs = max_dbs
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_map_size, __pyx_v_map_size) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":19
 *         self.no_mem_init = no_mem_init
 *         self.map_size = map_size
 *         self.max_readers = max_readers             # <<<<<<<<<<<<<<
 *         self.max_dbs = max_dbs
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_max_readers, __pyx_v_max_readers) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":20
 *         self.map_size = map_size
 *         self.max_readers = max_readers
 *         self.max_dbs = max_dbs             # <<<<<<<<<<<<<<
 * 
 *     property fixed_map:
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_max_dbs, __pyx_v_max_dbs) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/lmdb_options_impl.pxi":3
 * 
 * cdef class LmdbOptions(object):
 *     def __init__(self, fixed_map=False, no_subdir=False, read_only=False, write_map=False, no_meta_sync=False,             # <<<<<<<<<<<<<<
 *                  no_sync=False, map_async=False, no_tls=True, no_lock=False, no_read_ahead=False, no_mem_init=False,
 *                  map_size=10485760, max_readers=126, max_dbs=16):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":23
 * 
 *     property fixed_map:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.fixed_map
 *         def __set__(self, fixed_map):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9fixed_map___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9fixed_map___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":24
 *     property fixed_map:
 *         def __get__(self):
 *             return self.opts.fixed_map             # <<<<<<<<<<<<<<
 *         def __set__(self, fixed_map):
 *             self.opts.fixed_map = bool(fixed_map)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.fixed_map); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":23
 * 
 *     property fixed_map:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.fixed_map
 *         def __set__(self, fixed_map):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.fixed_map.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":25
 *         def __get__(self):
 *             return self.opts.fixed_map
 *         def __set__(self, fixed_map):             # <<<<<<<<<<<<<<
 *             self.opts.fixed_map = bool(fixed_map)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_fixed_map); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_fixed_map) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_fixed_map));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_fixed_map) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":26
 *             return self.opts.fixed_map
 *         def __set__(self, fixed_map):
 *             self.opts.fixed_map = bool(fixed_map)             # <<<<<<<<<<<<<<
 * 
 *     property no_subdir:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_fixed_map); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.fixed_map = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":25
 *         def __get__(self):
 *             return self.opts.fixed_map
 *         def __set__(self, fixed_map):             # <<<<<<<<<<<<<<
 *             self.opts.fixed_map = bool(fixed_map)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.fixed_map.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":29
 * 
 *     property no_subdir:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_subdir
 *         def __set__(self, no_subdir):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9no_subdir___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9no_subdir___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":30
 *     property no_subdir:
 *         def __get__(self):
 *             return self.opts.no_subdir             # <<<<<<<<<<<<<<
 *         def __set__(self, no_subdir):
 *             self.opts.no_subdir = bool(no_subdir)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.no_subdir); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":29
 * 
 *     property no_subdir:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_subdir
 *         def __set__(self, no_subdir):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_subdir.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":31
 *         def __get__(self):
 *             return self.opts.no_subdir
 *         def __set__(self, no_subdir):             # <<<<<<<<<<<<<<
 *             self.opts.no_subdir = bool(no_subdir)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_subdir); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_subdir) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_no_subdir));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_subdir) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":32
 *             return self.opts.no_subdir
 *         def __set__(self, no_subdir):
 *             self.opts.no_subdir = bool(no_subdir)             # <<<<<<<<<<<<<<
 * 
 *     property read_only:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_no_subdir); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.no_subdir = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":31
 *         def __get__(self):
 *             return self.opts.no_subdir
 *         def __set__(self, no_subdir):             # <<<<<<<<<<<<<<
 *             self.opts.no_subdir = bool(no_subdir)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_subdir.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":35
 * 
 *     property read_only:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.read_only
 *         def __set__(self, read_only):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9read_only_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9read_only_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9read_only___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9read_only___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":36
 *     property read_only:
 *         def __get__(self):
 *             return self.opts.read_only             # <<<<<<<<<<<<<<
 *         def __set__(self, read_only):
 *             self.opts.read_only = bool(read_only)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.read_only); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":35
 * 
 *     property read_only:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.read_only
 *         def __set__(self, read_only):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.read_only.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":37
 *         def __get__(self):
 *             return self.opts.read_only
 *         def __set__(self, read_only):             # <<<<<<<<<<<<<<
 *             self.opts.read_only = bool(read_only)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9read_only_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_read_only); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9read_only_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_read_only) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9read_only_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_read_only));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9read_only_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_read_only) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":38
 *             return self.opts.read_only
 *         def __set__(self, read_only):
 *             self.opts.read_only = bool(read_only)             # <<<<<<<<<<<<<<
 * 
 *     property write_map:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_read_only); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.read_only = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":37
 *         def __get__(self):
 *             return self.opts.read_only
 *         def __set__(self, read_only):             # <<<<<<<<<<<<<<
 *             self.opts.read_only = bool(read_only)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.read_only.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":41
 * 
 *     property write_map:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.write_map
 *         def __set__(self, write_map):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9write_map_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9write_map_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9write_map___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9write_map___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":42
 *     property write_map:
 *         def __get__(self):
 *             return self.opts.write_map             # <<<<<<<<<<<<<<
 *         def __set__(self, write_map):
 *             self.opts.fixed_map = bool(write_map)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.write_map); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":41
 * 
 *     property write_map:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.write_map
 *         def __set__(self, write_map):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.write_map.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":43
 *         def __get__(self):
 *             return self.opts.write_map
 *         def __set__(self, write_map):             # <<<<<<<<<<<<<<
 *             self.opts.fixed_map = bool(write_map)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9write_map_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_write_map); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9write_map_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_write_map) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9write_map_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_write_map));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9write_map_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_write_map) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":44
 *             return self.opts.write_map
 *         def __set__(self, write_map):
 *             self.opts.fixed_map = bool(write_map)             # <<<<<<<<<<<<<<
 * 
 *     property no_meta_sync:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_write_map); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.fixed_map = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":43
 *         def __get__(self):
 *             return self.opts.write_map
 *         def __set__(self, write_map):             # <<<<<<<<<<<<<<
 *             self.opts.fixed_map = bool(write_map)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.write_map.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":47
 * 
 *     property no_meta_sync:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_meta_sync
 *         def __set__(self, no_meta_sync):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":48
 *     property no_meta_sync:
 *         def __get__(self):
 *             return self.opts.no_meta_sync             # <<<<<<<<<<<<<<
 *         def __set__(self, no_meta_sync):
 *             self.opts.no_meta_sync = bool(no_meta_sync)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.no_meta_sync); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":47
 * 
 *     property no_meta_sync:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_meta_sync
 *         def __set__(self, no_meta_sync):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_meta_sync.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":49
 *         def __get__(self):
 *             return self.opts.no_meta_sync
 *         def __set__(self, no_meta_sync):             # <<<<<<<<<<<<<<
 *             self.opts.no_meta_sync = bool(no_meta_sync)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_meta_sync); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_meta_sync) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_no_meta_sync));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_meta_sync) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":50
 *             return self.opts.no_meta_sync
 *         def __set__(self, no_meta_sync):
 *             self.opts.no_meta_sync = bool(no_meta_sync)             # <<<<<<<<<<<<<<
 * 
 *     property no_sync:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_no_meta_sync); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.no_meta_sync = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":49
 *         def __get__(self):
 *             return self.opts.no_meta_sync
 *         def __set__(self, no_meta_sync):             # <<<<<<<<<<<<<<
 *             self.opts.no_meta_sync = bool(no_meta_sync)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_meta_sync.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":53
 * 
 *     property no_sync:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_sync
 *         def __set__(self, no_sync):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_sync_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_sync_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_sync___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_sync___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":54
 *     property no_sync:
 *         def __get__(self):
 *             return self.opts.no_sync             # <<<<<<<<<<<<<<
 *         def __set__(self, no_sync):
 *             self.opts.no_sync = bool(no_sync)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.no_sync); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":53
 * 
 *     property no_sync:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_sync
 *         def __set__(self, no_sync):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_sync.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":55
 *         def __get__(self):
 *             return self.opts.no_sync
 *         def __set__(self, no_sync):             # <<<<<<<<<<<<<<
 *             self.opts.no_sync = bool(no_sync)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_sync_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_sync); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_sync_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_sync) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_sync_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_no_sync));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_sync_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_sync) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":56
 *             return self.opts.no_sync
 *         def __set__(self, no_sync):
 *             self.opts.no_sync = bool(no_sync)             # <<<<<<<<<<<<<<
 * 
 *     property map_async:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_no_sync); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.no_sync = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":55
 *         def __get__(self):
 *             return self.opts.no_sync
 *         def __set__(self, no_sync):             # <<<<<<<<<<<<<<
 *             self.opts.no_sync = bool(no_sync)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_sync.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":59
 * 
 *     property map_async:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.map_async
 *         def __set__(self, map_async):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9map_async_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9map_async_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9map_async___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9map_async___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":60
 *     property map_async:
 *         def __get__(self):
 *             return self.opts.map_async             # <<<<<<<<<<<<<<
 *         def __set__(self, map_async):
 *             self.opts.map_async = bool(map_async)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.map_async); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":59
 * 
 *     property map_async:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.map_async
 *         def __set__(self, map_async):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.map_async.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":61
 *         def __get__(self):
 *             return self.opts.map_async
 *         def __set__(self, map_async):             # <<<<<<<<<<<<<<
 *             self.opts.map_async = bool(map_async)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9map_async_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_map_async); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9map_async_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_map_async) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9map_async_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_map_async));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_9map_async_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_map_async) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":62
 *             return self.opts.map_async
 *         def __set__(self, map_async):
 *             self.opts.map_async = bool(map_async)             # <<<<<<<<<<<<<<
 * 
 *     property no_tls:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_map_async); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.map_async = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":61
 *         def __get__(self):
 *             return self.opts.map_async
 *         def __set__(self, map_async):             # <<<<<<<<<<<<<<
 *             self.opts.map_async = bool(map_async)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.map_async.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":65
 * 
 *     property no_tls:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_tls
 *         def __set__(self, no_tls):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_6no_tls_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_6no_tls_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_6no_tls___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_6no_tls___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":66
 *     property no_tls:
 *         def __get__(self):
 *             return self.opts.no_tls             # <<<<<<<<<<<<<<
 *         def __set__(self, no_tls):
 *             self.opts.no_tls = bool(no_tls)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.no_tls); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":65
 * 
 *     property no_tls:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_tls
 *         def __set__(self, no_tls):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_tls.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":67
 *         def __get__(self):
 *             return self.opts.no_tls
 *         def __set__(self, no_tls):             # <<<<<<<<<<<<<<
 *             self.opts.no_tls = bool(no_tls)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_6no_tls_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_tls); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_6no_tls_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_tls) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_6no_tls_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_no_tls));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_6no_tls_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_tls) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":68
 *             return self.opts.no_tls
 *         def __set__(self, no_tls):
 *             self.opts.no_tls = bool(no_tls)             # <<<<<<<<<<<<<<
 * 
 *     property no_lock:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_no_tls); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.no_tls = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":67
 *         def __get__(self):
 *             return self.opts.no_tls
 *         def __set__(self, no_tls):             # <<<<<<<<<<<<<<
 *             self.opts.no_tls = bool(no_tls)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_tls.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":71
 * 
 *     property no_lock:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_lock
 *         def __set__(self, no_lock):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_lock_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_lock_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_lock___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_lock___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":72
 *     property no_lock:
 *         def __get__(self):
 *             return self.opts.no_lock             # <<<<<<<<<<<<<<
 *         def __set__(self, no_lock):
 *             self.opts.no_lock = bool(no_lock)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.no_lock); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":71
 * 
 *     property no_lock:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_lock
 *         def __set__(self, no_lock):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_lock.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":73
 *         def __get__(self):
 *             return self.opts.no_lock
 *         def __set__(self, no_lock):             # <<<<<<<<<<<<<<
 *             self.opts.no_lock = bool(no_lock)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_lock_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_lock); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_lock_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_lock) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_lock_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_no_lock));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7no_lock_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_lock) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":74
 *             return self.opts.no_lock
 *         def __set__(self, no_lock):
 *             self.opts.no_lock = bool(no_lock)             # <<<<<<<<<<<<<<
 * 
 *     property no_read_ahead:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_no_lock); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.no_lock = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":73
 *         def __get__(self):
 *             return self.opts.no_lock
 *         def __set__(self, no_lock):             # <<<<<<<<<<<<<<
 *             self.opts.no_lock = bool(no_lock)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_lock.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":77
 * 
 *     property no_read_ahead:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_read_ahead
 *         def __set__(self, no_read_ahead):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":78
 *     property no_read_ahead:
 *         def __get__(self):
 *             return self.opts.no_read_ahead             # <<<<<<<<<<<<<<
 *         def __set__(self, no_read_ahead):
 *             self.opts.no_read_ahead = bool(no_read_ahead)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.no_read_ahead); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":77
 * 
 *     property no_read_ahead:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_read_ahead
 *         def __set__(self, no_read_ahead):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_read_ahead.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":79
 *         def __get__(self):
 *             return self.opts.no_read_ahead
 *         def __set__(self, no_read_ahead):             # <<<<<<<<<<<<<<
 *             self.opts.no_read_ahead = bool(no_read_ahead)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_read_ahead); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_read_ahead) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_no_read_ahead));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_read_ahead) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":80
 *             return self.opts.no_read_ahead
 *         def __set__(self, no_read_ahead):
 *             self.opts.no_read_ahead = bool(no_read_ahead)             # <<<<<<<<<<<<<<
 * 
 *     property no_mem_init:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_no_read_ahead); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.no_read_ahead = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":79
 *         def __get__(self):
 *             return self.opts.no_read_ahead
 *         def __set__(self, no_read_ahead):             # <<<<<<<<<<<<<<
 *             self.opts.no_read_ahead = bool(no_read_ahead)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_read_ahead.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":83
 * 
 *     property no_mem_init:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_mem_init
 *         def __set__(self, no_mem_init):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":84
 *     property no_mem_init:
 *         def __get__(self):
 *             return self.opts.no_mem_init             # <<<<<<<<<<<<<<
 *         def __set__(self, no_mem_init):
 *             self.opts.no_mem_init = bool(no_mem_init)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->opts.no_mem_init); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":83
 * 
 *     property no_mem_init:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.no_mem_init
 *         def __set__(self, no_mem_init):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_mem_init.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":85
 *         def __get__(self):
 *             return self.opts.no_mem_init
 *         def __set__(self, no_mem_init):             # <<<<<<<<<<<<<<
 *             self.opts.no_mem_init = bool(no_mem_init)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_mem_init); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_no_mem_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_no_mem_init));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_no_mem_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":86
 *             return self.opts.no_mem_init
 *         def __set__(self, no_mem_init):
 *             self.opts.no_mem_init = bool(no_mem_init)             # <<<<<<<<<<<<<<
 * 
 *     property map_size:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_no_mem_init); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.no_mem_init = (!(!__pyx_t_1));

  /* "pcontainers/lmdb_options_impl.pxi":85
 *         def __get__(self):
 *             return self.opts.no_mem_init
 *         def __set__(self, no_mem_init):             # <<<<<<<<<<<<<<
 *             self.opts.no_mem_init = bool(no_mem_init)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.no_mem_init.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":89
 * 
 *     property map_size:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.map_size
 *         def __set__(self, map_size):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_8map_size_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_8map_size_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_8map_size___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_8map_size___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":90
 *     property map_size:
 *         def __get__(self):
 *             return self.opts.map_size             # <<<<<<<<<<<<<<
 *         def __set__(self, map_size):
 *             map_size = int(map_size)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->opts.map_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":89
 * 
 *     property map_size:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.map_size
 *         def __set__(self, map_size):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.map_size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":91
 *         def __get__(self):
 *             return self.opts.map_size
 *         def __set__(self, map_size):             # <<<<<<<<<<<<<<
 *             map_size = int(map_size)
 *             if map_size <= 0:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_8map_size_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_map_size); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_8map_size_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_map_size) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_8map_size_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_map_size));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_8map_size_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_map_size) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  size_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_map_size);

  /* "pcontainers/lmdb_options_impl.pxi":92
 *             return self.opts.map_size
 *         def __set__(self, map_size):
 *             map_size = int(map_size)             # <<<<<<<<<<<<<<
 *             if map_size <= 0:
 *                 raise ValueError()
 */
  __pyx_t_1 = PyNumber_Int(__pyx_v_map_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_map_size, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/lmdb_options_impl.pxi":93
 *         def __set__(self, map_size):
 *             map_size = int(map_size)
 *             if map_size <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError()
 *             self.opts.map_size = map_size
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_map_size, __pyx_int_0, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pcontainers/lmdb_options_impl.pxi":94
 *             map_size = int(map_size)
 *             if map_size <= 0:
 *                 raise ValueError()             # <<<<<<<<<<<<<<
 *             self.opts.map_size = map_size
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_ValueError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/lmdb_options_impl.pxi":93
 *         def __set__(self, map_size):
 *             map_size = int(map_size)
 *             if map_size <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError()
 *             self.opts.map_size = map_size
 */
  }

  /* "pcontainers/lmdb_options_impl.pxi":95
 *             if map_size <= 0:
 *                 raise ValueError()
 *             self.opts.map_size = map_size             # <<<<<<<<<<<<<<
 * 
 *     property max_readers:
 */
  __pyx_t_3 = __Pyx_PyInt_As_size_t(__pyx_v_map_size); if (unlikely((__pyx_t_3 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.map_size = __pyx_t_3;

  /* "pcontainers/lmdb_options_impl.pxi":91
 *         def __get__(self):
 *             return self.opts.map_size
 *         def __set__(self, map_size):             # <<<<<<<<<<<<<<
 *             map_size = int(map_size)
 *             if map_size <= 0:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.map_size.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_map_size);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":98
 * 
 *     property max_readers:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.max_readers
 *         def __set__(self, max_readers):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11max_readers_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11max_readers_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11max_readers___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11max_readers___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":99
 *     property max_readers:
 *         def __get__(self):
 *             return self.opts.max_readers             # <<<<<<<<<<<<<<
 *         def __set__(self, max_readers):
 *             max_readers = int(max_readers)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->opts.max_readers); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":98
 * 
 *     property max_readers:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.max_readers
 *         def __set__(self, max_readers):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.max_readers.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":100
 *         def __get__(self):
 *             return self.opts.max_readers
 *         def __set__(self, max_readers):             # <<<<<<<<<<<<<<
 *             max_readers = int(max_readers)
 *             if max_readers <= 0:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11max_readers_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_max_readers); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11max_readers_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_max_readers) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11max_readers_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_max_readers));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_11max_readers_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_max_readers) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  unsigned int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_max_readers);

  /* "pcontainers/lmdb_options_impl.pxi":101
 *             return self.opts.max_readers
 *         def __set__(self, max_readers):
 *             max_readers = int(max_readers)             # <<<<<<<<<<<<<<
 *             if max_readers <= 0:
 *                 raise ValueError()
 */
  __pyx_t_1 = PyNumber_Int(__pyx_v_max_readers); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_max_readers, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/lmdb_options_impl.pxi":102
 *         def __set__(self, max_readers):
 *             max_readers = int(max_readers)
 *             if max_readers <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError()
 *             self.opts.max_readers = max_readers
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_max_readers, __pyx_int_0, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pcontainers/lmdb_options_impl.pxi":103
 *             max_readers = int(max_readers)
 *             if max_readers <= 0:
 *                 raise ValueError()             # <<<<<<<<<<<<<<
 *             self.opts.max_readers = max_readers
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_ValueError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/lmdb_options_impl.pxi":102
 *         def __set__(self, max_readers):
 *             max_readers = int(max_readers)
 *             if max_readers <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError()
 *             self.opts.max_readers = max_readers
 */
  }

  /* "pcontainers/lmdb_options_impl.pxi":104
 *             if max_readers <= 0:
 *                 raise ValueError()
 *             self.opts.max_readers = max_readers             # <<<<<<<<<<<<<<
 * 
 *     property max_dbs:
 */
  __pyx_t_3 = __Pyx_PyInt_As_unsigned_int(__pyx_v_max_readers); if (unlikely((__pyx_t_3 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.max_readers = __pyx_t_3;

  /* "pcontainers/lmdb_options_impl.pxi":100
 *         def __get__(self):
 *             return self.opts.max_readers
 *         def __set__(self, max_readers):             # <<<<<<<<<<<<<<
 *             max_readers = int(max_readers)
 *             if max_readers <= 0:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.max_readers.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_max_readers);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":107
 * 
 *     property max_dbs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.max_dbs
 *         def __set__(self, max_dbs):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7max_dbs___get__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7max_dbs___get__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/lmdb_options_impl.pxi":108
 *     property max_dbs:
 *         def __get__(self):
 *             return self.opts.max_dbs             # <<<<<<<<<<<<<<
 *         def __set__(self, max_dbs):
 *             max_dbs = int(max_dbs)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->opts.max_dbs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/lmdb_options_impl.pxi":107
 * 
 *     property max_dbs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.opts.max_dbs
 *         def __set__(self, max_dbs):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.max_dbs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/lmdb_options_impl.pxi":109
 *         def __get__(self):
 *             return self.opts.max_dbs
 *         def __set__(self, max_dbs):             # <<<<<<<<<<<<<<
 *             max_dbs = int(max_dbs)
 *             if max_dbs <= 0:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_max_dbs); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_max_dbs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_2__set__(((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_v_self), ((PyObject *)__pyx_v_max_dbs));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_2__set__(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_self, PyObject *__pyx_v_max_dbs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  unsigned int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_max_dbs);

  /* "pcontainers/lmdb_options_impl.pxi":110
 *             return self.opts.max_dbs
 *         def __set__(self, max_dbs):
 *             max_dbs = int(max_dbs)             # <<<<<<<<<<<<<<
 *             if max_dbs <= 0:
 *                 raise ValueError()
 */
  __pyx_t_1 = PyNumber_Int(__pyx_v_max_dbs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_max_dbs, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/lmdb_options_impl.pxi":111
 *         def __set__(self, max_dbs):
 *             max_dbs = int(max_dbs)
 *             if max_dbs <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError()
 *             self.opts.max_dbs = max_dbs
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_max_dbs, __pyx_int_0, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pcontainers/lmdb_options_impl.pxi":112
 *             max_dbs = int(max_dbs)
 *             if max_dbs <= 0:
 *                 raise ValueError()             # <<<<<<<<<<<<<<
 *             self.opts.max_dbs = max_dbs
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_ValueError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/lmdb_options_impl.pxi":111
 *         def __set__(self, max_dbs):
 *             max_dbs = int(max_dbs)
 *             if max_dbs <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError()
 *             self.opts.max_dbs = max_dbs
 */
  }

  /* "pcontainers/lmdb_options_impl.pxi":113
 *             if max_dbs <= 0:
 *                 raise ValueError()
 *             self.opts.max_dbs = max_dbs             # <<<<<<<<<<<<<<
 */
  __pyx_t_3 = __Pyx_PyInt_As_unsigned_int(__pyx_v_max_dbs); if (unlikely((__pyx_t_3 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->opts.max_dbs = __pyx_t_3;

  /* "pcontainers/lmdb_options_impl.pxi":109
 *         def __get__(self):
 *             return self.opts.max_dbs
 *         def __set__(self, max_dbs):             # <<<<<<<<<<<<<<
 *             max_dbs = int(max_dbs)
 *             if max_dbs <= 0:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LmdbOptions.max_dbs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_max_dbs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":3
 * 
 * cdef class PRawDict(object):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):             # <<<<<<<<<<<<<<
 *         self.rmrf_at_delete = 0
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dirname = 0;
  PyObject *__pyx_v_dbname = 0;
  struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  CYTHON_UNUSED PyObject *__pyx_v_mapping = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwarg = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwarg = PyDict_New(); if (unlikely(!__pyx_v_kwarg)) return -1;
  __Pyx_GOTREF(__pyx_v_kwarg);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_mapping,&__pyx_n_s_key_chain,&__pyx_n_s_value_chain,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 6, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mapping);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key_chain);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwarg, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[2]);
    __pyx_v_mapping = values[3];
    __pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[4]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwarg); __pyx_v_kwarg = 0;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "key_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict___cinit__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_mapping, __pyx_v_key_chain, __pyx_v_value_chain, __pyx_v_kwarg);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_kwarg);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_8PRawDict___cinit__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED PyObject *__pyx_v_mapping, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain, CYTHON_UNUSED PyObject *__pyx_v_kwarg) {
  Bstrlib::CBString __pyx_v_dirn;
  Bstrlib::CBString __pyx_v_dbn;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  quiet::PersistentDict *__pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_opts);

  /* "pcontainers/pdict_impl.pxi":4
 * cdef class PRawDict(object):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         self.rmrf_at_delete = 0             # <<<<<<<<<<<<<<
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 */
  __pyx_v_self->rmrf_at_delete = 0;

  /* "pcontainers/pdict_impl.pxi":5
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         self.rmrf_at_delete = 0
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))             # <<<<<<<<<<<<<<
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_dirname); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dirn = __pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":6
 *         self.rmrf_at_delete = 0
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))             # <<<<<<<<<<<<<<
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_dbname); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dbn = __pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":7
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("empty dirname")
 *         if opts is None:
 */
  __pyx_t_2 = ((__pyx_v_dirn.length() == 0) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/pdict_impl.pxi":8
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")             # <<<<<<<<<<<<<<
 *         if opts is None:
 *             opts = LmdbOptions()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pdict_impl.pxi":7
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("empty dirname")
 *         if opts is None:
 */
  }

  /* "pcontainers/pdict_impl.pxi":9
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")
 *         if opts is None:             # <<<<<<<<<<<<<<
 *             opts = LmdbOptions()
 *         self.ptr = new cppPersistentDict(dirn, dbn, (<LmdbOptions> opts).opts)
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_opts) == Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pcontainers/pdict_impl.pxi":10
 *             raise ValueError("empty dirname")
 *         if opts is None:
 *             opts = LmdbOptions()             # <<<<<<<<<<<<<<
 *         self.ptr = new cppPersistentDict(dirn, dbn, (<LmdbOptions> opts).opts)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_LmdbOptions), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_opts, ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "pcontainers/pdict_impl.pxi":9
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")
 *         if opts is None:             # <<<<<<<<<<<<<<
 *             opts = LmdbOptions()
 *         self.ptr = new cppPersistentDict(dirn, dbn, (<LmdbOptions> opts).opts)
 */
  }

  /* "pcontainers/pdict_impl.pxi":11
 *         if opts is None:
 *             opts = LmdbOptions()
 *         self.ptr = new cppPersistentDict(dirn, dbn, (<LmdbOptions> opts).opts)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_4 = new quiet::PersistentDict(__pyx_v_dirn, __pyx_v_dbn, __pyx_v_opts->opts);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->ptr = __pyx_t_4;

  /* "pcontainers/pdict_impl.pxi":3
 * 
 * cdef class PRawDict(object):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):             # <<<<<<<<<<<<<<
 *         self.rmrf_at_delete = 0
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_opts);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":14
 * 
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):             # <<<<<<<<<<<<<<
 *         if mapping is not None:
 *             self.update(e=mapping)
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_dirname = 0;
  CYTHON_UNUSED PyObject *__pyx_v_dbname = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  PyObject *__pyx_v_mapping = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  PyObject *__pyx_v_kwarg = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwarg = PyDict_New(); if (unlikely(!__pyx_v_kwarg)) return -1;
  __Pyx_GOTREF(__pyx_v_kwarg);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_mapping,&__pyx_n_s_key_chain,&__pyx_n_s_value_chain,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 6, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mapping);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key_chain);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwarg, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[2]);
    __pyx_v_mapping = values[3];
    __pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[4]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwarg); __pyx_v_kwarg = 0;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "key_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_2__init__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_mapping, __pyx_v_key_chain, __pyx_v_value_chain, __pyx_v_kwarg);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_kwarg);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_2__init__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dirname, CYTHON_UNUSED PyObject *__pyx_v_dbname, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, PyObject *__pyx_v_mapping, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain, PyObject *__pyx_v_kwarg) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/pdict_impl.pxi":15
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         if mapping is not None:             # <<<<<<<<<<<<<<
 *             self.update(e=mapping)
 *         if kwarg:
 */
  __pyx_t_1 = (__pyx_v_mapping != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/pdict_impl.pxi":16
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         if mapping is not None:
 *             self.update(e=mapping)             # <<<<<<<<<<<<<<
 *         if kwarg:
 *             self.update(e=kwarg)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_e, __pyx_v_mapping) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "pcontainers/pdict_impl.pxi":15
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         if mapping is not None:             # <<<<<<<<<<<<<<
 *             self.update(e=mapping)
 *         if kwarg:
 */
  }

  /* "pcontainers/pdict_impl.pxi":17
 *         if mapping is not None:
 *             self.update(e=mapping)
 *         if kwarg:             # <<<<<<<<<<<<<<
 *             self.update(e=kwarg)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_kwarg); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "pcontainers/pdict_impl.pxi":18
 *             self.update(e=mapping)
 *         if kwarg:
 *             self.update(e=kwarg)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_e, __pyx_v_kwarg) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_empty_tuple, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pcontainers/pdict_impl.pxi":17
 *         if mapping is not None:
 *             self.update(e=mapping)
 *         if kwarg:             # <<<<<<<<<<<<<<
 *             self.update(e=kwarg)
 * 
 */
  }

  /* "pcontainers/pdict_impl.pxi":14
 * 
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):             # <<<<<<<<<<<<<<
 *         if mapping is not None:
 *             self.update(e=mapping)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":20
 *             self.update(e=kwarg)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.ptr is not NULL:
 *             if self.rmrf_at_delete:
 */

/* Python wrapper */
static void __pyx_pw_11pcontainers_6_pdict_8PRawDict_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_11pcontainers_6_pdict_8PRawDict_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_11pcontainers_6_pdict_8PRawDict_4__dealloc__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_11pcontainers_6_pdict_8PRawDict_4__dealloc__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcontainers/pdict_impl.pxi":21
 * 
 *     def __dealloc__(self):
 *         if self.ptr is not NULL:             # <<<<<<<<<<<<<<
 *             if self.rmrf_at_delete:
 *                 shutil.rmtree(self.dirname)
 */
  __pyx_t_1 = ((__pyx_v_self->ptr != NULL) != 0);
  if (__pyx_t_1) {

    /* "pcontainers/pdict_impl.pxi":22
 *     def __dealloc__(self):
 *         if self.ptr is not NULL:
 *             if self.rmrf_at_delete:             # <<<<<<<<<<<<<<
 *                 shutil.rmtree(self.dirname)
 *                 self.rmrf_at_delete = 0
 */
    __pyx_t_1 = (__pyx_v_self->rmrf_at_delete != 0);
    if (__pyx_t_1) {

      /* "pcontainers/pdict_impl.pxi":23
 *         if self.ptr is not NULL:
 *             if self.rmrf_at_delete:
 *                 shutil.rmtree(self.dirname)             # <<<<<<<<<<<<<<
 *                 self.rmrf_at_delete = 0
 * 
 */
      __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_shutil); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_rmtree); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dirname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "pcontainers/pdict_impl.pxi":24
 *             if self.rmrf_at_delete:
 *                 shutil.rmtree(self.dirname)
 *                 self.rmrf_at_delete = 0             # <<<<<<<<<<<<<<
 * 
 *             del self.ptr
 */
      __pyx_v_self->rmrf_at_delete = 0;

      /* "pcontainers/pdict_impl.pxi":22
 *     def __dealloc__(self):
 *         if self.ptr is not NULL:
 *             if self.rmrf_at_delete:             # <<<<<<<<<<<<<<
 *                 shutil.rmtree(self.dirname)
 *                 self.rmrf_at_delete = 0
 */
    }

    /* "pcontainers/pdict_impl.pxi":26
 *                 self.rmrf_at_delete = 0
 * 
 *             del self.ptr             # <<<<<<<<<<<<<<
 *             self.ptr = NULL
 * 
 */
    delete __pyx_v_self->ptr;

    /* "pcontainers/pdict_impl.pxi":27
 * 
 *             del self.ptr
 *             self.ptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    __pyx_v_self->ptr = NULL;

    /* "pcontainers/pdict_impl.pxi":21
 * 
 *     def __dealloc__(self):
 *         if self.ptr is not NULL:             # <<<<<<<<<<<<<<
 *             if self.rmrf_at_delete:
 *                 shutil.rmtree(self.dirname)
 */
  }

  /* "pcontainers/pdict_impl.pxi":20
 *             self.update(e=kwarg)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.ptr is not NULL:
 *             if self.rmrf_at_delete:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_WriteUnraisable("pcontainers._pdict.PRawDict.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pcontainers/pdict_impl.pxi":29
 *             self.ptr = NULL
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"PRawDict(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_6__repr__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_6__repr__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "pcontainers/pdict_impl.pxi":30
 * 
 *     def __repr__(self):
 *         return u"PRawDict(dbname='{}', dirname='{}')".format(             # <<<<<<<<<<<<<<
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 *         )
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_PRawDict_dbname_dirname, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":31
 *     def __repr__(self):
 *         return u"PRawDict(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dbname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_unicode(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dirname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __pyx_f_11pcontainers_6_pdict_make_unicode(__pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_5);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":29
 *             self.ptr = NULL
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"PRawDict(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":35
 * 
 *     @classmethod
 *     def make_temp(cls, destroy=True, LmdbOptions opts=None, Chain key_chain=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         cdef shared_ptr[TempDirectory] temp_dir_ptr = make_temp_directory(True, False)
 *         d = cls(dirname=topy(temp_dir_ptr.get().get_path()), dbname=uuid.uuid4(), opts=opts, key_chain=key_chain, value_chain=value_chain)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_9make_temp(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_9make_temp(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_destroy = 0;
  struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("make_temp (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_destroy,&__pyx_n_s_opts,&__pyx_n_s_key_chain,&__pyx_n_s_value_chain,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)Py_True);
    values[1] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    values[3] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_destroy);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key_chain);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "make_temp") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_destroy = values[0];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[1]);
    __pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[2]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("make_temp", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.make_temp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "key_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_8make_temp(((PyTypeObject*)__pyx_v_cls), __pyx_v_destroy, __pyx_v_opts, __pyx_v_key_chain, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_8make_temp(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_destroy, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  boost::shared_ptr<utils::TempDirectory>  __pyx_v_temp_dir_ptr;
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("make_temp", 0);

  /* "pcontainers/pdict_impl.pxi":36
 *     @classmethod
 *     def make_temp(cls, destroy=True, LmdbOptions opts=None, Chain key_chain=None, Chain value_chain=None):
 *         cdef shared_ptr[TempDirectory] temp_dir_ptr = make_temp_directory(True, False)             # <<<<<<<<<<<<<<
 *         d = cls(dirname=topy(temp_dir_ptr.get().get_path()), dbname=uuid.uuid4(), opts=opts, key_chain=key_chain, value_chain=value_chain)
 *         (<PRawDict>d).rmrf_at_delete = bool(destroy)
 */
  __pyx_v_temp_dir_ptr = utils::TempDirectory::make(1, 0);

  /* "pcontainers/pdict_impl.pxi":37
 *     def make_temp(cls, destroy=True, LmdbOptions opts=None, Chain key_chain=None, Chain value_chain=None):
 *         cdef shared_ptr[TempDirectory] temp_dir_ptr = make_temp_directory(True, False)
 *         d = cls(dirname=topy(temp_dir_ptr.get().get_path()), dbname=uuid.uuid4(), opts=opts, key_chain=key_chain, value_chain=value_chain)             # <<<<<<<<<<<<<<
 *         (<PRawDict>d).rmrf_at_delete = bool(destroy)
 *         return d
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_temp_dir_ptr.get()->get_path()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dirname, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_uuid); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dbname, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_opts, ((PyObject *)__pyx_v_opts)) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_key_chain, ((PyObject *)__pyx_v_key_chain)) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_value_chain, ((PyObject *)__pyx_v_value_chain)) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_v_cls), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_d = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pcontainers/pdict_impl.pxi":38
 *         cdef shared_ptr[TempDirectory] temp_dir_ptr = make_temp_directory(True, False)
 *         d = cls(dirname=topy(temp_dir_ptr.get().get_path()), dbname=uuid.uuid4(), opts=opts, key_chain=key_chain, value_chain=value_chain)
 *         (<PRawDict>d).rmrf_at_delete = bool(destroy)             # <<<<<<<<<<<<<<
 *         return d
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_destroy); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_d)->rmrf_at_delete = (!(!__pyx_t_5));

  /* "pcontainers/pdict_impl.pxi":39
 *         d = cls(dirname=topy(temp_dir_ptr.get().get_path()), dbname=uuid.uuid4(), opts=opts, key_chain=key_chain, value_chain=value_chain)
 *         (<PRawDict>d).rmrf_at_delete = bool(destroy)
 *         return d             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_d);
  __pyx_r = __pyx_v_d;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":35
 * 
 *     @classmethod
 *     def make_temp(cls, destroy=True, LmdbOptions opts=None, Chain key_chain=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         cdef shared_ptr[TempDirectory] temp_dir_ptr = make_temp_directory(True, False)
 *         d = cls(dirname=topy(temp_dir_ptr.get().get_path()), dbname=uuid.uuid4(), opts=opts, key_chain=key_chain, value_chain=value_chain)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.make_temp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":41
 *         return d
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return dict, (self.noiteritems(), )
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_11__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_11__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_10__reduce__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_10__reduce__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce__", 0);

  /* "pcontainers/pdict_impl.pxi":42
 * 
 *     def __reduce__(self):
 *         return dict, (self.noiteritems(), )             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(self, other, op):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->__pyx_vtab)->noiteritems(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)(&PyDict_Type)));
  __Pyx_GIVEREF(((PyObject *)(&PyDict_Type)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)(&PyDict_Type)));
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":41
 *         return d
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return dict, (self.noiteritems(), )
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":44
 *         return dict, (self.noiteritems(), )
 * 
 *     def __richcmp__(self, other, op):             # <<<<<<<<<<<<<<
 *         if op == 2:
 *             if not isinstance(other, PRawDict):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_13__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_arg_op); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_13__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_arg_op) {
  PyObject *__pyx_v_op = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  __pyx_v_op = __Pyx_PyInt_From_int(__pyx_arg_op); if (unlikely(!__pyx_v_op)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __Pyx_GOTREF(__pyx_v_op);
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_12__richcmp__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other), ((PyObject *)__pyx_v_op));

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_op);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_12__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, PyObject *__pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "pcontainers/pdict_impl.pxi":45
 * 
 *     def __richcmp__(self, other, op):
 *         if op == 2:             # <<<<<<<<<<<<<<
 *             if not isinstance(other, PRawDict):
 *                 return False
 */
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_op, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "pcontainers/pdict_impl.pxi":46
 *     def __richcmp__(self, other, op):
 *         if op == 2:
 *             if not isinstance(other, PRawDict):             # <<<<<<<<<<<<<<
 *                 return False
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 */
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PRawDict); 
    __pyx_t_3 = ((!(__pyx_t_2 != 0)) != 0);
    if (__pyx_t_3) {

      /* "pcontainers/pdict_impl.pxi":47
 *         if op == 2:
 *             if not isinstance(other, PRawDict):
 *                 return False             # <<<<<<<<<<<<<<
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 *                 return False
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      goto __pyx_L0;

      /* "pcontainers/pdict_impl.pxi":46
 *     def __richcmp__(self, other, op):
 *         if op == 2:
 *             if not isinstance(other, PRawDict):             # <<<<<<<<<<<<<<
 *                 return False
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 */
    }

    /* "pcontainers/pdict_impl.pxi":48
 *             if not isinstance(other, PRawDict):
 *                 return False
 *             if isinstance(self, PDict) and not isinstance(other, PDict):             # <<<<<<<<<<<<<<
 *                 return False
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 */
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_11pcontainers_6_pdict_PDict); 
    __pyx_t_4 = (__pyx_t_2 != 0);
    if (__pyx_t_4) {
    } else {
      __pyx_t_3 = __pyx_t_4;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PDict); 
    __pyx_t_2 = ((!(__pyx_t_4 != 0)) != 0);
    __pyx_t_3 = __pyx_t_2;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_3) {

      /* "pcontainers/pdict_impl.pxi":49
 *                 return False
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 *                 return False             # <<<<<<<<<<<<<<
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 *                 return False
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      goto __pyx_L0;

      /* "pcontainers/pdict_impl.pxi":48
 *             if not isinstance(other, PRawDict):
 *                 return False
 *             if isinstance(self, PDict) and not isinstance(other, PDict):             # <<<<<<<<<<<<<<
 *                 return False
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 */
    }

    /* "pcontainers/pdict_impl.pxi":50
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 *                 return False
 *             if isinstance(other, PDict) and not isinstance(self, PDict):             # <<<<<<<<<<<<<<
 *                 return False
 *             return deref((<PRawDict> self).ptr) == deref((<PRawDict> other).ptr)
 */
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PDict); 
    __pyx_t_4 = (__pyx_t_2 != 0);
    if (__pyx_t_4) {
    } else {
      __pyx_t_3 = __pyx_t_4;
      goto __pyx_L9_bool_binop_done;
    }
    __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_11pcontainers_6_pdict_PDict); 
    __pyx_t_2 = ((!(__pyx_t_4 != 0)) != 0);
    __pyx_t_3 = __pyx_t_2;
    __pyx_L9_bool_binop_done:;
    if (__pyx_t_3) {

      /* "pcontainers/pdict_impl.pxi":51
 *                 return False
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 *                 return False             # <<<<<<<<<<<<<<
 *             return deref((<PRawDict> self).ptr) == deref((<PRawDict> other).ptr)
 *         elif op == 3:
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      goto __pyx_L0;

      /* "pcontainers/pdict_impl.pxi":50
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 *                 return False
 *             if isinstance(other, PDict) and not isinstance(self, PDict):             # <<<<<<<<<<<<<<
 *                 return False
 *             return deref((<PRawDict> self).ptr) == deref((<PRawDict> other).ptr)
 */
    }

    /* "pcontainers/pdict_impl.pxi":52
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 *                 return False
 *             return deref((<PRawDict> self).ptr) == deref((<PRawDict> other).ptr)             # <<<<<<<<<<<<<<
 *         elif op == 3:
 *             if not isinstance(other, PRawDict):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong(((*((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self)->ptr) == (*((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_other)->ptr))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pcontainers/pdict_impl.pxi":45
 * 
 *     def __richcmp__(self, other, op):
 *         if op == 2:             # <<<<<<<<<<<<<<
 *             if not isinstance(other, PRawDict):
 *                 return False
 */
  }

  /* "pcontainers/pdict_impl.pxi":53
 *                 return False
 *             return deref((<PRawDict> self).ptr) == deref((<PRawDict> other).ptr)
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             if not isinstance(other, PRawDict):
 *                 return True
 */
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_op, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "pcontainers/pdict_impl.pxi":54
 *             return deref((<PRawDict> self).ptr) == deref((<PRawDict> other).ptr)
 *         elif op == 3:
 *             if not isinstance(other, PRawDict):             # <<<<<<<<<<<<<<
 *                 return True
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 */
    __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PRawDict); 
    __pyx_t_2 = ((!(__pyx_t_3 != 0)) != 0);
    if (__pyx_t_2) {

      /* "pcontainers/pdict_impl.pxi":55
 *         elif op == 3:
 *             if not isinstance(other, PRawDict):
 *                 return True             # <<<<<<<<<<<<<<
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 *                 return True
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_True);
      __pyx_r = Py_True;
      goto __pyx_L0;

      /* "pcontainers/pdict_impl.pxi":54
 *             return deref((<PRawDict> self).ptr) == deref((<PRawDict> other).ptr)
 *         elif op == 3:
 *             if not isinstance(other, PRawDict):             # <<<<<<<<<<<<<<
 *                 return True
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 */
    }

    /* "pcontainers/pdict_impl.pxi":56
 *             if not isinstance(other, PRawDict):
 *                 return True
 *             if isinstance(self, PDict) and not isinstance(other, PDict):             # <<<<<<<<<<<<<<
 *                 return True
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 */
    __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_11pcontainers_6_pdict_PDict); 
    __pyx_t_4 = (__pyx_t_3 != 0);
    if (__pyx_t_4) {
    } else {
      __pyx_t_2 = __pyx_t_4;
      goto __pyx_L13_bool_binop_done;
    }
    __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PDict); 
    __pyx_t_3 = ((!(__pyx_t_4 != 0)) != 0);
    __pyx_t_2 = __pyx_t_3;
    __pyx_L13_bool_binop_done:;
    if (__pyx_t_2) {

      /* "pcontainers/pdict_impl.pxi":57
 *                 return True
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 *                 return True             # <<<<<<<<<<<<<<
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 *                 return True
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_True);
      __pyx_r = Py_True;
      goto __pyx_L0;

      /* "pcontainers/pdict_impl.pxi":56
 *             if not isinstance(other, PRawDict):
 *                 return True
 *             if isinstance(self, PDict) and not isinstance(other, PDict):             # <<<<<<<<<<<<<<
 *                 return True
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 */
    }

    /* "pcontainers/pdict_impl.pxi":58
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 *                 return True
 *             if isinstance(other, PDict) and not isinstance(self, PDict):             # <<<<<<<<<<<<<<
 *                 return True
 *             return deref((<PRawDict> self).ptr) != deref((<PRawDict> other).ptr)
 */
    __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PDict); 
    __pyx_t_4 = (__pyx_t_3 != 0);
    if (__pyx_t_4) {
    } else {
      __pyx_t_2 = __pyx_t_4;
      goto __pyx_L16_bool_binop_done;
    }
    __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_11pcontainers_6_pdict_PDict); 
    __pyx_t_3 = ((!(__pyx_t_4 != 0)) != 0);
    __pyx_t_2 = __pyx_t_3;
    __pyx_L16_bool_binop_done:;
    if (__pyx_t_2) {

      /* "pcontainers/pdict_impl.pxi":59
 *                 return True
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 *                 return True             # <<<<<<<<<<<<<<
 *             return deref((<PRawDict> self).ptr) != deref((<PRawDict> other).ptr)
 *         raise ValueError("unsupported comparison")
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_True);
      __pyx_r = Py_True;
      goto __pyx_L0;

      /* "pcontainers/pdict_impl.pxi":58
 *             if isinstance(self, PDict) and not isinstance(other, PDict):
 *                 return True
 *             if isinstance(other, PDict) and not isinstance(self, PDict):             # <<<<<<<<<<<<<<
 *                 return True
 *             return deref((<PRawDict> self).ptr) != deref((<PRawDict> other).ptr)
 */
    }

    /* "pcontainers/pdict_impl.pxi":60
 *             if isinstance(other, PDict) and not isinstance(self, PDict):
 *                 return True
 *             return deref((<PRawDict> self).ptr) != deref((<PRawDict> other).ptr)             # <<<<<<<<<<<<<<
 *         raise ValueError("unsupported comparison")
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyBool_FromLong(((*((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self)->ptr) != (*((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_other)->ptr))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pcontainers/pdict_impl.pxi":53
 *                 return False
 *             return deref((<PRawDict> self).ptr) == deref((<PRawDict> other).ptr)
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             if not isinstance(other, PRawDict):
 *                 return True
 */
  }

  /* "pcontainers/pdict_impl.pxi":61
 *                 return True
 *             return deref((<PRawDict> self).ptr) != deref((<PRawDict> other).ptr)
 *         raise ValueError("unsupported comparison")             # <<<<<<<<<<<<<<
 * 
 *     property dirname:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[1]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/pdict_impl.pxi":44
 *         return dict, (self.noiteritems(), )
 * 
 *     def __richcmp__(self, other, op):             # <<<<<<<<<<<<<<
 *         if op == 2:
 *             if not isinstance(other, PRawDict):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":64
 * 
 *     property dirname:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return topy(self.ptr.get_dirname())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_7dirname_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_7dirname_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_7dirname___get__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_7dirname___get__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/pdict_impl.pxi":65
 *     property dirname:
 *         def __get__(self):
 *             return topy(self.ptr.get_dirname())             # <<<<<<<<<<<<<<
 * 
 *     property dbname:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_self->ptr->get_dirname()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":64
 * 
 *     property dirname:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return topy(self.ptr.get_dirname())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.dirname.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":68
 * 
 *     property dbname:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return topy(self.ptr.get_dbname())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_6dbname_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_6dbname_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_6dbname___get__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_6dbname___get__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/pdict_impl.pxi":69
 *     property dbname:
 *         def __get__(self):
 *             return topy(self.ptr.get_dbname())             # <<<<<<<<<<<<<<
 * 
 *     # the following _get* functions allow us to release the GIL when retrieving data from LMDB
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_self->ptr->get_dbname()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":68
 * 
 *     property dbname:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return topy(self.ptr.get_dbname())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.dbname.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":80
 *     # all this can be pretty useful when dealing with big values from LMDB
 * 
 *     cdef raw_get_key(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef MDB_val k
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it) {
  int __pyx_v_keysize;
  MDB_val __pyx_v_k;
  PyObject *__pyx_v_obj = 0;
  utils::PyBufferWrap __pyx_v_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  utils::PyBufferWrap __pyx_t_3;
  MDB_val __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_key", 0);

  /* "pcontainers/pdict_impl.pxi":81
 * 
 *     cdef raw_get_key(self, cppConstIterator& it):
 *         cdef int keysize = self.ptr.get_maxkeysize()             # <<<<<<<<<<<<<<
 *         cdef MDB_val k
 *         cdef bytearray obj = bytearray(keysize)
 */
  __pyx_v_keysize = __pyx_v_self->ptr->get_maxkeysize();

  /* "pcontainers/pdict_impl.pxi":83
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef MDB_val k
 *         cdef bytearray obj = bytearray(keysize)             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_keysize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyByteArray_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_obj = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":84
 *         cdef MDB_val k
 *         cdef bytearray obj = bytearray(keysize)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             k = it.get_key_buffer()
 */
  try {
    __pyx_t_3 = utils::PyBufferWrap(__pyx_v_obj);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_view = boost::move(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":85
 *         cdef bytearray obj = bytearray(keysize)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k = it.get_key_buffer()
 *             memcpy(view.buf(), k.mv_data, k.mv_size)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":86
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:
 *             k = it.get_key_buffer()             # <<<<<<<<<<<<<<
 *             memcpy(view.buf(), k.mv_data, k.mv_size)
 *         view.close()
 */
        try {
          __pyx_t_4 = __pyx_v_it.get_key_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_k = __pyx_t_4;

        /* "pcontainers/pdict_impl.pxi":87
 *         with nogil:
 *             k = it.get_key_buffer()
 *             memcpy(view.buf(), k.mv_data, k.mv_size)             # <<<<<<<<<<<<<<
 *         view.close()
 *         PyByteArray_Resize(obj, k.mv_size)
 */
        memcpy(__pyx_v_view.buf(), __pyx_v_k.mv_data, __pyx_v_k.mv_size);
      }

      /* "pcontainers/pdict_impl.pxi":85
 *         cdef bytearray obj = bytearray(keysize)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k = it.get_key_buffer()
 *             memcpy(view.buf(), k.mv_data, k.mv_size)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":88
 *             k = it.get_key_buffer()
 *             memcpy(view.buf(), k.mv_data, k.mv_size)
 *         view.close()             # <<<<<<<<<<<<<<
 *         PyByteArray_Resize(obj, k.mv_size)
 *         return obj
 */
  __pyx_v_view.close();

  /* "pcontainers/pdict_impl.pxi":89
 *             memcpy(view.buf(), k.mv_data, k.mv_size)
 *         view.close()
 *         PyByteArray_Resize(obj, k.mv_size)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  PyByteArray_Resize(__pyx_v_obj, __pyx_v_k.mv_size);

  /* "pcontainers/pdict_impl.pxi":90
 *         view.close()
 *         PyByteArray_Resize(obj, k.mv_size)
 *         return obj             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_get_key_buf(self, cppIterator& it):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":80
 *     # all this can be pretty useful when dealing with big values from LMDB
 * 
 *     cdef raw_get_key(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef MDB_val k
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_key", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":92
 *         return obj
 * 
 *     cdef raw_get_key_buf(self, cppIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val k
 *         cdef void* ptr
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key_buf(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::iterator &__pyx_v_it) {
  MDB_val __pyx_v_k;
  void *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  MDB_val __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_key_buf", 0);

  /* "pcontainers/pdict_impl.pxi":95
 *         cdef MDB_val k
 *         cdef void* ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k = it.get_key_buffer()
 *             ptr = copy_mdb_val(k)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":96
 *         cdef void* ptr
 *         with nogil:
 *             k = it.get_key_buffer()             # <<<<<<<<<<<<<<
 *             ptr = copy_mdb_val(k)
 *         return make_mbufferio(ptr, k.mv_size)
 */
        try {
          __pyx_t_1 = __pyx_v_it.get_key_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_k = __pyx_t_1;

        /* "pcontainers/pdict_impl.pxi":97
 *         with nogil:
 *             k = it.get_key_buffer()
 *             ptr = copy_mdb_val(k)             # <<<<<<<<<<<<<<
 *         return make_mbufferio(ptr, k.mv_size)
 * 
 */
        __pyx_v_ptr = __pyx_f_11pcontainers_6_pdict_copy_mdb_val(__pyx_v_k);
      }

      /* "pcontainers/pdict_impl.pxi":95
 *         cdef MDB_val k
 *         cdef void* ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k = it.get_key_buffer()
 *             ptr = copy_mdb_val(k)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":98
 *             k = it.get_key_buffer()
 *             ptr = copy_mdb_val(k)
 *         return make_mbufferio(ptr, k.mv_size)             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_get_key_buf_const(self, cppConstIterator& it):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_make_mbufferio(__pyx_v_ptr, __pyx_v_k.mv_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":92
 *         return obj
 * 
 *     cdef raw_get_key_buf(self, cppIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val k
 *         cdef void* ptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_key_buf", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":100
 *         return make_mbufferio(ptr, k.mv_size)
 * 
 *     cdef raw_get_key_buf_const(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val k
 *         cdef void* ptr
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key_buf_const(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it) {
  MDB_val __pyx_v_k;
  void *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  MDB_val __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_key_buf_const", 0);

  /* "pcontainers/pdict_impl.pxi":103
 *         cdef MDB_val k
 *         cdef void* ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k = it.get_key_buffer()
 *             ptr = copy_mdb_val(k)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":104
 *         cdef void* ptr
 *         with nogil:
 *             k = it.get_key_buffer()             # <<<<<<<<<<<<<<
 *             ptr = copy_mdb_val(k)
 *         return make_mbufferio(ptr, k.mv_size)
 */
        try {
          __pyx_t_1 = __pyx_v_it.get_key_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_k = __pyx_t_1;

        /* "pcontainers/pdict_impl.pxi":105
 *         with nogil:
 *             k = it.get_key_buffer()
 *             ptr = copy_mdb_val(k)             # <<<<<<<<<<<<<<
 *         return make_mbufferio(ptr, k.mv_size)
 * 
 */
        __pyx_v_ptr = __pyx_f_11pcontainers_6_pdict_copy_mdb_val(__pyx_v_k);
      }

      /* "pcontainers/pdict_impl.pxi":103
 *         cdef MDB_val k
 *         cdef void* ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k = it.get_key_buffer()
 *             ptr = copy_mdb_val(k)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":106
 *             k = it.get_key_buffer()
 *             ptr = copy_mdb_val(k)
 *         return make_mbufferio(ptr, k.mv_size)             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_get_value(self, cppConstIterator& it):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_make_mbufferio(__pyx_v_ptr, __pyx_v_k.mv_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":100
 *         return make_mbufferio(ptr, k.mv_size)
 * 
 *     cdef raw_get_key_buf_const(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val k
 *         cdef void* ptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_key_buf_const", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":108
 *         return make_mbufferio(ptr, k.mv_size)
 * 
 *     cdef raw_get_value(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val v
 *         cdef cpp_bool done = 0
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it) {
  MDB_val __pyx_v_v;
  bool __pyx_v_done;
  PyObject *__pyx_v_obj = 0;
  utils::PyBufferWrap __pyx_v_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  MDB_val __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_value", 0);

  /* "pcontainers/pdict_impl.pxi":110
 *     cdef raw_get_value(self, cppConstIterator& it):
 *         cdef MDB_val v
 *         cdef cpp_bool done = 0             # <<<<<<<<<<<<<<
 *         cdef bytearray obj = bytearray(4096)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 */
  __pyx_v_done = 0;

  /* "pcontainers/pdict_impl.pxi":111
 *         cdef MDB_val v
 *         cdef cpp_bool done = 0
 *         cdef bytearray obj = bytearray(4096)             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyByteArray_Type)), __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_obj = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":112
 *         cdef cpp_bool done = 0
 *         cdef bytearray obj = bytearray(4096)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             v = it.get_value_buffer()
 */
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_v_obj);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":113
 *         cdef bytearray obj = bytearray(4096)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = it.get_value_buffer()
 *             if v.mv_size <= 4096:
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":114
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:
 *             v = it.get_value_buffer()             # <<<<<<<<<<<<<<
 *             if v.mv_size <= 4096:
 *                 memcpy(view.buf(), v.mv_data, v.mv_size)
 */
        try {
          __pyx_t_3 = __pyx_v_it.get_value_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_v = __pyx_t_3;

        /* "pcontainers/pdict_impl.pxi":115
 *         with nogil:
 *             v = it.get_value_buffer()
 *             if v.mv_size <= 4096:             # <<<<<<<<<<<<<<
 *                 memcpy(view.buf(), v.mv_data, v.mv_size)
 *                 done = 1
 */
        __pyx_t_4 = ((__pyx_v_v.mv_size <= 0x1000) != 0);
        if (__pyx_t_4) {

          /* "pcontainers/pdict_impl.pxi":116
 *             v = it.get_value_buffer()
 *             if v.mv_size <= 4096:
 *                 memcpy(view.buf(), v.mv_data, v.mv_size)             # <<<<<<<<<<<<<<
 *                 done = 1
 *         view.close()
 */
          memcpy(__pyx_v_view.buf(), __pyx_v_v.mv_data, __pyx_v_v.mv_size);

          /* "pcontainers/pdict_impl.pxi":117
 *             if v.mv_size <= 4096:
 *                 memcpy(view.buf(), v.mv_data, v.mv_size)
 *                 done = 1             # <<<<<<<<<<<<<<
 *         view.close()
 *         if done:
 */
          __pyx_v_done = 1;

          /* "pcontainers/pdict_impl.pxi":115
 *         with nogil:
 *             v = it.get_value_buffer()
 *             if v.mv_size <= 4096:             # <<<<<<<<<<<<<<
 *                 memcpy(view.buf(), v.mv_data, v.mv_size)
 *                 done = 1
 */
        }
      }

      /* "pcontainers/pdict_impl.pxi":113
 *         cdef bytearray obj = bytearray(4096)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = it.get_value_buffer()
 *             if v.mv_size <= 4096:
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":118
 *                 memcpy(view.buf(), v.mv_data, v.mv_size)
 *                 done = 1
 *         view.close()             # <<<<<<<<<<<<<<
 *         if done:
 *             PyByteArray_Resize(obj, v.mv_size)
 */
  __pyx_v_view.close();

  /* "pcontainers/pdict_impl.pxi":119
 *                 done = 1
 *         view.close()
 *         if done:             # <<<<<<<<<<<<<<
 *             PyByteArray_Resize(obj, v.mv_size)
 *             return obj
 */
  __pyx_t_4 = (__pyx_v_done != 0);
  if (__pyx_t_4) {

    /* "pcontainers/pdict_impl.pxi":120
 *         view.close()
 *         if done:
 *             PyByteArray_Resize(obj, v.mv_size)             # <<<<<<<<<<<<<<
 *             return obj
 * 
 */
    PyByteArray_Resize(__pyx_v_obj, __pyx_v_v.mv_size);

    /* "pcontainers/pdict_impl.pxi":121
 *         if done:
 *             PyByteArray_Resize(obj, v.mv_size)
 *             return obj             # <<<<<<<<<<<<<<
 * 
 *         obj = bytearray(v.mv_size)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_obj);
    __pyx_r = __pyx_v_obj;
    goto __pyx_L0;

    /* "pcontainers/pdict_impl.pxi":119
 *                 done = 1
 *         view.close()
 *         if done:             # <<<<<<<<<<<<<<
 *             PyByteArray_Resize(obj, v.mv_size)
 *             return obj
 */
  }

  /* "pcontainers/pdict_impl.pxi":123
 *             return obj
 * 
 *         obj = bytearray(v.mv_size)             # <<<<<<<<<<<<<<
 *         view = move(PyBufferWrap(obj))
 *         with nogil:
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_v.mv_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyByteArray_Type)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF_SET(__pyx_v_obj, ((PyObject*)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":124
 * 
 *         obj = bytearray(v.mv_size)
 *         view = move(PyBufferWrap(obj))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             memcpy(view.buf(), v.mv_data, v.mv_size)
 */
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_v_obj);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":125
 *         obj = bytearray(v.mv_size)
 *         view = move(PyBufferWrap(obj))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             memcpy(view.buf(), v.mv_data, v.mv_size)
 *         view.close()
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":126
 *         view = move(PyBufferWrap(obj))
 *         with nogil:
 *             memcpy(view.buf(), v.mv_data, v.mv_size)             # <<<<<<<<<<<<<<
 *         view.close()
 *         return obj
 */
        memcpy(__pyx_v_view.buf(), __pyx_v_v.mv_data, __pyx_v_v.mv_size);
      }

      /* "pcontainers/pdict_impl.pxi":125
 *         obj = bytearray(v.mv_size)
 *         view = move(PyBufferWrap(obj))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             memcpy(view.buf(), v.mv_data, v.mv_size)
 *         view.close()
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L10;
        }
        __pyx_L10:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":127
 *         with nogil:
 *             memcpy(view.buf(), v.mv_data, v.mv_size)
 *         view.close()             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_v_view.close();

  /* "pcontainers/pdict_impl.pxi":128
 *             memcpy(view.buf(), v.mv_data, v.mv_size)
 *         view.close()
 *         return obj             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_get_value_buf(self, cppIterator& it):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":108
 *         return make_mbufferio(ptr, k.mv_size)
 * 
 *     cdef raw_get_value(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val v
 *         cdef cpp_bool done = 0
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":130
 *         return obj
 * 
 *     cdef raw_get_value_buf(self, cppIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val v
 *         cdef void* ptr
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value_buf(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::iterator &__pyx_v_it) {
  MDB_val __pyx_v_v;
  void *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  MDB_val __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_value_buf", 0);

  /* "pcontainers/pdict_impl.pxi":133
 *         cdef MDB_val v
 *         cdef void* ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = it.get_value_buffer()
 *             ptr = copy_mdb_val(v)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":134
 *         cdef void* ptr
 *         with nogil:
 *             v = it.get_value_buffer()             # <<<<<<<<<<<<<<
 *             ptr = copy_mdb_val(v)
 *         return make_mbufferio(ptr, v.mv_size)
 */
        try {
          __pyx_t_1 = __pyx_v_it.get_value_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_v = __pyx_t_1;

        /* "pcontainers/pdict_impl.pxi":135
 *         with nogil:
 *             v = it.get_value_buffer()
 *             ptr = copy_mdb_val(v)             # <<<<<<<<<<<<<<
 *         return make_mbufferio(ptr, v.mv_size)
 * 
 */
        __pyx_v_ptr = __pyx_f_11pcontainers_6_pdict_copy_mdb_val(__pyx_v_v);
      }

      /* "pcontainers/pdict_impl.pxi":133
 *         cdef MDB_val v
 *         cdef void* ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = it.get_value_buffer()
 *             ptr = copy_mdb_val(v)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":136
 *             v = it.get_value_buffer()
 *             ptr = copy_mdb_val(v)
 *         return make_mbufferio(ptr, v.mv_size)             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_get_value_buf_const(self, cppConstIterator& it):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_make_mbufferio(__pyx_v_ptr, __pyx_v_v.mv_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":130
 *         return obj
 * 
 *     cdef raw_get_value_buf(self, cppIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val v
 *         cdef void* ptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_value_buf", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":138
 *         return make_mbufferio(ptr, v.mv_size)
 * 
 *     cdef raw_get_value_buf_const(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val v
 *         cdef void* ptr
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value_buf_const(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it) {
  MDB_val __pyx_v_v;
  void *__pyx_v_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  MDB_val __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_value_buf_const", 0);

  /* "pcontainers/pdict_impl.pxi":141
 *         cdef MDB_val v
 *         cdef void* ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = it.get_value_buffer()
 *             ptr = copy_mdb_val(v)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":142
 *         cdef void* ptr
 *         with nogil:
 *             v = it.get_value_buffer()             # <<<<<<<<<<<<<<
 *             ptr = copy_mdb_val(v)
 *         return make_mbufferio(ptr, v.mv_size)
 */
        try {
          __pyx_t_1 = __pyx_v_it.get_value_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_v = __pyx_t_1;

        /* "pcontainers/pdict_impl.pxi":143
 *         with nogil:
 *             v = it.get_value_buffer()
 *             ptr = copy_mdb_val(v)             # <<<<<<<<<<<<<<
 *         return make_mbufferio(ptr, v.mv_size)
 * 
 */
        __pyx_v_ptr = __pyx_f_11pcontainers_6_pdict_copy_mdb_val(__pyx_v_v);
      }

      /* "pcontainers/pdict_impl.pxi":141
 *         cdef MDB_val v
 *         cdef void* ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = it.get_value_buffer()
 *             ptr = copy_mdb_val(v)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":144
 *             v = it.get_value_buffer()
 *             ptr = copy_mdb_val(v)
 *         return make_mbufferio(ptr, v.mv_size)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_make_mbufferio(__pyx_v_ptr, __pyx_v_v.mv_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":138
 *         return make_mbufferio(ptr, v.mv_size)
 * 
 *     cdef raw_get_value_buf_const(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef MDB_val v
 *         cdef void* ptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_value_buf_const", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":147
 * 
 * 
 *     cdef raw_get_item(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef pair[MDB_val, MDB_val] kv
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it) {
  int __pyx_v_keysize;
  std::pair<MDB_val,MDB_val>  __pyx_v_kv;
  bool __pyx_v_done;
  PyObject *__pyx_v_key_obj = 0;
  PyObject *__pyx_v_value_obj = 0;
  utils::PyBufferWrap __pyx_v_key_view;
  utils::PyBufferWrap __pyx_v_value_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  utils::PyBufferWrap __pyx_t_3;
  std::pair<MDB_val,MDB_val>  __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_item", 0);

  /* "pcontainers/pdict_impl.pxi":148
 * 
 *     cdef raw_get_item(self, cppConstIterator& it):
 *         cdef int keysize = self.ptr.get_maxkeysize()             # <<<<<<<<<<<<<<
 *         cdef pair[MDB_val, MDB_val] kv
 *         cdef cpp_bool done = 0
 */
  __pyx_v_keysize = __pyx_v_self->ptr->get_maxkeysize();

  /* "pcontainers/pdict_impl.pxi":150
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef pair[MDB_val, MDB_val] kv
 *         cdef cpp_bool done = 0             # <<<<<<<<<<<<<<
 *         cdef bytearray key_obj = bytearray(keysize)
 *         cdef bytearray value_obj = bytearray(4096)
 */
  __pyx_v_done = 0;

  /* "pcontainers/pdict_impl.pxi":151
 *         cdef pair[MDB_val, MDB_val] kv
 *         cdef cpp_bool done = 0
 *         cdef bytearray key_obj = bytearray(keysize)             # <<<<<<<<<<<<<<
 *         cdef bytearray value_obj = bytearray(4096)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_keysize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyByteArray_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_key_obj = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":152
 *         cdef cpp_bool done = 0
 *         cdef bytearray key_obj = bytearray(keysize)
 *         cdef bytearray value_obj = bytearray(4096)             # <<<<<<<<<<<<<<
 * 
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key_obj))
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyByteArray_Type)), __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_value_obj = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":154
 *         cdef bytearray value_obj = bytearray(4096)
 * 
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key_obj))             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(value_obj))
 * 
 */
  try {
    __pyx_t_3 = utils::PyBufferWrap(__pyx_v_key_obj);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_key_view = boost::move(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":155
 * 
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key_obj))
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(value_obj))             # <<<<<<<<<<<<<<
 * 
 *         with nogil:
 */
  try {
    __pyx_t_3 = utils::PyBufferWrap(__pyx_v_value_obj);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_value_view = boost::move(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":157
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(value_obj))
 * 
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kv = it.get_item_buffer()
 *             memcpy(key_view.buf(), kv.first.mv_data, kv.first.mv_size)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":158
 * 
 *         with nogil:
 *             kv = it.get_item_buffer()             # <<<<<<<<<<<<<<
 *             memcpy(key_view.buf(), kv.first.mv_data, kv.first.mv_size)
 *             if kv.second.mv_size <= 4096:
 */
        try {
          __pyx_t_4 = __pyx_v_it.get_item_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_kv = __pyx_t_4;

        /* "pcontainers/pdict_impl.pxi":159
 *         with nogil:
 *             kv = it.get_item_buffer()
 *             memcpy(key_view.buf(), kv.first.mv_data, kv.first.mv_size)             # <<<<<<<<<<<<<<
 *             if kv.second.mv_size <= 4096:
 *                 memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 */
        memcpy(__pyx_v_key_view.buf(), __pyx_v_kv.first.mv_data, __pyx_v_kv.first.mv_size);

        /* "pcontainers/pdict_impl.pxi":160
 *             kv = it.get_item_buffer()
 *             memcpy(key_view.buf(), kv.first.mv_data, kv.first.mv_size)
 *             if kv.second.mv_size <= 4096:             # <<<<<<<<<<<<<<
 *                 memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 *                 done = 1
 */
        __pyx_t_5 = ((__pyx_v_kv.second.mv_size <= 0x1000) != 0);
        if (__pyx_t_5) {

          /* "pcontainers/pdict_impl.pxi":161
 *             memcpy(key_view.buf(), kv.first.mv_data, kv.first.mv_size)
 *             if kv.second.mv_size <= 4096:
 *                 memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)             # <<<<<<<<<<<<<<
 *                 done = 1
 *         key_view.close()
 */
          memcpy(__pyx_v_value_view.buf(), __pyx_v_kv.second.mv_data, __pyx_v_kv.second.mv_size);

          /* "pcontainers/pdict_impl.pxi":162
 *             if kv.second.mv_size <= 4096:
 *                 memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 *                 done = 1             # <<<<<<<<<<<<<<
 *         key_view.close()
 *         value_view.close()
 */
          __pyx_v_done = 1;

          /* "pcontainers/pdict_impl.pxi":160
 *             kv = it.get_item_buffer()
 *             memcpy(key_view.buf(), kv.first.mv_data, kv.first.mv_size)
 *             if kv.second.mv_size <= 4096:             # <<<<<<<<<<<<<<
 *                 memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 *                 done = 1
 */
        }
      }

      /* "pcontainers/pdict_impl.pxi":157
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(value_obj))
 * 
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kv = it.get_item_buffer()
 *             memcpy(key_view.buf(), kv.first.mv_data, kv.first.mv_size)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":163
 *                 memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 *                 done = 1
 *         key_view.close()             # <<<<<<<<<<<<<<
 *         value_view.close()
 *         PyByteArray_Resize(key_obj, kv.first.mv_size)
 */
  __pyx_v_key_view.close();

  /* "pcontainers/pdict_impl.pxi":164
 *                 done = 1
 *         key_view.close()
 *         value_view.close()             # <<<<<<<<<<<<<<
 *         PyByteArray_Resize(key_obj, kv.first.mv_size)
 *         if done:
 */
  __pyx_v_value_view.close();

  /* "pcontainers/pdict_impl.pxi":165
 *         key_view.close()
 *         value_view.close()
 *         PyByteArray_Resize(key_obj, kv.first.mv_size)             # <<<<<<<<<<<<<<
 *         if done:
 *             PyByteArray_Resize(value_obj, kv.second.mv_size)
 */
  PyByteArray_Resize(__pyx_v_key_obj, __pyx_v_kv.first.mv_size);

  /* "pcontainers/pdict_impl.pxi":166
 *         value_view.close()
 *         PyByteArray_Resize(key_obj, kv.first.mv_size)
 *         if done:             # <<<<<<<<<<<<<<
 *             PyByteArray_Resize(value_obj, kv.second.mv_size)
 *             return key_obj, value_obj
 */
  __pyx_t_5 = (__pyx_v_done != 0);
  if (__pyx_t_5) {

    /* "pcontainers/pdict_impl.pxi":167
 *         PyByteArray_Resize(key_obj, kv.first.mv_size)
 *         if done:
 *             PyByteArray_Resize(value_obj, kv.second.mv_size)             # <<<<<<<<<<<<<<
 *             return key_obj, value_obj
 * 
 */
    PyByteArray_Resize(__pyx_v_value_obj, __pyx_v_kv.second.mv_size);

    /* "pcontainers/pdict_impl.pxi":168
 *         if done:
 *             PyByteArray_Resize(value_obj, kv.second.mv_size)
 *             return key_obj, value_obj             # <<<<<<<<<<<<<<
 * 
 *         value_obj = bytearray(kv.second.mv_size)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_key_obj);
    __Pyx_GIVEREF(__pyx_v_key_obj);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_key_obj);
    __Pyx_INCREF(__pyx_v_value_obj);
    __Pyx_GIVEREF(__pyx_v_value_obj);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_value_obj);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pcontainers/pdict_impl.pxi":166
 *         value_view.close()
 *         PyByteArray_Resize(key_obj, kv.first.mv_size)
 *         if done:             # <<<<<<<<<<<<<<
 *             PyByteArray_Resize(value_obj, kv.second.mv_size)
 *             return key_obj, value_obj
 */
  }

  /* "pcontainers/pdict_impl.pxi":170
 *             return key_obj, value_obj
 * 
 *         value_obj = bytearray(kv.second.mv_size)             # <<<<<<<<<<<<<<
 *         value_view = move(PyBufferWrap(value_obj))
 *         with nogil:
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_kv.second.mv_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyByteArray_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_value_obj, ((PyObject*)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":171
 * 
 *         value_obj = bytearray(kv.second.mv_size)
 *         value_view = move(PyBufferWrap(value_obj))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 */
  try {
    __pyx_t_3 = utils::PyBufferWrap(__pyx_v_value_obj);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_value_view = boost::move(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":172
 *         value_obj = bytearray(kv.second.mv_size)
 *         value_view = move(PyBufferWrap(value_obj))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 *         value_view.close()
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":173
 *         value_view = move(PyBufferWrap(value_obj))
 *         with nogil:
 *             memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)             # <<<<<<<<<<<<<<
 *         value_view.close()
 *         return key_obj, value_obj
 */
        memcpy(__pyx_v_value_view.buf(), __pyx_v_kv.second.mv_data, __pyx_v_kv.second.mv_size);
      }

      /* "pcontainers/pdict_impl.pxi":172
 *         value_obj = bytearray(kv.second.mv_size)
 *         value_view = move(PyBufferWrap(value_obj))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 *         value_view.close()
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L10;
        }
        __pyx_L10:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":174
 *         with nogil:
 *             memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 *         value_view.close()             # <<<<<<<<<<<<<<
 *         return key_obj, value_obj
 * 
 */
  __pyx_v_value_view.close();

  /* "pcontainers/pdict_impl.pxi":175
 *             memcpy(value_view.buf(), kv.second.mv_data, kv.second.mv_size)
 *         value_view.close()
 *         return key_obj, value_obj             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_get_item_buf(self, cppIterator& it):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_key_obj);
  __Pyx_GIVEREF(__pyx_v_key_obj);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_key_obj);
  __Pyx_INCREF(__pyx_v_value_obj);
  __Pyx_GIVEREF(__pyx_v_value_obj);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_value_obj);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":147
 * 
 * 
 *     cdef raw_get_item(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef pair[MDB_val, MDB_val] kv
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_item", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_key_obj);
  __Pyx_XDECREF(__pyx_v_value_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":177
 *         return key_obj, value_obj
 * 
 *     cdef raw_get_item_buf(self, cppIterator& it):             # <<<<<<<<<<<<<<
 *         cdef pair[MDB_val, MDB_val] kv
 *         cdef void* key_ptr
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item_buf(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::iterator &__pyx_v_it) {
  std::pair<MDB_val,MDB_val>  __pyx_v_kv;
  void *__pyx_v_key_ptr;
  void *__pyx_v_value_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::pair<MDB_val,MDB_val>  __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_item_buf", 0);

  /* "pcontainers/pdict_impl.pxi":181
 *         cdef void* key_ptr
 *         cdef void* value_ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kv = it.get_item_buffer()
 *             key_ptr = copy_mdb_val(kv.first)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":182
 *         cdef void* value_ptr
 *         with nogil:
 *             kv = it.get_item_buffer()             # <<<<<<<<<<<<<<
 *             key_ptr = copy_mdb_val(kv.first)
 *             value_ptr = copy_mdb_val(kv.second)
 */
        try {
          __pyx_t_1 = __pyx_v_it.get_item_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_kv = __pyx_t_1;

        /* "pcontainers/pdict_impl.pxi":183
 *         with nogil:
 *             kv = it.get_item_buffer()
 *             key_ptr = copy_mdb_val(kv.first)             # <<<<<<<<<<<<<<
 *             value_ptr = copy_mdb_val(kv.second)
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)
 */
        __pyx_v_key_ptr = __pyx_f_11pcontainers_6_pdict_copy_mdb_val(__pyx_v_kv.first);

        /* "pcontainers/pdict_impl.pxi":184
 *             kv = it.get_item_buffer()
 *             key_ptr = copy_mdb_val(kv.first)
 *             value_ptr = copy_mdb_val(kv.second)             # <<<<<<<<<<<<<<
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)
 * 
 */
        __pyx_v_value_ptr = __pyx_f_11pcontainers_6_pdict_copy_mdb_val(__pyx_v_kv.second);
      }

      /* "pcontainers/pdict_impl.pxi":181
 *         cdef void* key_ptr
 *         cdef void* value_ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kv = it.get_item_buffer()
 *             key_ptr = copy_mdb_val(kv.first)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":185
 *             key_ptr = copy_mdb_val(kv.first)
 *             value_ptr = copy_mdb_val(kv.second)
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_get_item_buf_const(self, cppConstIterator& it):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_make_mbufferio(__pyx_v_key_ptr, __pyx_v_kv.first.mv_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_11pcontainers_6_pdict_make_mbufferio(__pyx_v_value_ptr, __pyx_v_kv.second.mv_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":177
 *         return key_obj, value_obj
 * 
 *     cdef raw_get_item_buf(self, cppIterator& it):             # <<<<<<<<<<<<<<
 *         cdef pair[MDB_val, MDB_val] kv
 *         cdef void* key_ptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_item_buf", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":187
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)
 * 
 *     cdef raw_get_item_buf_const(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef pair[MDB_val, MDB_val] kv
 *         cdef void* key_ptr
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item_buf_const(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::const_iterator &__pyx_v_it) {
  std::pair<MDB_val,MDB_val>  __pyx_v_kv;
  void *__pyx_v_key_ptr;
  void *__pyx_v_value_ptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::pair<MDB_val,MDB_val>  __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_get_item_buf_const", 0);

  /* "pcontainers/pdict_impl.pxi":191
 *         cdef void* key_ptr
 *         cdef void* value_ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kv = it.get_item_buffer()
 *             key_ptr = copy_mdb_val(kv.first)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":192
 *         cdef void* value_ptr
 *         with nogil:
 *             kv = it.get_item_buffer()             # <<<<<<<<<<<<<<
 *             key_ptr = copy_mdb_val(kv.first)
 *             value_ptr = copy_mdb_val(kv.second)
 */
        try {
          __pyx_t_1 = __pyx_v_it.get_item_buffer();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_kv = __pyx_t_1;

        /* "pcontainers/pdict_impl.pxi":193
 *         with nogil:
 *             kv = it.get_item_buffer()
 *             key_ptr = copy_mdb_val(kv.first)             # <<<<<<<<<<<<<<
 *             value_ptr = copy_mdb_val(kv.second)
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)
 */
        __pyx_v_key_ptr = __pyx_f_11pcontainers_6_pdict_copy_mdb_val(__pyx_v_kv.first);

        /* "pcontainers/pdict_impl.pxi":194
 *             kv = it.get_item_buffer()
 *             key_ptr = copy_mdb_val(kv.first)
 *             value_ptr = copy_mdb_val(kv.second)             # <<<<<<<<<<<<<<
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)
 * 
 */
        __pyx_v_value_ptr = __pyx_f_11pcontainers_6_pdict_copy_mdb_val(__pyx_v_kv.second);
      }

      /* "pcontainers/pdict_impl.pxi":191
 *         cdef void* key_ptr
 *         cdef void* value_ptr
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kv = it.get_item_buffer()
 *             key_ptr = copy_mdb_val(kv.first)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":195
 *             key_ptr = copy_mdb_val(kv.first)
 *             value_ptr = copy_mdb_val(kv.second)
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)             # <<<<<<<<<<<<<<
 * 
 *     cdef raw_set_item_buf(self, cppIterator& it, k, v):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_make_mbufferio(__pyx_v_key_ptr, __pyx_v_kv.first.mv_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_11pcontainers_6_pdict_make_mbufferio(__pyx_v_value_ptr, __pyx_v_kv.second.mv_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":187
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)
 * 
 *     cdef raw_get_item_buf_const(self, cppConstIterator& it):             # <<<<<<<<<<<<<<
 *         cdef pair[MDB_val, MDB_val] kv
 *         cdef void* key_ptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_get_item_buf_const", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":197
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)
 * 
 *     cdef raw_set_item_buf(self, cppIterator& it, k, v):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(k))
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(v))
 */

static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_set_item_buf(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, quiet::PersistentDict::iterator &__pyx_v_it, PyObject *__pyx_v_k, PyObject *__pyx_v_v) {
  utils::PyBufferWrap __pyx_v_key_view;
  utils::PyBufferWrap __pyx_v_value_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  utils::PyBufferWrap __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raw_set_item_buf", 0);

  /* "pcontainers/pdict_impl.pxi":198
 * 
 *     cdef raw_set_item_buf(self, cppIterator& it, k, v):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(k))             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(v))
 * 
 */
  try {
    __pyx_t_1 = utils::PyBufferWrap(__pyx_v_k);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_key_view = boost::move(__pyx_t_1);

  /* "pcontainers/pdict_impl.pxi":199
 *     cdef raw_set_item_buf(self, cppIterator& it, k, v):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(k))
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(v))             # <<<<<<<<<<<<<<
 * 
 *         with nogil:
 */
  try {
    __pyx_t_1 = utils::PyBufferWrap(__pyx_v_v);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_value_view = boost::move(__pyx_t_1);

  /* "pcontainers/pdict_impl.pxi":201
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(v))
 * 
 *         with nogil:             # <<<<<<<<<<<<<<
 *             it.set_key_value(key_view.get_mdb_val(), value_view.get_mdb_val())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":202
 * 
 *         with nogil:
 *             it.set_key_value(key_view.get_mdb_val(), value_view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, item):
 */
        try {
          __pyx_v_it.set_key_value(__pyx_v_key_view.get_mdb_val(), __pyx_v_value_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":201
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(v))
 * 
 *         with nogil:             # <<<<<<<<<<<<<<
 *             it.set_key_value(key_view.get_mdb_val(), value_view.get_mdb_val())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":197
 *         return make_mbufferio(key_ptr, kv.first.mv_size), make_mbufferio(value_ptr, kv.second.mv_size)
 * 
 *     cdef raw_set_item_buf(self, cppIterator& it, k, v):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(k))
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(v))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.raw_set_item_buf", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":204
 *             it.set_key_value(key_view.get_mdb_val(), value_view.get_mdb_val())
 * 
 *     def __getitem__(self, item):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it = move(cppConstIterator(self.ptr, PyBufferWrap(make_utf8(item)).get_mdb_val()))
 *         if it.has_reached_end():
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_15__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_15__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_14__getitem__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_14__getitem__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_item) {
  quiet::PersistentDict::const_iterator __pyx_v_it;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  quiet::PersistentDict::const_iterator __pyx_t_3;
  bool __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pcontainers/pdict_impl.pxi":205
 * 
 *     def __getitem__(self, item):
 *         cdef cppConstIterator it = move(cppConstIterator(self.ptr, PyBufferWrap(make_utf8(item)).get_mdb_val()))             # <<<<<<<<<<<<<<
 *         if it.has_reached_end():
 *             raise NotFound()
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_item); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  try {
    __pyx_t_3 = quiet::PersistentDict::const_iterator(__pyx_v_self->ptr, __pyx_t_2.get_mdb_val());
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_it = boost::move(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":206
 *     def __getitem__(self, item):
 *         cdef cppConstIterator it = move(cppConstIterator(self.ptr, PyBufferWrap(make_utf8(item)).get_mdb_val()))
 *         if it.has_reached_end():             # <<<<<<<<<<<<<<
 *             raise NotFound()
 *         return self.raw_get_value(it)
 */
  try {
    __pyx_t_4 = __pyx_v_it.has_reached_end();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "pcontainers/pdict_impl.pxi":207
 *         cdef cppConstIterator it = move(cppConstIterator(self.ptr, PyBufferWrap(make_utf8(item)).get_mdb_val()))
 *         if it.has_reached_end():
 *             raise NotFound()             # <<<<<<<<<<<<<<
 *         return self.raw_get_value(it)
 * 
 */
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pdict_impl.pxi":206
 *     def __getitem__(self, item):
 *         cdef cppConstIterator it = move(cppConstIterator(self.ptr, PyBufferWrap(make_utf8(item)).get_mdb_val()))
 *         if it.has_reached_end():             # <<<<<<<<<<<<<<
 *             raise NotFound()
 *         return self.raw_get_value(it)
 */
  }

  /* "pcontainers/pdict_impl.pxi":208
 *         if it.has_reached_end():
 *             raise NotFound()
 *         return self.raw_get_value(it)             # <<<<<<<<<<<<<<
 * 
 *     cpdef get(self, item, default=''):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->__pyx_vtab)->raw_get_value(__pyx_v_self, __pyx_v_it); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":204
 *             it.set_key_value(key_view.get_mdb_val(), value_view.get_mdb_val())
 * 
 *     def __getitem__(self, item):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it = move(cppConstIterator(self.ptr, PyBufferWrap(make_utf8(item)).get_mdb_val()))
 *         if it.has_reached_end():
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":210
 *         return self.raw_get_value(it)
 * 
 *     cpdef get(self, item, default=''):             # <<<<<<<<<<<<<<
 *         try:
 *             return self[item]
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_17get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_get(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_item, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get *__pyx_optional_args) {
  PyObject *__pyx_v_default = ((PyObject *)__pyx_kp_s__5);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default = __pyx_optional_args->__pyx_default;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_17get)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_item);
      __Pyx_GIVEREF(__pyx_v_item);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_item);
      __Pyx_INCREF(__pyx_v_default);
      __Pyx_GIVEREF(__pyx_v_default);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_default);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":211
 * 
 *     cpdef get(self, item, default=''):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[item]
 *         except NotFound:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    /*try:*/ {

      /* "pcontainers/pdict_impl.pxi":212
 *     cpdef get(self, item, default=''):
 *         try:
 *             return self[item]             # <<<<<<<<<<<<<<
 *         except NotFound:
 *             return default
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_item); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L3_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L7_try_return;

      /* "pcontainers/pdict_impl.pxi":211
 * 
 *     cpdef get(self, item, default=''):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[item]
 *         except NotFound:
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/pdict_impl.pxi":213
 *         try:
 *             return self[item]
 *         except NotFound:             # <<<<<<<<<<<<<<
 *             return default
 * 
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = PyErr_ExceptionMatches(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_10) {
      __Pyx_AddTraceback("pcontainers._pdict.PRawDict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "pcontainers/pdict_impl.pxi":214
 *             return self[item]
 *         except NotFound:
 *             return default             # <<<<<<<<<<<<<<
 * 
 *     cpdef setdefault(self, key, default=''):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_default);
      __pyx_r = __pyx_v_default;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "pcontainers/pdict_impl.pxi":211
 * 
 *     cpdef get(self, item, default=''):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[item]
 *         except NotFound:
 */
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L0;
  }

  /* "pcontainers/pdict_impl.pxi":210
 *         return self.raw_get_value(it)
 * 
 *     cpdef get(self, item, default=''):             # <<<<<<<<<<<<<<
 *         try:
 *             return self[item]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_17get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_17get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_item = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_item,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_kp_s__5);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_item)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_item = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_16get(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_item, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_16get(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_default = __pyx_v_default;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->get(__pyx_v_self, __pyx_v_item, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":216
 *             return default
 * 
 *     cpdef setdefault(self, key, default=''):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(make_utf8(default)))
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_19setdefault(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_setdefault(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault *__pyx_optional_args) {
  PyObject *__pyx_v_default = ((PyObject *)__pyx_kp_s__5);
  utils::PyBufferWrap __pyx_v_key_view;
  utils::PyBufferWrap __pyx_v_default_view;
  Bstrlib::CBString __pyx_v_ret;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  utils::PyBufferWrap __pyx_t_7;
  Bstrlib::CBString __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setdefault", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default = __pyx_optional_args->__pyx_default;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setdefault); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_19setdefault)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_key);
      __Pyx_INCREF(__pyx_v_default);
      __Pyx_GIVEREF(__pyx_v_default);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_default);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":217
 * 
 *     cpdef setdefault(self, key, default=''):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(make_utf8(default)))
 *         cdef CBString ret
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_7 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_key_view = boost::move(__pyx_t_7);

  /* "pcontainers/pdict_impl.pxi":218
 *     cpdef setdefault(self, key, default=''):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(make_utf8(default)))             # <<<<<<<<<<<<<<
 *         cdef CBString ret
 *         with nogil:
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_default); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_7 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_default_view = boost::move(__pyx_t_7);

  /* "pcontainers/pdict_impl.pxi":220
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(make_utf8(default)))
 *         cdef CBString ret
 *         with nogil:             # <<<<<<<<<<<<<<
 *             ret = self.ptr.setdefault(key_view.get_mdb_val(), default_view.get_mdb_val())
 *         return topy(ret)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":221
 *         cdef CBString ret
 *         with nogil:
 *             ret = self.ptr.setdefault(key_view.get_mdb_val(), default_view.get_mdb_val())             # <<<<<<<<<<<<<<
 *         return topy(ret)
 * 
 */
        try {
          __pyx_t_8 = __pyx_v_self->ptr->setdefault(__pyx_v_key_view.get_mdb_val(), __pyx_v_default_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_ret = __pyx_t_8;
      }

      /* "pcontainers/pdict_impl.pxi":220
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(make_utf8(default)))
 *         cdef CBString ret
 *         with nogil:             # <<<<<<<<<<<<<<
 *             ret = self.ptr.setdefault(key_view.get_mdb_val(), default_view.get_mdb_val())
 *         return topy(ret)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":222
 *         with nogil:
 *             ret = self.ptr.setdefault(key_view.get_mdb_val(), default_view.get_mdb_val())
 *         return topy(ret)             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_ret); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":216
 *             return default
 * 
 *     cpdef setdefault(self, key, default=''):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(make_utf8(default)))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.setdefault", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_19setdefault(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_19setdefault(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setdefault (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_kp_s__5);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setdefault") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setdefault", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.setdefault", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_18setdefault(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_key, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_18setdefault(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setdefault", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_default = __pyx_v_default;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->setdefault(__pyx_v_self, __pyx_v_key, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.setdefault", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":224
 *         return topy(ret)
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         # the PyBufferWrap definitions can't be moved to the "nogil" section
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_21__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_21__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_20__setitem__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_20__setitem__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  utils::PyBufferWrap __pyx_v_key_view;
  utils::PyBufferWrap __pyx_v_value_view;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "pcontainers/pdict_impl.pxi":226
 *     def __setitem__(self, key, value):
 *         # the PyBufferWrap definitions can't be moved to the "nogil" section
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(make_utf8(value)))
 *         with nogil:
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_key_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":227
 *         # the PyBufferWrap definitions can't be moved to the "nogil" section
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(make_utf8(value)))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.insert(key_view.get_mdb_val(), value_view.get_mdb_val())
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_value_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":228
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(make_utf8(value)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.insert(key_view.get_mdb_val(), value_view.get_mdb_val())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":229
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(make_utf8(value)))
 *         with nogil:
 *             self.ptr.insert(key_view.get_mdb_val(), value_view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     def __delitem__(self, key):
 */
        try {
          __pyx_v_self->ptr->insert(__pyx_v_key_view.get_mdb_val(), __pyx_v_value_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":228
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         cdef PyBufferWrap value_view = move(PyBufferWrap(make_utf8(value)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.insert(key_view.get_mdb_val(), value_view.get_mdb_val())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":224
 *         return topy(ret)
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         # the PyBufferWrap definitions can't be moved to the "nogil" section
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":231
 *             self.ptr.insert(key_view.get_mdb_val(), value_view.get_mdb_val())
 * 
 *     def __delitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         with nogil:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_23__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_23__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__delitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_22__delitem__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_22__delitem__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key) {
  utils::PyBufferWrap __pyx_v_key_view;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__delitem__", 0);

  /* "pcontainers/pdict_impl.pxi":232
 * 
 *     def __delitem__(self, key):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.erase(key_view.get_mdb_val())
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_key_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":233
 *     def __delitem__(self, key):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.erase(key_view.get_mdb_val())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":234
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         with nogil:
 *             self.ptr.erase(key_view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     cpdef erase(self, first, last):
 */
        try {
          __pyx_v_self->ptr->erase(__pyx_v_key_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":233
 *     def __delitem__(self, key):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.erase(key_view.get_mdb_val())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":231
 *             self.ptr.insert(key_view.get_mdb_val(), value_view.get_mdb_val())
 * 
 *     def __delitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(make_utf8(key)))
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__delitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":236
 *             self.ptr.erase(key_view.get_mdb_val())
 * 
 *     cpdef erase(self, first, last):             # <<<<<<<<<<<<<<
 *         cdef CBString f = tocbstring(make_utf8(first))
 *         cdef CBString l = tocbstring(make_utf8(last))
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_25erase(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_erase(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last, int __pyx_skip_dispatch) {
  Bstrlib::CBString __pyx_v_f;
  Bstrlib::CBString __pyx_v_l;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("erase", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_erase); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_25erase)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_first);
      __Pyx_GIVEREF(__pyx_v_first);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_first);
      __Pyx_INCREF(__pyx_v_last);
      __Pyx_GIVEREF(__pyx_v_last);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_last);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":237
 * 
 *     cpdef erase(self, first, last):
 *         cdef CBString f = tocbstring(make_utf8(first))             # <<<<<<<<<<<<<<
 *         cdef CBString l = tocbstring(make_utf8(last))
 *         with nogil:
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_first); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_f = __pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":238
 *     cpdef erase(self, first, last):
 *         cdef CBString f = tocbstring(make_utf8(first))
 *         cdef CBString l = tocbstring(make_utf8(last))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.erase_interval(f, l)
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_last); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_l = __pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":239
 *         cdef CBString f = tocbstring(make_utf8(first))
 *         cdef CBString l = tocbstring(make_utf8(last))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.erase_interval(f, l)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":240
 *         cdef CBString l = tocbstring(make_utf8(last))
 *         with nogil:
 *             self.ptr.erase_interval(f, l)             # <<<<<<<<<<<<<<
 * 
 *     cpdef noiterkeys(self):
 */
        try {
          __pyx_v_self->ptr->erase_interval(__pyx_v_f, __pyx_v_l);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":239
 *         cdef CBString f = tocbstring(make_utf8(first))
 *         cdef CBString l = tocbstring(make_utf8(last))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.erase_interval(f, l)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":236
 *             self.ptr.erase(key_view.get_mdb_val())
 * 
 *     cpdef erase(self, first, last):             # <<<<<<<<<<<<<<
 *         cdef CBString f = tocbstring(make_utf8(first))
 *         cdef CBString l = tocbstring(make_utf8(last))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.erase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_25erase(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_25erase(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_first = 0;
  PyObject *__pyx_v_last = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("erase (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_first,&__pyx_n_s_last,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_first)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_last)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("erase", 1, 2, 2, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "erase") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_first = values[0];
    __pyx_v_last = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("erase", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.erase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_24erase(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_first, __pyx_v_last);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_24erase(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("erase", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_erase(__pyx_v_self, __pyx_v_first, __pyx_v_last, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.erase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":242
 *             self.ptr.erase_interval(f, l)
 * 
 *     cpdef noiterkeys(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] k_vec
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_27noiterkeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_noiterkeys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<Bstrlib::CBString>  __pyx_v_k_vec;
  Bstrlib::CBString __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<Bstrlib::CBString>  __pyx_t_5;
  std::vector<Bstrlib::CBString> ::iterator __pyx_t_6;
  Bstrlib::CBString __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noiterkeys", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_noiterkeys); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_27noiterkeys)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":244
 *     cpdef noiterkeys(self):
 *         cdef vector[CBString] k_vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k_vec = self.ptr.get_all_keys()
 *         return [topy(k) for k in k_vec]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":245
 *         cdef vector[CBString] k_vec
 *         with nogil:
 *             k_vec = self.ptr.get_all_keys()             # <<<<<<<<<<<<<<
 *         return [topy(k) for k in k_vec]
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->ptr->get_all_keys();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_k_vec = __pyx_t_5;
      }

      /* "pcontainers/pdict_impl.pxi":244
 *     cpdef noiterkeys(self):
 *         cdef vector[CBString] k_vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k_vec = self.ptr.get_all_keys()
 *         return [topy(k) for k in k_vec]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":246
 *         with nogil:
 *             k_vec = self.ptr.get_all_keys()
 *         return [topy(k) for k in k_vec]             # <<<<<<<<<<<<<<
 * 
 *     cpdef noitervalues(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_v_k_vec.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_k_vec.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_k = __pyx_t_7;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_k); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":242
 *             self.ptr.erase_interval(f, l)
 * 
 *     cpdef noiterkeys(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] k_vec
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.noiterkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_27noiterkeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_27noiterkeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("noiterkeys (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_26noiterkeys(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_26noiterkeys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noiterkeys", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_noiterkeys(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.noiterkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":248
 *         return [topy(k) for k in k_vec]
 * 
 *     cpdef noitervalues(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] k_vec
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_29noitervalues(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_noitervalues(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<Bstrlib::CBString>  __pyx_v_k_vec;
  Bstrlib::CBString __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<Bstrlib::CBString>  __pyx_t_5;
  std::vector<Bstrlib::CBString> ::iterator __pyx_t_6;
  Bstrlib::CBString __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noitervalues", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_noitervalues); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_29noitervalues)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":250
 *     cpdef noitervalues(self):
 *         cdef vector[CBString] k_vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k_vec = self.ptr.get_all_keys()
 *         return [topy(k) for k in k_vec]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":251
 *         cdef vector[CBString] k_vec
 *         with nogil:
 *             k_vec = self.ptr.get_all_keys()             # <<<<<<<<<<<<<<
 *         return [topy(k) for k in k_vec]
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->ptr->get_all_keys();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_k_vec = __pyx_t_5;
      }

      /* "pcontainers/pdict_impl.pxi":250
 *     cpdef noitervalues(self):
 *         cdef vector[CBString] k_vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             k_vec = self.ptr.get_all_keys()
 *         return [topy(k) for k in k_vec]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":252
 *         with nogil:
 *             k_vec = self.ptr.get_all_keys()
 *         return [topy(k) for k in k_vec]             # <<<<<<<<<<<<<<
 * 
 *     cpdef noiteritems(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_v_k_vec.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_k_vec.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_k = __pyx_t_7;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_k); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":248
 *         return [topy(k) for k in k_vec]
 * 
 *     cpdef noitervalues(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] k_vec
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.noitervalues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_29noitervalues(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_29noitervalues(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("noitervalues (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_28noitervalues(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_28noitervalues(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noitervalues", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_noitervalues(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.noitervalues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":254
 *         return [topy(k) for k in k_vec]
 * 
 *     cpdef noiteritems(self):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[CBString, CBString]] kv_vec
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_31noiteritems(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_noiteritems(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<std::pair<Bstrlib::CBString,Bstrlib::CBString> >  __pyx_v_kv_vec;
  std::pair<Bstrlib::CBString,Bstrlib::CBString>  __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<std::pair<Bstrlib::CBString,Bstrlib::CBString> >  __pyx_t_5;
  std::vector<std::pair<Bstrlib::CBString,Bstrlib::CBString> > ::iterator __pyx_t_6;
  std::pair<Bstrlib::CBString,Bstrlib::CBString>  __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noiteritems", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_noiteritems); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_31noiteritems)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":256
 *     cpdef noiteritems(self):
 *         cdef vector[pair[CBString, CBString]] kv_vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kv_vec = self.ptr.get_all_items()
 *         return [(topy(p.first), topy(p.second)) for p in kv_vec]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":257
 *         cdef vector[pair[CBString, CBString]] kv_vec
 *         with nogil:
 *             kv_vec = self.ptr.get_all_items()             # <<<<<<<<<<<<<<
 *         return [(topy(p.first), topy(p.second)) for p in kv_vec]
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->ptr->get_all_items();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_kv_vec = __pyx_t_5;
      }

      /* "pcontainers/pdict_impl.pxi":256
 *     cpdef noiteritems(self):
 *         cdef vector[pair[CBString, CBString]] kv_vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kv_vec = self.ptr.get_all_items()
 *         return [(topy(p.first), topy(p.second)) for p in kv_vec]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":258
 *         with nogil:
 *             kv_vec = self.ptr.get_all_items()
 *         return [(topy(p.first), topy(p.second)) for p in kv_vec]             # <<<<<<<<<<<<<<
 * 
 *     cpdef pop(self, key, default=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_v_kv_vec.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_kv_vec.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_p = __pyx_t_7;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_p.first); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_p.second); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":254
 *         return [topy(k) for k in k_vec]
 * 
 *     cpdef noiteritems(self):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[CBString, CBString]] kv_vec
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.noiteritems", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_31noiteritems(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_31noiteritems(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("noiteritems (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_30noiteritems(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_30noiteritems(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noiteritems", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_noiteritems(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.noiteritems", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":260
 *         return [(topy(p.first), topy(p.second)) for p in kv_vec]
 * 
 *     cpdef pop(self, key, default=None):             # <<<<<<<<<<<<<<
 *         key = make_utf8(key)
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key))
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_33pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_pop(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop *__pyx_optional_args) {
  PyObject *__pyx_v_default = ((PyObject *)Py_None);
  utils::PyBufferWrap __pyx_v_key_view;
  Bstrlib::CBString __pyx_v_val;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  utils::PyBufferWrap __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Bstrlib::CBString __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default = __pyx_optional_args->__pyx_default;
    }
  }
  __Pyx_INCREF(__pyx_v_key);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_33pop)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_key);
      __Pyx_INCREF(__pyx_v_default);
      __Pyx_GIVEREF(__pyx_v_default);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_default);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":261
 * 
 *     cpdef pop(self, key, default=None):
 *         key = make_utf8(key)             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key))
 *         cdef CBString val
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_key, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":262
 *     cpdef pop(self, key, default=None):
 *         key = make_utf8(key)
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key))             # <<<<<<<<<<<<<<
 *         cdef CBString val
 *         try:
 */
  try {
    __pyx_t_7 = utils::PyBufferWrap(__pyx_v_key);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_key_view = boost::move(__pyx_t_7);

  /* "pcontainers/pdict_impl.pxi":264
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key))
 *         cdef CBString val
 *         try:             # <<<<<<<<<<<<<<
 *             with nogil:
 *                 val = self.ptr.pop(key_view.get_mdb_val())
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    /*try:*/ {

      /* "pcontainers/pdict_impl.pxi":265
 *         cdef CBString val
 *         try:
 *             with nogil:             # <<<<<<<<<<<<<<
 *                 val = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:
 */
      {
          #ifdef WITH_THREAD
          PyThreadState *_save;
          Py_UNBLOCK_THREADS
          #endif
          /*try:*/ {

            /* "pcontainers/pdict_impl.pxi":266
 *         try:
 *             with nogil:
 *                 val = self.ptr.pop(key_view.get_mdb_val())             # <<<<<<<<<<<<<<
 *         except NotFound:
 *             if default is None:
 */
            try {
              __pyx_t_11 = __pyx_v_self->ptr->pop(__pyx_v_key_view.get_mdb_val());
            } catch(...) {
              #ifdef WITH_THREAD
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
              #endif
              __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
              #ifdef WITH_THREAD
              PyGILState_Release(__pyx_gilstate_save);
              #endif
              {__pyx_filename = __pyx_f[1]; __pyx_lineno = 266; __pyx_clineno = __LINE__; goto __pyx_L14_error;}
            }
            __pyx_v_val = __pyx_t_11;
          }

          /* "pcontainers/pdict_impl.pxi":265
 *         cdef CBString val
 *         try:
 *             with nogil:             # <<<<<<<<<<<<<<
 *                 val = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:
 */
          /*finally:*/ {
            /*normal exit:*/{
              #ifdef WITH_THREAD
              Py_BLOCK_THREADS
              #endif
              goto __pyx_L15;
            }
            __pyx_L14_error: {
              #ifdef WITH_THREAD
              Py_BLOCK_THREADS
              #endif
              goto __pyx_L3_error;
            }
            __pyx_L15:;
          }
      }

      /* "pcontainers/pdict_impl.pxi":264
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key))
 *         cdef CBString val
 *         try:             # <<<<<<<<<<<<<<
 *             with nogil:
 *                 val = self.ptr.pop(key_view.get_mdb_val())
 */
    }
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/pdict_impl.pxi":267
 *             with nogil:
 *                 val = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:             # <<<<<<<<<<<<<<
 *             if default is None:
 *                 raise
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = PyErr_ExceptionMatches(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_12) {
      __Pyx_AddTraceback("pcontainers._pdict.PRawDict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "pcontainers/pdict_impl.pxi":268
 *                 val = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:
 *             if default is None:             # <<<<<<<<<<<<<<
 *                 raise
 *             return default
 */
      __pyx_t_13 = (__pyx_v_default == Py_None);
      __pyx_t_14 = (__pyx_t_13 != 0);
      if (__pyx_t_14) {

        /* "pcontainers/pdict_impl.pxi":269
 *         except NotFound:
 *             if default is None:
 *                 raise             # <<<<<<<<<<<<<<
 *             return default
 *         return topy(val)
 */
        __Pyx_GIVEREF(__pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_2);
        __Pyx_XGIVEREF(__pyx_t_3);
        __Pyx_ErrRestore(__pyx_t_1, __pyx_t_2, __pyx_t_3);
        __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}

        /* "pcontainers/pdict_impl.pxi":268
 *                 val = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:
 *             if default is None:             # <<<<<<<<<<<<<<
 *                 raise
 *             return default
 */
      }

      /* "pcontainers/pdict_impl.pxi":270
 *             if default is None:
 *                 raise
 *             return default             # <<<<<<<<<<<<<<
 *         return topy(val)
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_default);
      __pyx_r = __pyx_v_default;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "pcontainers/pdict_impl.pxi":264
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key))
 *         cdef CBString val
 *         try:             # <<<<<<<<<<<<<<
 *             with nogil:
 *                 val = self.ptr.pop(key_view.get_mdb_val())
 */
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    goto __pyx_L0;
    __pyx_L10_try_end:;
  }

  /* "pcontainers/pdict_impl.pxi":271
 *                 raise
 *             return default
 *         return topy(val)             # <<<<<<<<<<<<<<
 * 
 *     cpdef popitem(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_val); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":260
 *         return [(topy(p.first), topy(p.second)) for p in kv_vec]
 * 
 *     cpdef pop(self, key, default=None):             # <<<<<<<<<<<<<<
 *         key = make_utf8(key)
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_33pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_33pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pop") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pop", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_32pop(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_key, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_32pop(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_default = __pyx_v_default;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->pop(__pyx_v_self, __pyx_v_key, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":273
 *         return topy(val)
 * 
 *     cpdef popitem(self):             # <<<<<<<<<<<<<<
 *         cdef pair[CBString, CBString] p
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_35popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_popitem(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch) {
  std::pair<Bstrlib::CBString,Bstrlib::CBString>  __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::pair<Bstrlib::CBString,Bstrlib::CBString>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("popitem", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_popitem); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_35popitem)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":275
 *     cpdef popitem(self):
 *         cdef pair[CBString, CBString] p
 *         with nogil:             # <<<<<<<<<<<<<<
 *             p = self.ptr.popitem()
 *         return topy(p.first), topy(p.second)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":276
 *         cdef pair[CBString, CBString] p
 *         with nogil:
 *             p = self.ptr.popitem()             # <<<<<<<<<<<<<<
 *         return topy(p.first), topy(p.second)
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->ptr->popitem();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_p = __pyx_t_5;
      }

      /* "pcontainers/pdict_impl.pxi":275
 *     cpdef popitem(self):
 *         cdef pair[CBString, CBString] p
 *         with nogil:             # <<<<<<<<<<<<<<
 *             p = self.ptr.popitem()
 *         return topy(p.first), topy(p.second)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":277
 *         with nogil:
 *             p = self.ptr.popitem()
 *         return topy(p.first), topy(p.second)             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_p.first); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_p.second); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":273
 *         return topy(val)
 * 
 *     cpdef popitem(self):             # <<<<<<<<<<<<<<
 *         cdef pair[CBString, CBString] p
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.popitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_35popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_35popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("popitem (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_34popitem(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_34popitem(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("popitem", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_popitem(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.popitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":279
 *         return topy(p.first), topy(p.second)
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self.keys()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_37__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_37__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_36__iter__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_36__iter__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "pcontainers/pdict_impl.pxi":280
 * 
 *     def __iter__(self):
 *         return self.keys()             # <<<<<<<<<<<<<<
 * 
 *     def keys(self, reverse=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_keys); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":279
 *         return topy(p.first), topy(p.second)
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self.keys()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_8PRawDict_40generator(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pdict_impl.pxi":282
 *         return self.keys()
 * 
 *     def keys(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef cppConstIterator it
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_39keys(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_39keys(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("keys (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "keys") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("keys", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_38keys(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_38keys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("keys", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct__keys(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct__keys, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_reverse = __pyx_v_reverse;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_reverse);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_reverse);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_8PRawDict_40generator, (PyObject *) __pyx_cur_scope, __pyx_n_s_keys, __pyx_n_s_PRawDict_keys); if (unlikely(!gen)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_8PRawDict_40generator(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  utils::PyBufferWrap __pyx_t_3;
  int __pyx_t_4;
  quiet::PersistentDict::const_iterator __pyx_t_5;
  bool __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L7_resume_from_yield;
    case 2: goto __pyx_L10_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/pdict_impl.pxi":283
 * 
 *     def keys(self, reverse=False):
 *         cdef int keysize = self.ptr.get_maxkeysize()             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         cdef MDB_val k
 */
  __pyx_cur_scope->__pyx_v_keysize = __pyx_cur_scope->__pyx_v_self->ptr->get_maxkeysize();

  /* "pcontainers/pdict_impl.pxi":286
 *         cdef cppConstIterator it
 *         cdef MDB_val k
 *         cdef bytearray obj = bytearray(keysize)             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         if reverse:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_cur_scope->__pyx_v_keysize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyByteArray_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_obj = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":287
 *         cdef MDB_val k
 *         cdef bytearray obj = bytearray(keysize)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))             # <<<<<<<<<<<<<<
 *         if reverse:
 *             it = move(self.ptr.clast())
 */
  try {
    __pyx_t_3 = utils::PyBufferWrap(__pyx_cur_scope->__pyx_v_obj);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_cur_scope->__pyx_v_view = boost::move(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":288
 *         cdef bytearray obj = bytearray(keysize)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_reverse); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_4) {

    /* "pcontainers/pdict_impl.pxi":289
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         if reverse:
 *             it = move(self.ptr.clast())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_key(it)
 */
    try {
      __pyx_t_5 = __pyx_cur_scope->__pyx_v_self->ptr->clast();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_5);

    /* "pcontainers/pdict_impl.pxi":290
 *         if reverse:
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():             # <<<<<<<<<<<<<<
 *                 yield self.raw_get_key(it)
 *                 it.decr()
 */
    while (1) {
      try {
        __pyx_t_6 = __pyx_cur_scope->__pyx_v_it.has_reached_beginning();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_4 = ((!(__pyx_t_6 != 0)) != 0);
      if (!__pyx_t_4) break;

      /* "pcontainers/pdict_impl.pxi":291
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_key(it)             # <<<<<<<<<<<<<<
 *                 it.decr()
 *         else:
 */
      __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->raw_get_key(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L7_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":292
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_key(it)
 *                 it.decr()             # <<<<<<<<<<<<<<
 *         else:
 *             it = move(self.ptr.cbegin())
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator--();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }

    /* "pcontainers/pdict_impl.pxi":288
 *         cdef bytearray obj = bytearray(keysize)
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
    goto __pyx_L4;
  }

  /* "pcontainers/pdict_impl.pxi":294
 *                 it.decr()
 *         else:
 *             it = move(self.ptr.cbegin())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_end():
 *                 yield self.raw_get_key(it)
 */
  /*else*/ {
    try {
      __pyx_t_5 = __pyx_cur_scope->__pyx_v_self->ptr->cbegin();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_5);

    /* "pcontainers/pdict_impl.pxi":295
 *         else:
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():             # <<<<<<<<<<<<<<
 *                 yield self.raw_get_key(it)
 *                 it.incr()
 */
    while (1) {
      try {
        __pyx_t_6 = __pyx_cur_scope->__pyx_v_it.has_reached_end();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_4 = ((!(__pyx_t_6 != 0)) != 0);
      if (!__pyx_t_4) break;

      /* "pcontainers/pdict_impl.pxi":296
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():
 *                 yield self.raw_get_key(it)             # <<<<<<<<<<<<<<
 *                 it.incr()
 * 
 */
      __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->raw_get_key(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 2;
      return __pyx_r;
      __pyx_L10_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":297
 *             while not it.has_reached_end():
 *                 yield self.raw_get_key(it)
 *                 it.incr()             # <<<<<<<<<<<<<<
 * 
 *     cpdef iterkeys(self, reverse=False):
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator++();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
  }
  __pyx_L4:;

  /* "pcontainers/pdict_impl.pxi":282
 *         return self.keys()
 * 
 *     def keys(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef int keysize = self.ptr.get_maxkeysize()
 *         cdef cppConstIterator it
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":299
 *                 it.incr()
 * 
 *     cpdef iterkeys(self, reverse=False):             # <<<<<<<<<<<<<<
 *         return self.keys(reverse)
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_42iterkeys(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_iterkeys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iterkeys *__pyx_optional_args) {
  PyObject *__pyx_v_reverse = ((PyObject *)Py_False);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("iterkeys", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_reverse = __pyx_optional_args->reverse;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_iterkeys); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_42iterkeys)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_reverse); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_reverse);
        __Pyx_GIVEREF(__pyx_v_reverse);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_reverse);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":300
 * 
 *     cpdef iterkeys(self, reverse=False):
 *         return self.keys(reverse)             # <<<<<<<<<<<<<<
 * 
 *     def values(self, reverse=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_keys); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_reverse); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_reverse);
    __Pyx_GIVEREF(__pyx_v_reverse);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_reverse);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":299
 *                 it.incr()
 * 
 *     cpdef iterkeys(self, reverse=False):             # <<<<<<<<<<<<<<
 *         return self.keys(reverse)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.iterkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_42iterkeys(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_42iterkeys(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("iterkeys (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "iterkeys") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("iterkeys", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.iterkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_41iterkeys(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_41iterkeys(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iterkeys __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("iterkeys", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.reverse = __pyx_v_reverse;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->iterkeys(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.iterkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_8PRawDict_45generator1(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pdict_impl.pxi":302
 *         return self.keys(reverse)
 * 
 *     def values(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_44values(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_44values(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("values (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "values") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("values", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_43values(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_43values(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("values", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_1_values(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_1_values, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_reverse = __pyx_v_reverse;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_reverse);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_reverse);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_8PRawDict_45generator1, (PyObject *) __pyx_cur_scope, __pyx_n_s_values, __pyx_n_s_PRawDict_values); if (unlikely(!gen)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_8PRawDict_45generator1(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  quiet::PersistentDict::const_iterator __pyx_t_2;
  bool __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L7_resume_from_yield;
    case 2: goto __pyx_L10_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/pdict_impl.pxi":304
 *     def values(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_reverse); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "pcontainers/pdict_impl.pxi":305
 *         cdef cppConstIterator it
 *         if reverse:
 *             it = move(self.ptr.clast())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_value(it)
 */
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->ptr->clast();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":306
 *         if reverse:
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():             # <<<<<<<<<<<<<<
 *                 yield self.raw_get_value(it)
 *                 it.decr()
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_beginning();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":307
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_value(it)             # <<<<<<<<<<<<<<
 *                 it.decr()
 *         else:
 */
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->raw_get_value(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L7_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":308
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_value(it)
 *                 it.decr()             # <<<<<<<<<<<<<<
 *         else:
 *             it = move(self.ptr.cbegin())
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator--();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }

    /* "pcontainers/pdict_impl.pxi":304
 *     def values(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
    goto __pyx_L4;
  }

  /* "pcontainers/pdict_impl.pxi":310
 *                 it.decr()
 *         else:
 *             it = move(self.ptr.cbegin())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_end():
 *                 yield self.raw_get_value(it)
 */
  /*else*/ {
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->ptr->cbegin();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":311
 *         else:
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():             # <<<<<<<<<<<<<<
 *                 yield self.raw_get_value(it)
 *                 it.incr()
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_end();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":312
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():
 *                 yield self.raw_get_value(it)             # <<<<<<<<<<<<<<
 *                 it.incr()
 * 
 */
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->raw_get_value(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 2;
      return __pyx_r;
      __pyx_L10_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":313
 *             while not it.has_reached_end():
 *                 yield self.raw_get_value(it)
 *                 it.incr()             # <<<<<<<<<<<<<<
 * 
 *     cpdef itervalues(self, reverse=False):
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator++();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
  }
  __pyx_L4:;

  /* "pcontainers/pdict_impl.pxi":302
 *         return self.keys(reverse)
 * 
 *     def values(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":315
 *                 it.incr()
 * 
 *     cpdef itervalues(self, reverse=False):             # <<<<<<<<<<<<<<
 *         return self.values(reverse)
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_47itervalues(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_itervalues(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_itervalues *__pyx_optional_args) {
  PyObject *__pyx_v_reverse = ((PyObject *)Py_False);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("itervalues", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_reverse = __pyx_optional_args->reverse;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_itervalues); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_47itervalues)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_reverse); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_reverse);
        __Pyx_GIVEREF(__pyx_v_reverse);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_reverse);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":316
 * 
 *     cpdef itervalues(self, reverse=False):
 *         return self.values(reverse)             # <<<<<<<<<<<<<<
 * 
 *     def items(self, reverse=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_values); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_reverse); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_reverse);
    __Pyx_GIVEREF(__pyx_v_reverse);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_reverse);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":315
 *                 it.incr()
 * 
 *     cpdef itervalues(self, reverse=False):             # <<<<<<<<<<<<<<
 *         return self.values(reverse)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.itervalues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_47itervalues(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_47itervalues(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("itervalues (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "itervalues") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("itervalues", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.itervalues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_46itervalues(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_46itervalues(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_itervalues __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("itervalues", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.reverse = __pyx_v_reverse;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->itervalues(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.itervalues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_8PRawDict_50generator2(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pdict_impl.pxi":318
 *         return self.values(reverse)
 * 
 *     def items(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_49items(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_49items(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("items (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "items") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("items", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_48items(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_48items(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("items", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_2_items(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_2_items, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_reverse = __pyx_v_reverse;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_reverse);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_reverse);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_8PRawDict_50generator2, (PyObject *) __pyx_cur_scope, __pyx_n_s_items, __pyx_n_s_PRawDict_items); if (unlikely(!gen)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_8PRawDict_50generator2(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  quiet::PersistentDict::const_iterator __pyx_t_2;
  bool __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L7_resume_from_yield;
    case 2: goto __pyx_L10_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/pdict_impl.pxi":320
 *     def items(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_reverse); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "pcontainers/pdict_impl.pxi":321
 *         cdef cppConstIterator it
 *         if reverse:
 *             it = move(self.ptr.clast())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_item(it)
 */
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->ptr->clast();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":322
 *         if reverse:
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():             # <<<<<<<<<<<<<<
 *                 yield self.raw_get_item(it)
 *                 it.decr()
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_beginning();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":323
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_item(it)             # <<<<<<<<<<<<<<
 *                 it.decr()
 *         else:
 */
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->raw_get_item(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L7_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":324
 *             while not it.has_reached_beginning():
 *                 yield self.raw_get_item(it)
 *                 it.decr()             # <<<<<<<<<<<<<<
 *         else:
 *             it = move(self.ptr.cbegin())
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator--();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }

    /* "pcontainers/pdict_impl.pxi":320
 *     def items(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
    goto __pyx_L4;
  }

  /* "pcontainers/pdict_impl.pxi":326
 *                 it.decr()
 *         else:
 *             it = move(self.ptr.cbegin())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_end():
 *                 yield self.raw_get_item(it)
 */
  /*else*/ {
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->ptr->cbegin();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":327
 *         else:
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():             # <<<<<<<<<<<<<<
 *                 yield self.raw_get_item(it)
 *                 it.incr()
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_end();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":328
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():
 *                 yield self.raw_get_item(it)             # <<<<<<<<<<<<<<
 *                 it.incr()
 * 
 */
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->raw_get_item(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 2;
      return __pyx_r;
      __pyx_L10_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":329
 *             while not it.has_reached_end():
 *                 yield self.raw_get_item(it)
 *                 it.incr()             # <<<<<<<<<<<<<<
 * 
 *     cpdef iteritems(self, reverse=False):
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator++();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
  }
  __pyx_L4:;

  /* "pcontainers/pdict_impl.pxi":318
 *         return self.values(reverse)
 * 
 *     def items(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":331
 *                 it.incr()
 * 
 *     cpdef iteritems(self, reverse=False):             # <<<<<<<<<<<<<<
 *         return self.items(reverse)
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_52iteritems(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_iteritems(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iteritems *__pyx_optional_args) {
  PyObject *__pyx_v_reverse = ((PyObject *)Py_False);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("iteritems", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_reverse = __pyx_optional_args->reverse;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_iteritems); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_52iteritems)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_reverse); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_reverse);
        __Pyx_GIVEREF(__pyx_v_reverse);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_reverse);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":332
 * 
 *     cpdef iteritems(self, reverse=False):
 *         return self.items(reverse)             # <<<<<<<<<<<<<<
 * 
 *     def __nonzero__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_items); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_reverse); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_reverse);
    __Pyx_GIVEREF(__pyx_v_reverse);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_reverse);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":331
 *                 it.incr()
 * 
 *     cpdef iteritems(self, reverse=False):             # <<<<<<<<<<<<<<
 *         return self.items(reverse)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.iteritems", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_52iteritems(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_52iteritems(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("iteritems (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "iteritems") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("iteritems", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.iteritems", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_51iteritems(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_51iteritems(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iteritems __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("iteritems", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.reverse = __pyx_v_reverse;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->iteritems(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.iteritems", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":334
 *         return self.items(reverse)
 * 
 *     def __nonzero__(self):             # <<<<<<<<<<<<<<
 *         return self.ptr.is_initialized()
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_54__nonzero__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_54__nonzero__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__nonzero__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_53__nonzero__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_53__nonzero__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__nonzero__", 0);

  /* "pcontainers/pdict_impl.pxi":335
 * 
 *     def __nonzero__(self):
 *         return self.ptr.is_initialized()             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __pyx_r = __pyx_v_self->ptr->is_initialized();
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":334
 *         return self.items(reverse)
 * 
 *     def __nonzero__(self):             # <<<<<<<<<<<<<<
 *         return self.ptr.is_initialized()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":337
 *         return self.ptr.is_initialized()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.ptr.size()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_11pcontainers_6_pdict_8PRawDict_56__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_11pcontainers_6_pdict_8PRawDict_56__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_55__len__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_11pcontainers_6_pdict_8PRawDict_55__len__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "pcontainers/pdict_impl.pxi":338
 * 
 *     def __len__(self):
 *         return self.ptr.size()             # <<<<<<<<<<<<<<
 * 
 *     cpdef clear(self):
 */
  try {
    __pyx_t_1 = __pyx_v_self->ptr->size();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":337
 *         return self.ptr.is_initialized()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.ptr.size()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":340
 *         return self.ptr.size()
 * 
 *     cpdef clear(self):             # <<<<<<<<<<<<<<
 *         self.ptr.clear()
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_58clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_clear(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_clear); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_58clear)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":341
 * 
 *     cpdef clear(self):
 *         self.ptr.clear()             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, item):
 */
  try {
    __pyx_v_self->ptr->clear();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pcontainers/pdict_impl.pxi":340
 *         return self.ptr.size()
 * 
 *     cpdef clear(self):             # <<<<<<<<<<<<<<
 *         self.ptr.clear()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_58clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_58clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_57clear(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_57clear(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_clear(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":343
 *         self.ptr.clear()
 * 
 *     def __contains__(self, item):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(item)))
 *         return self.ptr.contains(view.get_mdb_val())
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_60__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_8PRawDict_60__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_59__contains__(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_8PRawDict_59__contains__(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_item) {
  utils::PyBufferWrap __pyx_v_view;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  bool __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__contains__", 0);

  /* "pcontainers/pdict_impl.pxi":344
 * 
 *     def __contains__(self, item):
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(item)))             # <<<<<<<<<<<<<<
 *         return self.ptr.contains(view.get_mdb_val())
 * 
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_item); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":345
 *     def __contains__(self, item):
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(item)))
 *         return self.ptr.contains(view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     cpdef has_key(self, key):
 */
  try {
    __pyx_t_3 = __pyx_v_self->ptr->contains(__pyx_v_view.get_mdb_val());
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_3;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":343
 *         self.ptr.clear()
 * 
 *     def __contains__(self, item):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(item)))
 *         return self.ptr.contains(view.get_mdb_val())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":347
 *         return self.ptr.contains(view.get_mdb_val())
 * 
 *     cpdef has_key(self, key):             # <<<<<<<<<<<<<<
 *         return key in self
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_62has_key(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_has_key(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("has_key", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_has_key); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_62has_key)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_key); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_key);
        __Pyx_GIVEREF(__pyx_v_key);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_key);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":348
 * 
 *     cpdef has_key(self, key):
 *         return key in self             # <<<<<<<<<<<<<<
 * 
 *     def update(self, e=None, **kwds):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_v_key, ((PyObject *)__pyx_v_self), Py_EQ)); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":347
 *         return self.ptr.contains(view.get_mdb_val())
 * 
 *     cpdef has_key(self, key):             # <<<<<<<<<<<<<<
 *         return key in self
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.has_key", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_62has_key(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_62has_key(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("has_key (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_61has_key(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_61has_key(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("has_key", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_has_key(__pyx_v_self, __pyx_v_key, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.has_key", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":350
 *         return key in self
 * 
 *     def update(self, e=None, **kwds):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap keybuf
 *         cdef PyBufferWrap valuebuf
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_64update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_64update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_v_kwds = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  __pyx_v_kwds = PyDict_New(); if (unlikely(!__pyx_v_kwds)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwds);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_e,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwds, values, pos_args, "update") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_e = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwds); __pyx_v_kwds = 0;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_63update(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_e, __pyx_v_kwds);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwds);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_63update(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_kwds) {
  CYTHON_UNUSED utils::PyBufferWrap __pyx_v_keybuf;
  CYTHON_UNUSED utils::PyBufferWrap __pyx_v_valuebuf;
  quiet::PersistentDict::iterator __pyx_v_it;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  quiet::PersistentDict::iterator __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  utils::PyBufferWrap __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);

  /* "pcontainers/pdict_impl.pxi":353
 *         cdef PyBufferWrap keybuf
 *         cdef PyBufferWrap valuebuf
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))             # <<<<<<<<<<<<<<
 *         if e is not None:
 *             if hasattr(e, 'keys'):
 */
  try {
    __pyx_t_1 = quiet::PersistentDict::iterator(__pyx_v_self->ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_it = boost::move(__pyx_t_1);

  /* "pcontainers/pdict_impl.pxi":354
 *         cdef PyBufferWrap valuebuf
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:             # <<<<<<<<<<<<<<
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():
 */
  __pyx_t_2 = (__pyx_v_e != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pcontainers/pdict_impl.pxi":355
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:
 *             if hasattr(e, 'keys'):             # <<<<<<<<<<<<<<
 *                 for key in e.keys():
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(e[key]))
 */
    __pyx_t_3 = PyObject_HasAttr(__pyx_v_e, __pyx_n_s_keys); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = (__pyx_t_3 != 0);
    if (__pyx_t_2) {

      /* "pcontainers/pdict_impl.pxi":356
 *         if e is not None:
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():             # <<<<<<<<<<<<<<
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(e[key]))
 *             else:
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_keys); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (__pyx_t_6) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else {
        __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
        __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          }
        } else {
          __pyx_t_4 = __pyx_t_8(__pyx_t_5);
          if (unlikely(!__pyx_t_4)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[1]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_4);
        }
        __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "pcontainers/pdict_impl.pxi":357
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(e[key]))             # <<<<<<<<<<<<<<
 *             else:
 *                 for (key, value) in e:
 */
        __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = PyObject_GetItem(__pyx_v_e, __pyx_v_key); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_9 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_t_6); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->__pyx_vtab)->raw_set_item_buf(__pyx_v_self, __pyx_v_it, __pyx_t_4, __pyx_t_9); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "pcontainers/pdict_impl.pxi":356
 *         if e is not None:
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():             # <<<<<<<<<<<<<<
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(e[key]))
 *             else:
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "pcontainers/pdict_impl.pxi":355
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:
 *             if hasattr(e, 'keys'):             # <<<<<<<<<<<<<<
 *                 for key in e.keys():
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(e[key]))
 */
      goto __pyx_L4;
    }

    /* "pcontainers/pdict_impl.pxi":359
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(e[key]))
 *             else:
 *                 for (key, value) in e:             # <<<<<<<<<<<<<<
 *                     keybuf = move(PyBufferWrap(make_utf8(key)))
 *                     valuebuf = move(PyBufferWrap(make_utf8(value)))
 */
    /*else*/ {
      if (likely(PyList_CheckExact(__pyx_v_e)) || PyTuple_CheckExact(__pyx_v_e)) {
        __pyx_t_5 = __pyx_v_e; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_e); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_8(__pyx_t_5);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        if ((likely(PyTuple_CheckExact(__pyx_t_6))) || (PyList_CheckExact(__pyx_t_6))) {
          PyObject* sequence = __pyx_t_6;
          #if CYTHON_COMPILING_IN_CPYTHON
          Py_ssize_t size = Py_SIZE(sequence);
          #else
          Py_ssize_t size = PySequence_Size(sequence);
          #endif
          if (unlikely(size != 2)) {
            if (size > 2) __Pyx_RaiseTooManyValuesError(2);
            else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
            {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          #if CYTHON_COMPILING_IN_CPYTHON
          if (likely(PyTuple_CheckExact(sequence))) {
            __pyx_t_9 = PyTuple_GET_ITEM(sequence, 0); 
            __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
          } else {
            __pyx_t_9 = PyList_GET_ITEM(sequence, 0); 
            __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
          }
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_4);
          #else
          __pyx_t_9 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_4);
          #endif
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        } else {
          Py_ssize_t index = -1;
          __pyx_t_10 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_11 = Py_TYPE(__pyx_t_10)->tp_iternext;
          index = 0; __pyx_t_9 = __pyx_t_11(__pyx_t_10); if (unlikely(!__pyx_t_9)) goto __pyx_L9_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_9);
          index = 1; __pyx_t_4 = __pyx_t_11(__pyx_t_10); if (unlikely(!__pyx_t_4)) goto __pyx_L9_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_4);
          if (__Pyx_IternextUnpackEndCheck(__pyx_t_11(__pyx_t_10), 2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_11 = NULL;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          goto __pyx_L10_unpacking_done;
          __pyx_L9_unpacking_failed:;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_11 = NULL;
          if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_L10_unpacking_done:;
        }
        __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_9);
        __pyx_t_9 = 0;
        __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "pcontainers/pdict_impl.pxi":360
 *             else:
 *                 for (key, value) in e:
 *                     keybuf = move(PyBufferWrap(make_utf8(key)))             # <<<<<<<<<<<<<<
 *                     valuebuf = move(PyBufferWrap(make_utf8(value)))
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(value))
 */
        __pyx_t_6 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        try {
          __pyx_t_12 = utils::PyBufferWrap(__pyx_t_6);
        } catch(...) {
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_v_keybuf = boost::move(__pyx_t_12);

        /* "pcontainers/pdict_impl.pxi":361
 *                 for (key, value) in e:
 *                     keybuf = move(PyBufferWrap(make_utf8(key)))
 *                     valuebuf = move(PyBufferWrap(make_utf8(value)))             # <<<<<<<<<<<<<<
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(value))
 * 
 */
        __pyx_t_6 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_value); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        try {
          __pyx_t_12 = utils::PyBufferWrap(__pyx_t_6);
        } catch(...) {
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_v_valuebuf = boost::move(__pyx_t_12);

        /* "pcontainers/pdict_impl.pxi":362
 *                     keybuf = move(PyBufferWrap(make_utf8(key)))
 *                     valuebuf = move(PyBufferWrap(make_utf8(value)))
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(value))             # <<<<<<<<<<<<<<
 * 
 *         for key in kwds:
 */
        __pyx_t_6 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_value); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->__pyx_vtab)->raw_set_item_buf(__pyx_v_self, __pyx_v_it, __pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "pcontainers/pdict_impl.pxi":359
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(e[key]))
 *             else:
 *                 for (key, value) in e:             # <<<<<<<<<<<<<<
 *                     keybuf = move(PyBufferWrap(make_utf8(key)))
 *                     valuebuf = move(PyBufferWrap(make_utf8(value)))
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __pyx_L4:;

    /* "pcontainers/pdict_impl.pxi":354
 *         cdef PyBufferWrap valuebuf
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:             # <<<<<<<<<<<<<<
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():
 */
  }

  /* "pcontainers/pdict_impl.pxi":364
 *                     self.raw_set_item_buf(it, make_utf8(key), make_utf8(value))
 * 
 *         for key in kwds:             # <<<<<<<<<<<<<<
 *             keybuf = move(PyBufferWrap(make_utf8(key)))
 *             valuebuf = move(PyBufferWrap(make_utf8(kwds[key])))
 */
  __pyx_t_7 = 0;
  __pyx_t_9 = __Pyx_dict_iterator(__pyx_v_kwds, 1, ((PyObject *)NULL), (&__pyx_t_13), (&__pyx_t_14)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_5);
  __pyx_t_5 = __pyx_t_9;
  __pyx_t_9 = 0;
  while (1) {
    __pyx_t_15 = __Pyx_dict_iter_next(__pyx_t_5, __pyx_t_13, &__pyx_t_7, &__pyx_t_9, NULL, NULL, __pyx_t_14);
    if (unlikely(__pyx_t_15 == 0)) break;
    if (unlikely(__pyx_t_15 == -1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "pcontainers/pdict_impl.pxi":365
 * 
 *         for key in kwds:
 *             keybuf = move(PyBufferWrap(make_utf8(key)))             # <<<<<<<<<<<<<<
 *             valuebuf = move(PyBufferWrap(make_utf8(kwds[key])))
 *             self.raw_set_item_buf(it, make_utf8(key), make_utf8(kwds[key]))
 */
    __pyx_t_9 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    try {
      __pyx_t_12 = utils::PyBufferWrap(__pyx_t_9);
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_keybuf = boost::move(__pyx_t_12);

    /* "pcontainers/pdict_impl.pxi":366
 *         for key in kwds:
 *             keybuf = move(PyBufferWrap(make_utf8(key)))
 *             valuebuf = move(PyBufferWrap(make_utf8(kwds[key])))             # <<<<<<<<<<<<<<
 *             self.raw_set_item_buf(it, make_utf8(key), make_utf8(kwds[key]))
 * 
 */
    __pyx_t_9 = __Pyx_PyDict_GetItem(__pyx_v_kwds, __pyx_v_key); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_t_9); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    try {
      __pyx_t_12 = utils::PyBufferWrap(__pyx_t_4);
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_valuebuf = boost::move(__pyx_t_12);

    /* "pcontainers/pdict_impl.pxi":367
 *             keybuf = move(PyBufferWrap(make_utf8(key)))
 *             valuebuf = move(PyBufferWrap(make_utf8(kwds[key])))
 *             self.raw_set_item_buf(it, make_utf8(key), make_utf8(kwds[key]))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_key); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = __Pyx_PyDict_GetItem(__pyx_v_kwds, __pyx_v_key); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_6 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_t_9); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->__pyx_vtab)->raw_set_item_buf(__pyx_v_self, __pyx_v_it, __pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pcontainers/pdict_impl.pxi":350
 *         return key in self
 * 
 *     def update(self, e=None, **kwds):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap keybuf
 *         cdef PyBufferWrap valuebuf
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":372
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else make_utf8(v)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_66fromkeys(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_66fromkeys(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dirname = 0;
  PyObject *__pyx_v_dbname = 0;
  PyObject *__pyx_v_opts = 0;
  PyObject *__pyx_v_S = 0;
  PyObject *__pyx_v_v = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromkeys (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_S,&__pyx_n_s_v,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromkeys", 0, 2, 5, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_S);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_v);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fromkeys") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = values[2];
    __pyx_v_S = values[3];
    __pyx_v_v = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromkeys", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.fromkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_65fromkeys(((PyTypeObject*)__pyx_v_cls), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_S, __pyx_v_v);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_8PRawDict_8fromkeys_2generator9(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pdict_impl.pxi":376
 *         v = b'' if v is None else make_utf8(v)
 *         if S is not None:
 *             d.update((make_utf8(key), v) for key in S)             # <<<<<<<<<<<<<<
 *         return d
 * 
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_8fromkeys_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_8PRawDict_8fromkeys_2generator9, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_fromkeys_locals_genexpr); if (unlikely(!gen)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.fromkeys.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_8PRawDict_8fromkeys_2generator9(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_S)) { __Pyx_RaiseClosureNameError("S"); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_S)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_S)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_S; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_S); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_key);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_key, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_cur_scope->__pyx_v_key); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_v)) { __Pyx_RaiseClosureNameError("v"); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_INCREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_v);
    __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_v);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_v);
    __pyx_t_4 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    __Pyx_XGIVEREF(__pyx_t_1);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":372
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else make_utf8(v)
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_65fromkeys(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, PyObject *__pyx_v_opts, PyObject *__pyx_v_S, PyObject *__pyx_v_v) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *__pyx_cur_scope;
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fromkeys", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_S = __pyx_v_S;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_S);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_S);
  __pyx_cur_scope->__pyx_v_v = __pyx_v_v;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_v);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_v);

  /* "pcontainers/pdict_impl.pxi":373
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):
 *         d = cls(dirname, dbname, opts=opts)             # <<<<<<<<<<<<<<
 *         v = b'' if v is None else make_utf8(v)
 *         if S is not None:
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_dirname);
  __Pyx_GIVEREF(__pyx_v_dirname);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_dirname);
  __Pyx_INCREF(__pyx_v_dbname);
  __Pyx_GIVEREF(__pyx_v_dbname);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_dbname);
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_opts, __pyx_v_opts) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_v_cls), __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_d = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pcontainers/pdict_impl.pxi":374
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else make_utf8(v)             # <<<<<<<<<<<<<<
 *         if S is not None:
 *             d.update((make_utf8(key), v) for key in S)
 */
  __pyx_t_4 = (__pyx_cur_scope->__pyx_v_v == Py_None);
  if ((__pyx_t_4 != 0)) {
    __Pyx_INCREF(__pyx_kp_b__5);
    __pyx_t_3 = __pyx_kp_b__5;
  } else {
    __pyx_t_2 = __pyx_cur_scope->__pyx_v_v;
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_v);
  __Pyx_DECREF_SET(__pyx_cur_scope->__pyx_v_v, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pcontainers/pdict_impl.pxi":375
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else make_utf8(v)
 *         if S is not None:             # <<<<<<<<<<<<<<
 *             d.update((make_utf8(key), v) for key in S)
 *         return d
 */
  __pyx_t_4 = (__pyx_cur_scope->__pyx_v_S != Py_None);
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "pcontainers/pdict_impl.pxi":376
 *         v = b'' if v is None else make_utf8(v)
 *         if S is not None:
 *             d.update((make_utf8(key), v) for key in S)             # <<<<<<<<<<<<<<
 *         return d
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_d, __pyx_n_s_update); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_pf_11pcontainers_6_pdict_8PRawDict_8fromkeys_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pcontainers/pdict_impl.pxi":375
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else make_utf8(v)
 *         if S is not None:             # <<<<<<<<<<<<<<
 *             d.update((make_utf8(key), v) for key in S)
 *         return d
 */
  }

  /* "pcontainers/pdict_impl.pxi":377
 *         if S is not None:
 *             d.update((make_utf8(key), v) for key in S)
 *         return d             # <<<<<<<<<<<<<<
 * 
 *     cpdef transform_values(self, binary_funct):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_d);
  __pyx_r = __pyx_v_d;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":372
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else make_utf8(v)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.fromkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":379
 *         return d
 * 
 *     cpdef transform_values(self, binary_funct):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_68transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_funct); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_transform_values(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_binary_funct, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transform_values", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transform_values); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_68transform_values)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_binary_funct); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_binary_funct);
        __Pyx_GIVEREF(__pyx_v_binary_funct);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_binary_funct);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":380
 * 
 *     cpdef transform_values(self, binary_funct):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":381
 *     cpdef transform_values(self, binary_funct):
 *         with nogil:
 *             self.ptr.transform_values(make_binary_functor(binary_funct))             # <<<<<<<<<<<<<<
 * 
 *     cpdef remove_if(self, binary_pred):
 */
        try {
          __pyx_v_self->ptr->transform_values(quiet::PyFunctor::make_binary_functor(__pyx_v_binary_funct));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":380
 * 
 *     cpdef transform_values(self, binary_funct):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":379
 *         return d
 * 
 *     cpdef transform_values(self, binary_funct):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.transform_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_68transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_funct); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_68transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_funct) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transform_values (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_67transform_values(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), ((PyObject *)__pyx_v_binary_funct));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_67transform_values(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_binary_funct) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transform_values", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_transform_values(__pyx_v_self, __pyx_v_binary_funct, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.transform_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":383
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 * 
 *     cpdef remove_if(self, binary_pred):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_70remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_pred); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_remove_if(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_binary_pred, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_if", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove_if); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_70remove_if)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_binary_pred); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_binary_pred);
        __Pyx_GIVEREF(__pyx_v_binary_pred);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_binary_pred);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":384
 * 
 *     cpdef remove_if(self, binary_pred):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":385
 *     cpdef remove_if(self, binary_pred):
 *         with nogil:
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))             # <<<<<<<<<<<<<<
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):
 */
        try {
          __pyx_v_self->ptr->remove_if(quiet::PyPredicate::make_binary_predicate(__pyx_v_binary_pred));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":384
 * 
 *     cpdef remove_if(self, binary_pred):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":383
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 * 
 *     cpdef remove_if(self, binary_pred):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.remove_if", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_70remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_pred); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_70remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_pred) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_if (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_69remove_if(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), ((PyObject *)__pyx_v_binary_pred));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_69remove_if(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_binary_pred) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_if", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_8PRawDict_remove_if(__pyx_v_self, __pyx_v_binary_pred, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.remove_if", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":387
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PRawDict):
 *             raise TypeError()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_72copy_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_copy_to(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to *__pyx_optional_args) {
  Py_ssize_t __pyx_v_chunk_size = ((Py_ssize_t)-1L);
  Bstrlib::CBString __pyx_v_empt;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy_to", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_chunk_size = __pyx_optional_args->chunk_size;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_copy_to); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_72copy_to)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_chunk_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":388
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawDict):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         cdef CBString empt
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PRawDict); 
  __pyx_t_9 = ((!(__pyx_t_8 != 0)) != 0);
  if (__pyx_t_9) {

    /* "pcontainers/pdict_impl.pxi":389
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawDict):
 *             raise TypeError()             # <<<<<<<<<<<<<<
 *         cdef CBString empt
 *         with nogil:
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_TypeError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pdict_impl.pxi":388
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawDict):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         cdef CBString empt
 */
  }

  /* "pcontainers/pdict_impl.pxi":391
 *             raise TypeError()
 *         cdef CBString empt
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.copy_to(deref((<PRawDict> other).ptr), empt, empt, chunk_size)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":392
 *         cdef CBString empt
 *         with nogil:
 *             self.ptr.copy_to(deref((<PRawDict> other).ptr), empt, empt, chunk_size)             # <<<<<<<<<<<<<<
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 */
        try {
          __pyx_v_self->ptr->copy_to((*((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_other)->ptr), __pyx_v_empt, __pyx_v_empt, __pyx_v_chunk_size);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L5_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":391
 *             raise TypeError()
 *         cdef CBString empt
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.copy_to(deref((<PRawDict> other).ptr), empt, empt, chunk_size)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L5_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L6:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":387
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PRawDict):
 *             raise TypeError()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.copy_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_72copy_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_72copy_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_other = 0;
  Py_ssize_t __pyx_v_chunk_size;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy_to (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_other,&__pyx_n_s_chunk_size,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_other)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_chunk_size);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "copy_to") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_other = values[0];
    if (values[1]) {
      __pyx_v_chunk_size = PyInt_AsSsize_t(values[1]); if (unlikely((__pyx_v_chunk_size == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_chunk_size = ((Py_ssize_t)-1L);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("copy_to", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.copy_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_71copy_to(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_other, __pyx_v_chunk_size);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_71copy_to(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy_to", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.chunk_size = __pyx_v_chunk_size;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->copy_to(__pyx_v_self, __pyx_v_other, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.copy_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":394
 *             self.ptr.copy_to(deref((<PRawDict> other).ptr), empt, empt, chunk_size)
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PRawDict):
 *             raise TypeError()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_74move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_move_to(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to *__pyx_optional_args) {
  Py_ssize_t __pyx_v_chunk_size = ((Py_ssize_t)-1L);
  Bstrlib::CBString __pyx_v_empt;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_chunk_size = __pyx_optional_args->chunk_size;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_move_to); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_74move_to)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_chunk_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":395
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawDict):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         cdef CBString empt
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PRawDict); 
  __pyx_t_9 = ((!(__pyx_t_8 != 0)) != 0);
  if (__pyx_t_9) {

    /* "pcontainers/pdict_impl.pxi":396
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawDict):
 *             raise TypeError()             # <<<<<<<<<<<<<<
 *         cdef CBString empt
 *         with nogil:
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_TypeError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pdict_impl.pxi":395
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawDict):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         cdef CBString empt
 */
  }

  /* "pcontainers/pdict_impl.pxi":398
 *             raise TypeError()
 *         cdef CBString empt
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.move_to(deref((<PRawDict> other).ptr), empt, empt, chunk_size)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":399
 *         cdef CBString empt
 *         with nogil:
 *             self.ptr.move_to(deref((<PRawDict> other).ptr), empt, empt, chunk_size)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        try {
          __pyx_v_self->ptr->move_to((*((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_other)->ptr), __pyx_v_empt, __pyx_v_empt, __pyx_v_chunk_size);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L5_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":398
 *             raise TypeError()
 *         cdef CBString empt
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.move_to(deref((<PRawDict> other).ptr), empt, empt, chunk_size)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L5_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L6:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":394
 *             self.ptr.copy_to(deref((<PRawDict> other).ptr), empt, empt, chunk_size)
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PRawDict):
 *             raise TypeError()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_74move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_74move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_other = 0;
  Py_ssize_t __pyx_v_chunk_size;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_to (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_other,&__pyx_n_s_chunk_size,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_other)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_chunk_size);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move_to") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_other = values[0];
    if (values[1]) {
      __pyx_v_chunk_size = PyInt_AsSsize_t(values[1]); if (unlikely((__pyx_v_chunk_size == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_chunk_size = ((Py_ssize_t)-1L);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move_to", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_73move_to(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_other, __pyx_v_chunk_size);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_73move_to(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.chunk_size = __pyx_v_chunk_size;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->move_to(__pyx_v_self, __pyx_v_other, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":402
 * 
 * 
 *     cpdef remove_duplicates(self, first="", last=""):             # <<<<<<<<<<<<<<
 *         cdef CBString firstkey = tocbstring(make_utf8(first))
 *         cdef CBString lastkey = tocbstring(make_utf8(last))
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_76remove_duplicates(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_8PRawDict_remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates *__pyx_optional_args) {
  PyObject *__pyx_v_first = ((PyObject *)__pyx_kp_s__5);
  PyObject *__pyx_v_last = ((PyObject *)__pyx_kp_s__5);
  Bstrlib::CBString __pyx_v_firstkey;
  Bstrlib::CBString __pyx_v_lastkey;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_duplicates", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_first = __pyx_optional_args->first;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_last = __pyx_optional_args->last;
      }
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove_duplicates); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_76remove_duplicates)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_first);
      __Pyx_GIVEREF(__pyx_v_first);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_first);
      __Pyx_INCREF(__pyx_v_last);
      __Pyx_GIVEREF(__pyx_v_last);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_last);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":403
 * 
 *     cpdef remove_duplicates(self, first="", last=""):
 *         cdef CBString firstkey = tocbstring(make_utf8(first))             # <<<<<<<<<<<<<<
 *         cdef CBString lastkey = tocbstring(make_utf8(last))
 *         with nogil:
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_first); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_firstkey = __pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":404
 *     cpdef remove_duplicates(self, first="", last=""):
 *         cdef CBString firstkey = tocbstring(make_utf8(first))
 *         cdef CBString lastkey = tocbstring(make_utf8(last))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_duplicates(firstkey, lastkey)
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_last); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_lastkey = __pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":405
 *         cdef CBString firstkey = tocbstring(make_utf8(first))
 *         cdef CBString lastkey = tocbstring(make_utf8(last))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_duplicates(firstkey, lastkey)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":406
 *         cdef CBString lastkey = tocbstring(make_utf8(last))
 *         with nogil:
 *             self.ptr.remove_duplicates(firstkey, lastkey)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        try {
          __pyx_v_self->ptr->remove_duplicates(__pyx_v_firstkey, __pyx_v_lastkey);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":405
 *         cdef CBString firstkey = tocbstring(make_utf8(first))
 *         cdef CBString lastkey = tocbstring(make_utf8(last))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_duplicates(firstkey, lastkey)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":402
 * 
 * 
 *     cpdef remove_duplicates(self, first="", last=""):             # <<<<<<<<<<<<<<
 *         cdef CBString firstkey = tocbstring(make_utf8(first))
 *         cdef CBString lastkey = tocbstring(make_utf8(last))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.remove_duplicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_76remove_duplicates(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_8PRawDict_76remove_duplicates(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_first = 0;
  PyObject *__pyx_v_last = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_duplicates (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_first,&__pyx_n_s_last,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_kp_s__5);
    values[1] = ((PyObject *)__pyx_kp_s__5);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_first);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_last);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "remove_duplicates") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_first = values[0];
    __pyx_v_last = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("remove_duplicates", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.remove_duplicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8PRawDict_75remove_duplicates(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_first, __pyx_v_last);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_8PRawDict_75remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_duplicates", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 2;
  __pyx_t_2.first = __pyx_v_first;
  __pyx_t_2.last = __pyx_v_last;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict->remove_duplicates(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawDict.remove_duplicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":410
 * 
 * cdef class PDict(PRawDict):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):             # <<<<<<<<<<<<<<
 *         self.key_chain = key_chain if key_chain else Chain(None, None, None)
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_5PDict_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_5PDict_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_dirname = 0;
  CYTHON_UNUSED PyObject *__pyx_v_dbname = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  CYTHON_UNUSED PyObject *__pyx_v_mapping = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwarg = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwarg = PyDict_New(); if (unlikely(!__pyx_v_kwarg)) return -1;
  __Pyx_GOTREF(__pyx_v_kwarg);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_mapping,&__pyx_n_s_key_chain,&__pyx_n_s_value_chain,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 6, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mapping);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key_chain);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwarg, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[2]);
    __pyx_v_mapping = values[3];
    __pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[4]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwarg); __pyx_v_kwarg = 0;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "key_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict___cinit__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_mapping, __pyx_v_key_chain, __pyx_v_value_chain, __pyx_v_kwarg);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_kwarg);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_5PDict___cinit__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dirname, CYTHON_UNUSED PyObject *__pyx_v_dbname, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED PyObject *__pyx_v_mapping, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain, CYTHON_UNUSED PyObject *__pyx_v_kwarg) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcontainers/pdict_impl.pxi":411
 * cdef class PDict(PRawDict):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         self.key_chain = key_chain if key_chain else Chain(None, None, None)             # <<<<<<<<<<<<<<
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_key_chain)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {
    __Pyx_INCREF(((PyObject *)__pyx_v_key_chain));
    __pyx_t_1 = ((PyObject *)__pyx_v_key_chain);
  } else {
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_Chain), __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->key_chain);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->key_chain));
  __pyx_v_self->key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":412
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         self.key_chain = key_chain if key_chain else Chain(None, None, None)
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_value_chain)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {
    __Pyx_INCREF(((PyObject *)__pyx_v_value_chain));
    __pyx_t_1 = ((PyObject *)__pyx_v_value_chain);
  } else {
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PickleSerializer), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_4, 1, Py_None);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_4, 2, Py_None);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_Chain), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->value_chain);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->value_chain));
  __pyx_v_self->value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":410
 * 
 * cdef class PDict(PRawDict):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):             # <<<<<<<<<<<<<<
 *         self.key_chain = key_chain if key_chain else Chain(None, None, None)
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":414
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):             # <<<<<<<<<<<<<<
 *         super(PDict, self).__init__(dirname, dbname, opts, mapping, **kwarg)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_5PDict_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_5PDict_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dirname = 0;
  PyObject *__pyx_v_dbname = 0;
  struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  PyObject *__pyx_v_mapping = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  PyObject *__pyx_v_kwarg = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwarg = PyDict_New(); if (unlikely(!__pyx_v_kwarg)) return -1;
  __Pyx_GOTREF(__pyx_v_kwarg);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_mapping,&__pyx_n_s_key_chain,&__pyx_n_s_value_chain,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 6, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mapping);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key_chain);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwarg, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[2]);
    __pyx_v_mapping = values[3];
    __pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[4]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwarg); __pyx_v_kwarg = 0;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "key_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_2__init__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_mapping, __pyx_v_key_chain, __pyx_v_value_chain, __pyx_v_kwarg);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_kwarg);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_5PDict_2__init__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, PyObject *__pyx_v_mapping, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain, PyObject *__pyx_v_kwarg) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/pdict_impl.pxi":415
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         super(PDict, self).__init__(dirname, dbname, opts, mapping, **kwarg)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_init); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_dirname);
  __Pyx_GIVEREF(__pyx_v_dirname);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_dirname);
  __Pyx_INCREF(__pyx_v_dbname);
  __Pyx_GIVEREF(__pyx_v_dbname);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_dbname);
  __Pyx_INCREF(((PyObject *)__pyx_v_opts));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_opts));
  PyTuple_SET_ITEM(__pyx_t_2, 2, ((PyObject *)__pyx_v_opts));
  __Pyx_INCREF(__pyx_v_mapping);
  __Pyx_GIVEREF(__pyx_v_mapping);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_v_mapping);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_v_kwarg); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/pdict_impl.pxi":414
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):             # <<<<<<<<<<<<<<
 *         super(PDict, self).__init__(dirname, dbname, opts, mapping, **kwarg)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":417
 *         super(PDict, self).__init__(dirname, dbname, opts, mapping, **kwarg)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static void __pyx_pw_11pcontainers_6_pdict_5PDict_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_11pcontainers_6_pdict_5PDict_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_11pcontainers_6_pdict_5PDict_4__dealloc__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_11pcontainers_6_pdict_5PDict_4__dealloc__(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pcontainers/pdict_impl.pxi":420
 *         pass
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"PDict(dbname='{}', dirname='{}')".format(make_unicode(self.dbname), make_unicode(self.dirname))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_6__repr__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_6__repr__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "pcontainers/pdict_impl.pxi":421
 * 
 *     def __repr__(self):
 *         return u"PDict(dbname='{}', dirname='{}')".format(make_unicode(self.dbname), make_unicode(self.dirname))             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_PDict_dbname_dirname, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dbname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_unicode(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dirname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __pyx_f_11pcontainers_6_pdict_make_unicode(__pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_5);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":420
 *         pass
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"PDict(dbname='{}', dirname='{}')".format(make_unicode(self.dbname), make_unicode(self.dirname))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":423
 *         return u"PDict(dbname='{}', dirname='{}')".format(make_unicode(self.dbname), make_unicode(self.dirname))
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return dict, (self.noiteritems(), )
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_9__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_9__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_8__reduce__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_8__reduce__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce__", 0);

  /* "pcontainers/pdict_impl.pxi":424
 * 
 *     def __reduce__(self):
 *         return dict, (self.noiteritems(), )             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.noiteritems(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)(&PyDict_Type)));
  __Pyx_GIVEREF(((PyObject *)(&PyDict_Type)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)(&PyDict_Type)));
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":423
 *         return u"PDict(dbname='{}', dirname='{}')".format(make_unicode(self.dbname), make_unicode(self.dirname))
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return dict, (self.noiteritems(), )
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":426
 *         return dict, (self.noiteritems(), )
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_10__getitem__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_10__getitem__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key) {
  quiet::PersistentDict::const_iterator __pyx_v_it;
  utils::PyBufferWrap __pyx_v_key_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  quiet::PersistentDict::const_iterator __pyx_t_3;
  bool __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pcontainers/pdict_impl.pxi":428
 *     def __getitem__(self, key):
 *         cdef cppConstIterator it
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))             # <<<<<<<<<<<<<<
 *         it = move(cppConstIterator(self.ptr, key_view.get_mdb_val()))
 *         if it.has_reached_end():
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_key_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":429
 *         cdef cppConstIterator it
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         it = move(cppConstIterator(self.ptr, key_view.get_mdb_val()))             # <<<<<<<<<<<<<<
 *         if it.has_reached_end():
 *             raise NotFound()
 */
  try {
    __pyx_t_3 = quiet::PersistentDict::const_iterator(__pyx_v_self->__pyx_base.ptr, __pyx_v_key_view.get_mdb_val());
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_it = boost::move(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":430
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         it = move(cppConstIterator(self.ptr, key_view.get_mdb_val()))
 *         if it.has_reached_end():             # <<<<<<<<<<<<<<
 *             raise NotFound()
 *         return self.value_chain.loads(self.raw_get_value_buf_const(it))
 */
  try {
    __pyx_t_4 = __pyx_v_it.has_reached_end();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "pcontainers/pdict_impl.pxi":431
 *         it = move(cppConstIterator(self.ptr, key_view.get_mdb_val()))
 *         if it.has_reached_end():
 *             raise NotFound()             # <<<<<<<<<<<<<<
 *         return self.value_chain.loads(self.raw_get_value_buf_const(it))
 * 
 */
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pdict_impl.pxi":430
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         it = move(cppConstIterator(self.ptr, key_view.get_mdb_val()))
 *         if it.has_reached_end():             # <<<<<<<<<<<<<<
 *             raise NotFound()
 *         return self.value_chain.loads(self.raw_get_value_buf_const(it))
 */
  }

  /* "pcontainers/pdict_impl.pxi":432
 *         if it.has_reached_end():
 *             raise NotFound()
 *         return self.value_chain.loads(self.raw_get_value_buf_const(it))             # <<<<<<<<<<<<<<
 * 
 *     cpdef get(self, key, default=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_value_buf_const(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_it); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":426
 *         return dict, (self.noiteritems(), )
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":434
 *         return self.value_chain.loads(self.raw_get_value_buf_const(it))
 * 
 *     cpdef get(self, key, default=None):             # <<<<<<<<<<<<<<
 *         try:
 *             return self[key]
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_13get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_get(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_get *__pyx_optional_args) {
  PyObject *__pyx_v_default = ((PyObject *)Py_None);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default = __pyx_optional_args->__pyx_default;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_13get)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_key);
      __Pyx_INCREF(__pyx_v_default);
      __Pyx_GIVEREF(__pyx_v_default);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_default);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":435
 * 
 *     cpdef get(self, key, default=None):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[key]
 *         except NotFound:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    /*try:*/ {

      /* "pcontainers/pdict_impl.pxi":436
 *     cpdef get(self, key, default=None):
 *         try:
 *             return self[key]             # <<<<<<<<<<<<<<
 *         except NotFound:
 *             return default
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_key); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L3_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L7_try_return;

      /* "pcontainers/pdict_impl.pxi":435
 * 
 *     cpdef get(self, key, default=None):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[key]
 *         except NotFound:
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/pdict_impl.pxi":437
 *         try:
 *             return self[key]
 *         except NotFound:             # <<<<<<<<<<<<<<
 *             return default
 * 
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = PyErr_ExceptionMatches(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_10) {
      __Pyx_AddTraceback("pcontainers._pdict.PDict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "pcontainers/pdict_impl.pxi":438
 *             return self[key]
 *         except NotFound:
 *             return default             # <<<<<<<<<<<<<<
 * 
 *     cpdef setdefault(self, key, default=None):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_default);
      __pyx_r = __pyx_v_default;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "pcontainers/pdict_impl.pxi":435
 * 
 *     cpdef get(self, key, default=None):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[key]
 *         except NotFound:
 */
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L0;
  }

  /* "pcontainers/pdict_impl.pxi":434
 *         return self.value_chain.loads(self.raw_get_value_buf_const(it))
 * 
 *     cpdef get(self, key, default=None):             # <<<<<<<<<<<<<<
 *         try:
 *             return self[key]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_13get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_13get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_12get(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_key, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_12get(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_default = __pyx_v_default;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PDict->__pyx_base.get(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_key, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":440
 *             return default
 * 
 *     cpdef setdefault(self, key, default=None):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(self.value_chain.dumps(default)))
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_15setdefault(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_setdefault(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_setdefault *__pyx_optional_args) {
  PyObject *__pyx_v_default = ((PyObject *)Py_None);
  utils::PyBufferWrap __pyx_v_key_view;
  utils::PyBufferWrap __pyx_v_default_view;
  Bstrlib::CBString __pyx_v_ret;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  utils::PyBufferWrap __pyx_t_7;
  Bstrlib::CBString __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setdefault", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default = __pyx_optional_args->__pyx_default;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setdefault); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_15setdefault)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_key);
      __Pyx_INCREF(__pyx_v_default);
      __Pyx_GIVEREF(__pyx_v_default);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_default);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":441
 * 
 *     cpdef setdefault(self, key, default=None):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(self.value_chain.dumps(default)))
 *         cdef CBString ret
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_7 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_key_view = boost::move(__pyx_t_7);

  /* "pcontainers/pdict_impl.pxi":442
 *     cpdef setdefault(self, key, default=None):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(self.value_chain.dumps(default)))             # <<<<<<<<<<<<<<
 *         cdef CBString ret
 *         with nogil:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_v_default, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_7 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_default_view = boost::move(__pyx_t_7);

  /* "pcontainers/pdict_impl.pxi":444
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(self.value_chain.dumps(default)))
 *         cdef CBString ret
 *         with nogil:             # <<<<<<<<<<<<<<
 *             ret = self.ptr.setdefault(key_view.get_mdb_val(), default_view.get_mdb_val())
 *         return self.value_chain.loads(topy(ret))
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":445
 *         cdef CBString ret
 *         with nogil:
 *             ret = self.ptr.setdefault(key_view.get_mdb_val(), default_view.get_mdb_val())             # <<<<<<<<<<<<<<
 *         return self.value_chain.loads(topy(ret))
 * 
 */
        try {
          __pyx_t_8 = __pyx_v_self->__pyx_base.ptr->setdefault(__pyx_v_key_view.get_mdb_val(), __pyx_v_default_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_ret = __pyx_t_8;
      }

      /* "pcontainers/pdict_impl.pxi":444
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(self.value_chain.dumps(default)))
 *         cdef CBString ret
 *         with nogil:             # <<<<<<<<<<<<<<
 *             ret = self.ptr.setdefault(key_view.get_mdb_val(), default_view.get_mdb_val())
 *         return self.value_chain.loads(topy(ret))
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":446
 *         with nogil:
 *             ret = self.ptr.setdefault(key_view.get_mdb_val(), default_view.get_mdb_val())
 *         return self.value_chain.loads(topy(ret))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_ret); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":440
 *             return default
 * 
 *     cpdef setdefault(self, key, default=None):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef PyBufferWrap default_view = move(PyBufferWrap(self.value_chain.dumps(default)))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.setdefault", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_15setdefault(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_15setdefault(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setdefault (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setdefault") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setdefault", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.setdefault", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_14setdefault(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_key, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_14setdefault(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setdefault", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_default = __pyx_v_default;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PDict->__pyx_base.setdefault(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_key, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.setdefault", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":448
 *         return self.value_chain.loads(topy(ret))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_5PDict_17__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_5PDict_17__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_16__setitem__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_5PDict_16__setitem__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  quiet::PersistentDict::iterator __pyx_v_it;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  quiet::PersistentDict::iterator __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "pcontainers/pdict_impl.pxi":449
 * 
 *     def __setitem__(self, key, value):
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))             # <<<<<<<<<<<<<<
 *         self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))
 * 
 */
  try {
    __pyx_t_1 = quiet::PersistentDict::iterator(__pyx_v_self->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_it = boost::move(__pyx_t_1);

  /* "pcontainers/pdict_impl.pxi":450
 *     def __setitem__(self, key, value):
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))             # <<<<<<<<<<<<<<
 * 
 *     def __delitem__(self, key):
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_v_value, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_it, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/pdict_impl.pxi":448
 *         return self.value_chain.loads(topy(ret))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":452
 *         self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))
 * 
 *     def __delitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         with nogil:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_5PDict_19__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_5PDict_19__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__delitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_18__delitem__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_5PDict_18__delitem__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key) {
  utils::PyBufferWrap __pyx_v_key_view;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__delitem__", 0);

  /* "pcontainers/pdict_impl.pxi":453
 * 
 *     def __delitem__(self, key):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.erase(key_view.get_mdb_val())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_key_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":454
 *     def __delitem__(self, key):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.erase(key_view.get_mdb_val())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":455
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         with nogil:
 *             self.ptr.erase(key_view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     cpdef erase(self, first, last):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->erase(__pyx_v_key_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":454
 *     def __delitem__(self, key):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.erase(key_view.get_mdb_val())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":452
 *         self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))
 * 
 *     def __delitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__delitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":457
 *             self.ptr.erase(key_view.get_mdb_val())
 * 
 *     cpdef erase(self, first, last):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_21erase(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_erase(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_first, CYTHON_UNUSED PyObject *__pyx_v_last, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("erase", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_erase); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_21erase)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_first);
      __Pyx_GIVEREF(__pyx_v_first);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_first);
      __Pyx_INCREF(__pyx_v_last);
      __Pyx_GIVEREF(__pyx_v_last);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_last);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":458
 * 
 *     cpdef erase(self, first, last):
 *         raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     cpdef noiterkeys(self):
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[1]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/pdict_impl.pxi":457
 *             self.ptr.erase(key_view.get_mdb_val())
 * 
 *     cpdef erase(self, first, last):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.erase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_21erase(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_21erase(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_first = 0;
  PyObject *__pyx_v_last = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("erase (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_first,&__pyx_n_s_last,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_first)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_last)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("erase", 1, 2, 2, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "erase") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_first = values[0];
    __pyx_v_last = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("erase", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.erase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_20erase(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_first, __pyx_v_last);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_20erase(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("erase", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5PDict_erase(__pyx_v_self, __pyx_v_first, __pyx_v_last, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.erase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":460
 *         raise NotImplementedError()
 * 
 *     cpdef noiterkeys(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] keylist
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_23noiterkeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_noiterkeys(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<Bstrlib::CBString>  __pyx_v_keylist;
  Bstrlib::CBString __pyx_v_key;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<Bstrlib::CBString>  __pyx_t_5;
  std::vector<Bstrlib::CBString> ::iterator __pyx_t_6;
  Bstrlib::CBString __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noiterkeys", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_noiterkeys); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_23noiterkeys)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":462
 *     cpdef noiterkeys(self):
 *         cdef vector[CBString] keylist
 *         with nogil:             # <<<<<<<<<<<<<<
 *             keylist = self.ptr.get_all_keys()
 *         return [self.key_chain.loads(topy(key)) for key in keylist]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":463
 *         cdef vector[CBString] keylist
 *         with nogil:
 *             keylist = self.ptr.get_all_keys()             # <<<<<<<<<<<<<<
 *         return [self.key_chain.loads(topy(key)) for key in keylist]
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->__pyx_base.ptr->get_all_keys();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_keylist = __pyx_t_5;
      }

      /* "pcontainers/pdict_impl.pxi":462
 *     cpdef noiterkeys(self):
 *         cdef vector[CBString] keylist
 *         with nogil:             # <<<<<<<<<<<<<<
 *             keylist = self.ptr.get_all_keys()
 *         return [self.key_chain.loads(topy(key)) for key in keylist]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":464
 *         with nogil:
 *             keylist = self.ptr.get_all_keys()
 *         return [self.key_chain.loads(topy(key)) for key in keylist]             # <<<<<<<<<<<<<<
 * 
 *     cpdef noitervalues(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_v_keylist.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_keylist.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_key = __pyx_t_7;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_key); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_3))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":460
 *         raise NotImplementedError()
 * 
 *     cpdef noiterkeys(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] keylist
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.noiterkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_23noiterkeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_23noiterkeys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("noiterkeys (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_22noiterkeys(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_22noiterkeys(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noiterkeys", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5PDict_noiterkeys(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.noiterkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":466
 *         return [self.key_chain.loads(topy(key)) for key in keylist]
 * 
 *     cpdef noitervalues(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] valuelist
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_25noitervalues(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_noitervalues(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<Bstrlib::CBString>  __pyx_v_valuelist;
  Bstrlib::CBString __pyx_v_val;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<Bstrlib::CBString>  __pyx_t_5;
  std::vector<Bstrlib::CBString> ::iterator __pyx_t_6;
  Bstrlib::CBString __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noitervalues", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_noitervalues); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_25noitervalues)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":468
 *     cpdef noitervalues(self):
 *         cdef vector[CBString] valuelist
 *         with nogil:             # <<<<<<<<<<<<<<
 *             valuelist = self.ptr.get_all_values()
 *         return [self.value_chain.loads(topy(val)) for val in valuelist]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":469
 *         cdef vector[CBString] valuelist
 *         with nogil:
 *             valuelist = self.ptr.get_all_values()             # <<<<<<<<<<<<<<
 *         return [self.value_chain.loads(topy(val)) for val in valuelist]
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->__pyx_base.ptr->get_all_values();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_valuelist = __pyx_t_5;
      }

      /* "pcontainers/pdict_impl.pxi":468
 *     cpdef noitervalues(self):
 *         cdef vector[CBString] valuelist
 *         with nogil:             # <<<<<<<<<<<<<<
 *             valuelist = self.ptr.get_all_values()
 *         return [self.value_chain.loads(topy(val)) for val in valuelist]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":470
 *         with nogil:
 *             valuelist = self.ptr.get_all_values()
 *         return [self.value_chain.loads(topy(val)) for val in valuelist]             # <<<<<<<<<<<<<<
 * 
 *     cpdef noiteritems(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_v_valuelist.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_valuelist.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_val = __pyx_t_7;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_val); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_3))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":466
 *         return [self.key_chain.loads(topy(key)) for key in keylist]
 * 
 *     cpdef noitervalues(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] valuelist
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.noitervalues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_25noitervalues(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_25noitervalues(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("noitervalues (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_24noitervalues(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_24noitervalues(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noitervalues", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5PDict_noitervalues(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.noitervalues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":472
 *         return [self.value_chain.loads(topy(val)) for val in valuelist]
 * 
 *     cpdef noiteritems(self):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[CBString, CBString]] kvlist
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_27noiteritems(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_noiteritems(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<std::pair<Bstrlib::CBString,Bstrlib::CBString> >  __pyx_v_kvlist;
  std::pair<Bstrlib::CBString,Bstrlib::CBString>  __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<std::pair<Bstrlib::CBString,Bstrlib::CBString> >  __pyx_t_5;
  std::vector<std::pair<Bstrlib::CBString,Bstrlib::CBString> > ::iterator __pyx_t_6;
  std::pair<Bstrlib::CBString,Bstrlib::CBString>  __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noiteritems", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_noiteritems); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_27noiteritems)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":474
 *     cpdef noiteritems(self):
 *         cdef vector[pair[CBString, CBString]] kvlist
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kvlist = self.ptr.get_all_items()
 *         return [(self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))) for p in kvlist]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":475
 *         cdef vector[pair[CBString, CBString]] kvlist
 *         with nogil:
 *             kvlist = self.ptr.get_all_items()             # <<<<<<<<<<<<<<
 *         return [(self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))) for p in kvlist]
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->__pyx_base.ptr->get_all_items();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_kvlist = __pyx_t_5;
      }

      /* "pcontainers/pdict_impl.pxi":474
 *     cpdef noiteritems(self):
 *         cdef vector[pair[CBString, CBString]] kvlist
 *         with nogil:             # <<<<<<<<<<<<<<
 *             kvlist = self.ptr.get_all_items()
 *         return [(self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))) for p in kvlist]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":476
 *         with nogil:
 *             kvlist = self.ptr.get_all_items()
 *         return [(self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))) for p in kvlist]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_v_kvlist.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_kvlist.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_p = __pyx_t_7;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_p.first); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_p.second); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_2, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":472
 *         return [self.value_chain.loads(topy(val)) for val in valuelist]
 * 
 *     cpdef noiteritems(self):             # <<<<<<<<<<<<<<
 *         cdef vector[pair[CBString, CBString]] kvlist
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.noiteritems", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_27noiteritems(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_27noiteritems(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("noiteritems (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_26noiteritems(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_26noiteritems(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("noiteritems", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5PDict_noiteritems(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.noiteritems", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":479
 * 
 * 
 *     cpdef pop(self, key, default=None):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef CBString v
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_29pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_pop(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_pop *__pyx_optional_args) {
  PyObject *__pyx_v_default = ((PyObject *)Py_None);
  utils::PyBufferWrap __pyx_v_key_view;
  Bstrlib::CBString __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  utils::PyBufferWrap __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Bstrlib::CBString __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default = __pyx_optional_args->__pyx_default;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_29pop)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_key);
      __Pyx_INCREF(__pyx_v_default);
      __Pyx_GIVEREF(__pyx_v_default);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_default);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":480
 * 
 *     cpdef pop(self, key, default=None):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         try:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_7 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_key_view = boost::move(__pyx_t_7);

  /* "pcontainers/pdict_impl.pxi":482
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef CBString v
 *         try:             # <<<<<<<<<<<<<<
 *             with nogil:
 *                 v = self.ptr.pop(key_view.get_mdb_val())
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    /*try:*/ {

      /* "pcontainers/pdict_impl.pxi":483
 *         cdef CBString v
 *         try:
 *             with nogil:             # <<<<<<<<<<<<<<
 *                 v = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:
 */
      {
          #ifdef WITH_THREAD
          PyThreadState *_save;
          Py_UNBLOCK_THREADS
          #endif
          /*try:*/ {

            /* "pcontainers/pdict_impl.pxi":484
 *         try:
 *             with nogil:
 *                 v = self.ptr.pop(key_view.get_mdb_val())             # <<<<<<<<<<<<<<
 *         except NotFound:
 *             if default is None:
 */
            try {
              __pyx_t_11 = __pyx_v_self->__pyx_base.ptr->pop(__pyx_v_key_view.get_mdb_val());
            } catch(...) {
              #ifdef WITH_THREAD
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
              #endif
              __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
              #ifdef WITH_THREAD
              PyGILState_Release(__pyx_gilstate_save);
              #endif
              {__pyx_filename = __pyx_f[1]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L14_error;}
            }
            __pyx_v_v = __pyx_t_11;
          }

          /* "pcontainers/pdict_impl.pxi":483
 *         cdef CBString v
 *         try:
 *             with nogil:             # <<<<<<<<<<<<<<
 *                 v = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:
 */
          /*finally:*/ {
            /*normal exit:*/{
              #ifdef WITH_THREAD
              Py_BLOCK_THREADS
              #endif
              goto __pyx_L15;
            }
            __pyx_L14_error: {
              #ifdef WITH_THREAD
              Py_BLOCK_THREADS
              #endif
              goto __pyx_L3_error;
            }
            __pyx_L15:;
          }
      }

      /* "pcontainers/pdict_impl.pxi":482
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef CBString v
 *         try:             # <<<<<<<<<<<<<<
 *             with nogil:
 *                 v = self.ptr.pop(key_view.get_mdb_val())
 */
    }
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/pdict_impl.pxi":485
 *             with nogil:
 *                 v = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:             # <<<<<<<<<<<<<<
 *             if default is None:
 *                 raise
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = PyErr_ExceptionMatches(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_12) {
      __Pyx_AddTraceback("pcontainers._pdict.PDict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "pcontainers/pdict_impl.pxi":486
 *                 v = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:
 *             if default is None:             # <<<<<<<<<<<<<<
 *                 raise
 *             return default
 */
      __pyx_t_13 = (__pyx_v_default == Py_None);
      __pyx_t_14 = (__pyx_t_13 != 0);
      if (__pyx_t_14) {

        /* "pcontainers/pdict_impl.pxi":487
 *         except NotFound:
 *             if default is None:
 *                 raise             # <<<<<<<<<<<<<<
 *             return default
 *         return self.value_chain.loads(topy(v))
 */
        __Pyx_GIVEREF(__pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_2);
        __Pyx_XGIVEREF(__pyx_t_3);
        __Pyx_ErrRestore(__pyx_t_1, __pyx_t_2, __pyx_t_3);
        __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}

        /* "pcontainers/pdict_impl.pxi":486
 *                 v = self.ptr.pop(key_view.get_mdb_val())
 *         except NotFound:
 *             if default is None:             # <<<<<<<<<<<<<<
 *                 raise
 *             return default
 */
      }

      /* "pcontainers/pdict_impl.pxi":488
 *             if default is None:
 *                 raise
 *             return default             # <<<<<<<<<<<<<<
 *         return self.value_chain.loads(topy(v))
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_default);
      __pyx_r = __pyx_v_default;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "pcontainers/pdict_impl.pxi":482
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef CBString v
 *         try:             # <<<<<<<<<<<<<<
 *             with nogil:
 *                 v = self.ptr.pop(key_view.get_mdb_val())
 */
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    goto __pyx_L0;
    __pyx_L10_try_end:;
  }

  /* "pcontainers/pdict_impl.pxi":489
 *                 raise
 *             return default
 *         return self.value_chain.loads(topy(v))             # <<<<<<<<<<<<<<
 * 
 *     cpdef popitem(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_v); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_3, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":479
 * 
 * 
 *     cpdef pop(self, key, default=None):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         cdef CBString v
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_29pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_29pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pop") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pop", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_28pop(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_key, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_28pop(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_default = __pyx_v_default;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PDict->__pyx_base.pop(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_key, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":491
 *         return self.value_chain.loads(topy(v))
 * 
 *     cpdef popitem(self):             # <<<<<<<<<<<<<<
 *         cdef pair[CBString, CBString] p
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_31popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_popitem(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch) {
  std::pair<Bstrlib::CBString,Bstrlib::CBString>  __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::pair<Bstrlib::CBString,Bstrlib::CBString>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("popitem", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_popitem); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_31popitem)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":493
 *     cpdef popitem(self):
 *         cdef pair[CBString, CBString] p
 *         with nogil:             # <<<<<<<<<<<<<<
 *             p = self.ptr.popitem()
 *         return self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":494
 *         cdef pair[CBString, CBString] p
 *         with nogil:
 *             p = self.ptr.popitem()             # <<<<<<<<<<<<<<
 *         return self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->__pyx_base.ptr->popitem();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_p = __pyx_t_5;
      }

      /* "pcontainers/pdict_impl.pxi":493
 *     cpdef popitem(self):
 *         cdef pair[CBString, CBString] p
 *         with nogil:             # <<<<<<<<<<<<<<
 *             p = self.ptr.popitem()
 *         return self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":495
 *         with nogil:
 *             p = self.ptr.popitem()
 *         return self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_p.first); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_p.second); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":491
 *         return self.value_chain.loads(topy(v))
 * 
 *     cpdef popitem(self):             # <<<<<<<<<<<<<<
 *         cdef pair[CBString, CBString] p
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.popitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_31popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_31popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("popitem (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_30popitem(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_30popitem(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("popitem", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5PDict_popitem(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.popitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":497
 *         return self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self.keys()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_33__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_33__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_32__iter__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_32__iter__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "pcontainers/pdict_impl.pxi":498
 * 
 *     def __iter__(self):
 *         return self.keys()             # <<<<<<<<<<<<<<
 * 
 *     # MBufferIO is used from here to avoid any more copy of bytestring arguments
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_keys); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":497
 *         return self.key_chain.loads(topy(p.first)), self.value_chain.loads(topy(p.second))
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self.keys()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_5PDict_36generator3(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pdict_impl.pxi":502
 *     # MBufferIO is used from here to avoid any more copy of bytestring arguments
 * 
 *     def keys(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_35keys(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_35keys(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("keys (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "keys") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("keys", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_34keys(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_34keys(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("keys", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_5_keys(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_5_keys, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_reverse = __pyx_v_reverse;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_reverse);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_reverse);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_5PDict_36generator3, (PyObject *) __pyx_cur_scope, __pyx_n_s_keys, __pyx_n_s_PDict_keys); if (unlikely(!gen)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_5PDict_36generator3(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  quiet::PersistentDict::const_iterator __pyx_t_2;
  bool __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L7_resume_from_yield;
    case 2: goto __pyx_L10_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/pdict_impl.pxi":504
 *     def keys(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_reverse); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "pcontainers/pdict_impl.pxi":505
 *         cdef cppConstIterator it
 *         if reverse:
 *             it = move(self.ptr.clast())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_beginning():
 *                 yield self.key_chain.loads(self.raw_get_key_buf_const(it))
 */
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->__pyx_base.ptr->clast();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":506
 *         if reverse:
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():             # <<<<<<<<<<<<<<
 *                 yield self.key_chain.loads(self.raw_get_key_buf_const(it))
 *                 it.decr()
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_beginning();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":507
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 *                 yield self.key_chain.loads(self.raw_get_key_buf_const(it))             # <<<<<<<<<<<<<<
 *                 it.decr()
 *         else:
 */
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_key_buf_const(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_self->key_chain), __pyx_t_4, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L7_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":508
 *             while not it.has_reached_beginning():
 *                 yield self.key_chain.loads(self.raw_get_key_buf_const(it))
 *                 it.decr()             # <<<<<<<<<<<<<<
 *         else:
 *             it = move(self.ptr.cbegin())
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator--();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }

    /* "pcontainers/pdict_impl.pxi":504
 *     def keys(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
    goto __pyx_L4;
  }

  /* "pcontainers/pdict_impl.pxi":510
 *                 it.decr()
 *         else:
 *             it = move(self.ptr.cbegin())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_end():
 *                 yield self.key_chain.loads(self.raw_get_key_buf_const(it))
 */
  /*else*/ {
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->__pyx_base.ptr->cbegin();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":511
 *         else:
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():             # <<<<<<<<<<<<<<
 *                 yield self.key_chain.loads(self.raw_get_key_buf_const(it))
 *                 it.incr()
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_end();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":512
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():
 *                 yield self.key_chain.loads(self.raw_get_key_buf_const(it))             # <<<<<<<<<<<<<<
 *                 it.incr()
 * 
 */
      __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_key_buf_const(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_self->key_chain), __pyx_t_5, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 2;
      return __pyx_r;
      __pyx_L10_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":513
 *             while not it.has_reached_end():
 *                 yield self.key_chain.loads(self.raw_get_key_buf_const(it))
 *                 it.incr()             # <<<<<<<<<<<<<<
 * 
 *     def values(self, reverse=False):
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator++();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
  }
  __pyx_L4:;

  /* "pcontainers/pdict_impl.pxi":502
 *     # MBufferIO is used from here to avoid any more copy of bytestring arguments
 * 
 *     def keys(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_5PDict_39generator4(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pdict_impl.pxi":515
 *                 it.incr()
 * 
 *     def values(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_38values(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_38values(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("values (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "values") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("values", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_37values(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_37values(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("values", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_6_values(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_6_values, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_reverse = __pyx_v_reverse;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_reverse);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_reverse);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_5PDict_39generator4, (PyObject *) __pyx_cur_scope, __pyx_n_s_values, __pyx_n_s_PDict_values); if (unlikely(!gen)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_5PDict_39generator4(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  quiet::PersistentDict::const_iterator __pyx_t_2;
  bool __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L7_resume_from_yield;
    case 2: goto __pyx_L10_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/pdict_impl.pxi":517
 *     def values(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_reverse); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "pcontainers/pdict_impl.pxi":518
 *         cdef cppConstIterator it
 *         if reverse:
 *             it = move(self.ptr.clast())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_beginning():
 *                 yield self.value_chain.loads(self.raw_get_value_buf_const(it))
 */
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->__pyx_base.ptr->clast();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":519
 *         if reverse:
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():             # <<<<<<<<<<<<<<
 *                 yield self.value_chain.loads(self.raw_get_value_buf_const(it))
 *                 it.decr()
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_beginning();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":520
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 *                 yield self.value_chain.loads(self.raw_get_value_buf_const(it))             # <<<<<<<<<<<<<<
 *                 it.decr()
 *         else:
 */
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_value_buf_const(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_self->value_chain), __pyx_t_4, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L7_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":521
 *             while not it.has_reached_beginning():
 *                 yield self.value_chain.loads(self.raw_get_value_buf_const(it))
 *                 it.decr()             # <<<<<<<<<<<<<<
 *         else:
 *             it = move(self.ptr.cbegin())
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator--();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }

    /* "pcontainers/pdict_impl.pxi":517
 *     def values(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
    goto __pyx_L4;
  }

  /* "pcontainers/pdict_impl.pxi":523
 *                 it.decr()
 *         else:
 *             it = move(self.ptr.cbegin())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_end():
 *                 yield self.value_chain.loads(self.raw_get_value_buf_const(it))
 */
  /*else*/ {
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->__pyx_base.ptr->cbegin();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":524
 *         else:
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():             # <<<<<<<<<<<<<<
 *                 yield self.value_chain.loads(self.raw_get_value_buf_const(it))
 *                 it.incr()
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_end();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":525
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():
 *                 yield self.value_chain.loads(self.raw_get_value_buf_const(it))             # <<<<<<<<<<<<<<
 *                 it.incr()
 * 
 */
      __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_value_buf_const(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_self->value_chain), __pyx_t_5, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 2;
      return __pyx_r;
      __pyx_L10_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":526
 *             while not it.has_reached_end():
 *                 yield self.value_chain.loads(self.raw_get_value_buf_const(it))
 *                 it.incr()             # <<<<<<<<<<<<<<
 * 
 *     def items(self, reverse=False):
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator++();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
  }
  __pyx_L4:;

  /* "pcontainers/pdict_impl.pxi":515
 *                 it.incr()
 * 
 *     def values(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_5PDict_42generator5(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pdict_impl.pxi":528
 *                 it.incr()
 * 
 *     def items(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_41items(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_41items(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reverse = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("items (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reverse,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_reverse);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "items") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reverse = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("items", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_40items(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_reverse);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_40items(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_reverse) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("items", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_7_items(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_7_items, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_reverse = __pyx_v_reverse;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_reverse);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_reverse);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_5PDict_42generator5, (PyObject *) __pyx_cur_scope, __pyx_n_s_items, __pyx_n_s_PDict_items); if (unlikely(!gen)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_5PDict_42generator5(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  quiet::PersistentDict::const_iterator __pyx_t_2;
  bool __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L9_resume_from_yield;
    case 2: goto __pyx_L14_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/pdict_impl.pxi":530
 *     def items(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_reverse); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "pcontainers/pdict_impl.pxi":531
 *         cdef cppConstIterator it
 *         if reverse:
 *             it = move(self.ptr.clast())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_beginning():
 *                 key, val = self.raw_get_item_buf_const(it)
 */
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->__pyx_base.ptr->clast();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":532
 *         if reverse:
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():             # <<<<<<<<<<<<<<
 *                 key, val = self.raw_get_item_buf_const(it)
 *                 yield (self.key_chain.loads(key), self.value_chain.loads(val))
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_beginning();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":533
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 *                 key, val = self.raw_get_item_buf_const(it)             # <<<<<<<<<<<<<<
 *                 yield (self.key_chain.loads(key), self.value_chain.loads(val))
 *                 it.decr()
 */
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_item_buf_const(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
        PyObject* sequence = __pyx_t_4;
        #if CYTHON_COMPILING_IN_CPYTHON
        Py_ssize_t size = Py_SIZE(sequence);
        #else
        Py_ssize_t size = PySequence_Size(sequence);
        #endif
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        #if CYTHON_COMPILING_IN_CPYTHON
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        #else
        __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        #endif
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
        index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_5)) goto __pyx_L7_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_5);
        index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L7_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_6);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_8 = NULL;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        goto __pyx_L8_unpacking_done;
        __pyx_L7_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L8_unpacking_done:;
      }
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_key);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_key, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_val);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_val, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;

      /* "pcontainers/pdict_impl.pxi":534
 *             while not it.has_reached_beginning():
 *                 key, val = self.raw_get_item_buf_const(it)
 *                 yield (self.key_chain.loads(key), self.value_chain.loads(val))             # <<<<<<<<<<<<<<
 *                 it.decr()
 *         else:
 */
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_self->key_chain), __pyx_cur_scope->__pyx_v_key, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_self->value_chain), __pyx_cur_scope->__pyx_v_val, 0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
      __pyx_t_4 = 0;
      __pyx_t_6 = 0;
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L9_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":535
 *                 key, val = self.raw_get_item_buf_const(it)
 *                 yield (self.key_chain.loads(key), self.value_chain.loads(val))
 *                 it.decr()             # <<<<<<<<<<<<<<
 *         else:
 *             it = move(self.ptr.cbegin())
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator--();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }

    /* "pcontainers/pdict_impl.pxi":530
 *     def items(self, reverse=False):
 *         cdef cppConstIterator it
 *         if reverse:             # <<<<<<<<<<<<<<
 *             it = move(self.ptr.clast())
 *             while not it.has_reached_beginning():
 */
    goto __pyx_L4;
  }

  /* "pcontainers/pdict_impl.pxi":537
 *                 it.decr()
 *         else:
 *             it = move(self.ptr.cbegin())             # <<<<<<<<<<<<<<
 *             while not it.has_reached_end():
 *                 key, val = self.raw_get_item_buf_const(it)
 */
  /*else*/ {
    try {
      __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->__pyx_base.ptr->cbegin();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_cur_scope->__pyx_v_it = boost::move(__pyx_t_2);

    /* "pcontainers/pdict_impl.pxi":538
 *         else:
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():             # <<<<<<<<<<<<<<
 *                 key, val = self.raw_get_item_buf_const(it)
 *                 yield (self.key_chain.loads(key), self.value_chain.loads(val))
 */
    while (1) {
      try {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_it.has_reached_end();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_1 = ((!(__pyx_t_3 != 0)) != 0);
      if (!__pyx_t_1) break;

      /* "pcontainers/pdict_impl.pxi":539
 *             it = move(self.ptr.cbegin())
 *             while not it.has_reached_end():
 *                 key, val = self.raw_get_item_buf_const(it)             # <<<<<<<<<<<<<<
 *                 yield (self.key_chain.loads(key), self.value_chain.loads(val))
 *                 it.incr()
 */
      __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_item_buf_const(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_cur_scope->__pyx_v_self), __pyx_cur_scope->__pyx_v_it); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
        PyObject* sequence = __pyx_t_5;
        #if CYTHON_COMPILING_IN_CPYTHON
        Py_ssize_t size = Py_SIZE(sequence);
        #else
        Py_ssize_t size = PySequence_Size(sequence);
        #endif
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        #if CYTHON_COMPILING_IN_CPYTHON
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_6 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_6 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        #else
        __pyx_t_6 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_7 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
        index = 0; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L12_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_6);
        index = 1; __pyx_t_4 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_4)) goto __pyx_L12_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_4);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_8 = NULL;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        goto __pyx_L13_unpacking_done;
        __pyx_L12_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L13_unpacking_done:;
      }
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_key);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_key, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_val);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_val, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;

      /* "pcontainers/pdict_impl.pxi":540
 *             while not it.has_reached_end():
 *                 key, val = self.raw_get_item_buf_const(it)
 *                 yield (self.key_chain.loads(key), self.value_chain.loads(val))             # <<<<<<<<<<<<<<
 *                 it.incr()
 * 
 */
      __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_self->key_chain), __pyx_cur_scope->__pyx_v_key, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_self->value_chain), __pyx_cur_scope->__pyx_v_val, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
      __pyx_t_5 = 0;
      __pyx_t_4 = 0;
      __pyx_r = __pyx_t_6;
      __pyx_t_6 = 0;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 2;
      return __pyx_r;
      __pyx_L14_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/pdict_impl.pxi":541
 *                 key, val = self.raw_get_item_buf_const(it)
 *                 yield (self.key_chain.loads(key), self.value_chain.loads(val))
 *                 it.incr()             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, key):
 */
      try {
        __pyx_cur_scope->__pyx_v_it.quiet::PersistentDict::const_iterator::operator++();
      } catch(...) {
        __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
  }
  __pyx_L4:;

  /* "pcontainers/pdict_impl.pxi":528
 *                 it.incr()
 * 
 *     def items(self, reverse=False):             # <<<<<<<<<<<<<<
 *         cdef cppConstIterator it
 *         if reverse:
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":543
 *                 it.incr()
 * 
 *     def __contains__(self, key):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         return self.ptr.contains(key_view.get_mdb_val())
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_5PDict_44__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_5PDict_44__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_43__contains__(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_5PDict_43__contains__(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_key) {
  utils::PyBufferWrap __pyx_v_key_view;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  bool __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__contains__", 0);

  /* "pcontainers/pdict_impl.pxi":544
 * 
 *     def __contains__(self, key):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))             # <<<<<<<<<<<<<<
 *         return self.ptr.contains(key_view.get_mdb_val())
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_key_view = boost::move(__pyx_t_2);

  /* "pcontainers/pdict_impl.pxi":545
 *     def __contains__(self, key):
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         return self.ptr.contains(key_view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     def update(self, e=None, **kwds):
 */
  try {
    __pyx_t_3 = __pyx_v_self->__pyx_base.ptr->contains(__pyx_v_key_view.get_mdb_val());
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_3;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":543
 *                 it.incr()
 * 
 *     def __contains__(self, key):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(self.key_chain.dumps(key)))
 *         return self.ptr.contains(key_view.get_mdb_val())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":547
 *         return self.ptr.contains(key_view.get_mdb_val())
 * 
 *     def update(self, e=None, **kwds):             # <<<<<<<<<<<<<<
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_46update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_46update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_v_kwds = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  __pyx_v_kwds = PyDict_New(); if (unlikely(!__pyx_v_kwds)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwds);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_e,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwds, values, pos_args, "update") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_e = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwds); __pyx_v_kwds = 0;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_45update(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_e, __pyx_v_kwds);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwds);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_45update(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_kwds) {
  quiet::PersistentDict::iterator __pyx_v_it;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  quiet::PersistentDict::iterator __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  Py_ssize_t __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);

  /* "pcontainers/pdict_impl.pxi":548
 * 
 *     def update(self, e=None, **kwds):
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))             # <<<<<<<<<<<<<<
 *         if e is not None:
 *             if hasattr(e, 'keys'):
 */
  try {
    __pyx_t_1 = quiet::PersistentDict::iterator(__pyx_v_self->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_it = boost::move(__pyx_t_1);

  /* "pcontainers/pdict_impl.pxi":549
 *     def update(self, e=None, **kwds):
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:             # <<<<<<<<<<<<<<
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():
 */
  __pyx_t_2 = (__pyx_v_e != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pcontainers/pdict_impl.pxi":550
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:
 *             if hasattr(e, 'keys'):             # <<<<<<<<<<<<<<
 *                 for key in e.keys():
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(e[key]))
 */
    __pyx_t_3 = PyObject_HasAttr(__pyx_v_e, __pyx_n_s_keys); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = (__pyx_t_3 != 0);
    if (__pyx_t_2) {

      /* "pcontainers/pdict_impl.pxi":551
 *         if e is not None:
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():             # <<<<<<<<<<<<<<
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(e[key]))
 *             else:
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_keys); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (__pyx_t_6) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else {
        __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
        __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          }
        } else {
          __pyx_t_4 = __pyx_t_8(__pyx_t_5);
          if (unlikely(!__pyx_t_4)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[1]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_4);
        }
        __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "pcontainers/pdict_impl.pxi":552
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(e[key]))             # <<<<<<<<<<<<<<
 *             else:
 *                 for (key, value) in e:
 */
        __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = PyObject_GetItem(__pyx_v_e, __pyx_v_key); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_6, 0); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_it, __pyx_t_4, __pyx_t_9); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "pcontainers/pdict_impl.pxi":551
 *         if e is not None:
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():             # <<<<<<<<<<<<<<
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(e[key]))
 *             else:
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "pcontainers/pdict_impl.pxi":550
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:
 *             if hasattr(e, 'keys'):             # <<<<<<<<<<<<<<
 *                 for key in e.keys():
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(e[key]))
 */
      goto __pyx_L4;
    }

    /* "pcontainers/pdict_impl.pxi":554
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(e[key]))
 *             else:
 *                 for (key, value) in e:             # <<<<<<<<<<<<<<
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))
 * 
 */
    /*else*/ {
      if (likely(PyList_CheckExact(__pyx_v_e)) || PyTuple_CheckExact(__pyx_v_e)) {
        __pyx_t_5 = __pyx_v_e; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_e); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_8(__pyx_t_5);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        if ((likely(PyTuple_CheckExact(__pyx_t_6))) || (PyList_CheckExact(__pyx_t_6))) {
          PyObject* sequence = __pyx_t_6;
          #if CYTHON_COMPILING_IN_CPYTHON
          Py_ssize_t size = Py_SIZE(sequence);
          #else
          Py_ssize_t size = PySequence_Size(sequence);
          #endif
          if (unlikely(size != 2)) {
            if (size > 2) __Pyx_RaiseTooManyValuesError(2);
            else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
            {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          #if CYTHON_COMPILING_IN_CPYTHON
          if (likely(PyTuple_CheckExact(sequence))) {
            __pyx_t_9 = PyTuple_GET_ITEM(sequence, 0); 
            __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
          } else {
            __pyx_t_9 = PyList_GET_ITEM(sequence, 0); 
            __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
          }
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_4);
          #else
          __pyx_t_9 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_4);
          #endif
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        } else {
          Py_ssize_t index = -1;
          __pyx_t_10 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_11 = Py_TYPE(__pyx_t_10)->tp_iternext;
          index = 0; __pyx_t_9 = __pyx_t_11(__pyx_t_10); if (unlikely(!__pyx_t_9)) goto __pyx_L9_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_9);
          index = 1; __pyx_t_4 = __pyx_t_11(__pyx_t_10); if (unlikely(!__pyx_t_4)) goto __pyx_L9_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_4);
          if (__Pyx_IternextUnpackEndCheck(__pyx_t_11(__pyx_t_10), 2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_11 = NULL;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          goto __pyx_L10_unpacking_done;
          __pyx_L9_unpacking_failed:;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_11 = NULL;
          if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_L10_unpacking_done:;
        }
        __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_9);
        __pyx_t_9 = 0;
        __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "pcontainers/pdict_impl.pxi":555
 *             else:
 *                 for (key, value) in e:
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))             # <<<<<<<<<<<<<<
 * 
 *         for key in kwds:
 */
        __pyx_t_6 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_v_value, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_it, __pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "pcontainers/pdict_impl.pxi":554
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(e[key]))
 *             else:
 *                 for (key, value) in e:             # <<<<<<<<<<<<<<
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))
 * 
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __pyx_L4:;

    /* "pcontainers/pdict_impl.pxi":549
 *     def update(self, e=None, **kwds):
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:             # <<<<<<<<<<<<<<
 *             if hasattr(e, 'keys'):
 *                 for key in e.keys():
 */
  }

  /* "pcontainers/pdict_impl.pxi":557
 *                     self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(value))
 * 
 *         for key in kwds:             # <<<<<<<<<<<<<<
 *             self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(kwds[key]))
 * 
 */
  __pyx_t_7 = 0;
  __pyx_t_9 = __Pyx_dict_iterator(__pyx_v_kwds, 1, ((PyObject *)NULL), (&__pyx_t_12), (&__pyx_t_13)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_5);
  __pyx_t_5 = __pyx_t_9;
  __pyx_t_9 = 0;
  while (1) {
    __pyx_t_14 = __Pyx_dict_iter_next(__pyx_t_5, __pyx_t_12, &__pyx_t_7, &__pyx_t_9, NULL, NULL, __pyx_t_13);
    if (unlikely(__pyx_t_14 == 0)) break;
    if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "pcontainers/pdict_impl.pxi":558
 * 
 *         for key in kwds:
 *             self.raw_set_item_buf(it, self.key_chain.dumps(key), self.value_chain.dumps(kwds[key]))             # <<<<<<<<<<<<<<
 * 
 *     # noinspection PyPep8Naming
 */
    __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_4 = __Pyx_PyDict_GetItem(__pyx_v_kwds, __pyx_v_key); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_4, 0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_it, __pyx_t_9, __pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pcontainers/pdict_impl.pxi":547
 *         return self.ptr.contains(key_view.get_mdb_val())
 * 
 *     def update(self, e=None, **kwds):             # <<<<<<<<<<<<<<
 *         cdef cppIterator it = move(cppIterator(self.ptr, 0, 0))
 *         if e is not None:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":562
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else v
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_48fromkeys(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_48fromkeys(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dirname = 0;
  PyObject *__pyx_v_dbname = 0;
  PyObject *__pyx_v_opts = 0;
  PyObject *__pyx_v_S = 0;
  PyObject *__pyx_v_v = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromkeys (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_S,&__pyx_n_s_v,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromkeys", 0, 2, 5, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_S);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_v);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fromkeys") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = values[2];
    __pyx_v_S = values[3];
    __pyx_v_v = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromkeys", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.fromkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_47fromkeys(((PyTypeObject*)__pyx_v_cls), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_S, __pyx_v_v);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_5PDict_8fromkeys_2generator10(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pdict_impl.pxi":566
 *         v = b'' if v is None else v
 *         if S is not None:
 *             d.update((key, v) for key in S)             # <<<<<<<<<<<<<<
 *         return d
 * 
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_8fromkeys_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_5PDict_8fromkeys_2generator10, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_fromkeys_locals_genexpr); if (unlikely(!gen)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.fromkeys.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_5PDict_8fromkeys_2generator10(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_S)) { __Pyx_RaiseClosureNameError("S"); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_S)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_S)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_S; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_S); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_key);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_key, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_v)) { __Pyx_RaiseClosureNameError("v"); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_key);
    __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_key);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_cur_scope->__pyx_v_key);
    __Pyx_INCREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_v);
    __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_v);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_v);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    __Pyx_XGIVEREF(__pyx_t_1);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":562
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else v
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_47fromkeys(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, PyObject *__pyx_v_opts, PyObject *__pyx_v_S, PyObject *__pyx_v_v) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *__pyx_cur_scope;
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fromkeys", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_S = __pyx_v_S;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_S);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_S);
  __pyx_cur_scope->__pyx_v_v = __pyx_v_v;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_v);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_v);

  /* "pcontainers/pdict_impl.pxi":563
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):
 *         d = cls(dirname, dbname, opts=opts)             # <<<<<<<<<<<<<<
 *         v = b'' if v is None else v
 *         if S is not None:
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_dirname);
  __Pyx_GIVEREF(__pyx_v_dirname);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_dirname);
  __Pyx_INCREF(__pyx_v_dbname);
  __Pyx_GIVEREF(__pyx_v_dbname);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_dbname);
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_opts, __pyx_v_opts) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_v_cls), __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_d = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pcontainers/pdict_impl.pxi":564
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else v             # <<<<<<<<<<<<<<
 *         if S is not None:
 *             d.update((key, v) for key in S)
 */
  __pyx_t_4 = (__pyx_cur_scope->__pyx_v_v == Py_None);
  if ((__pyx_t_4 != 0)) {
    __Pyx_INCREF(__pyx_kp_b__5);
    __pyx_t_3 = __pyx_kp_b__5;
  } else {
    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_v);
    __pyx_t_3 = __pyx_cur_scope->__pyx_v_v;
  }
  __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_v);
  __Pyx_DECREF_SET(__pyx_cur_scope->__pyx_v_v, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pcontainers/pdict_impl.pxi":565
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else v
 *         if S is not None:             # <<<<<<<<<<<<<<
 *             d.update((key, v) for key in S)
 *         return d
 */
  __pyx_t_4 = (__pyx_cur_scope->__pyx_v_S != Py_None);
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "pcontainers/pdict_impl.pxi":566
 *         v = b'' if v is None else v
 *         if S is not None:
 *             d.update((key, v) for key in S)             # <<<<<<<<<<<<<<
 *         return d
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_d, __pyx_n_s_update); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_pf_11pcontainers_6_pdict_5PDict_8fromkeys_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pcontainers/pdict_impl.pxi":565
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else v
 *         if S is not None:             # <<<<<<<<<<<<<<
 *             d.update((key, v) for key in S)
 *         return d
 */
  }

  /* "pcontainers/pdict_impl.pxi":567
 *         if S is not None:
 *             d.update((key, v) for key in S)
 *         return d             # <<<<<<<<<<<<<<
 * 
 *     cpdef transform_values(self, binary_funct):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_d);
  __pyx_r = __pyx_v_d;
  goto __pyx_L0;

  /* "pcontainers/pdict_impl.pxi":562
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else v
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.fromkeys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":569
 *         return d
 * 
 *     cpdef transform_values(self, binary_funct):             # <<<<<<<<<<<<<<
 *         binary_funct = _adapt_binary_functor(binary_funct, self.key_chain, self.value_chain)
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_50transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_funct); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_transform_values(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_binary_funct, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transform_values", 0);
  __Pyx_INCREF(__pyx_v_binary_funct);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transform_values); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_50transform_values)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_binary_funct); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_binary_funct);
        __Pyx_GIVEREF(__pyx_v_binary_funct);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_binary_funct);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":570
 * 
 *     cpdef transform_values(self, binary_funct):
 *         binary_funct = _adapt_binary_functor(binary_funct, self.key_chain, self.value_chain)             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_adapt_binary_functor); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_binary_funct);
  __Pyx_GIVEREF(__pyx_v_binary_funct);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_v_binary_funct);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->key_chain));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->key_chain));
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, ((PyObject *)__pyx_v_self->key_chain));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->value_chain));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->value_chain));
  PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_6, ((PyObject *)__pyx_v_self->value_chain));
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_binary_funct, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":571
 *     cpdef transform_values(self, binary_funct):
 *         binary_funct = _adapt_binary_functor(binary_funct, self.key_chain, self.value_chain)
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":572
 *         binary_funct = _adapt_binary_functor(binary_funct, self.key_chain, self.value_chain)
 *         with nogil:
 *             self.ptr.transform_values(make_binary_functor(binary_funct))             # <<<<<<<<<<<<<<
 * 
 *     cpdef remove_if(self, binary_pred):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->transform_values(quiet::PyFunctor::make_binary_functor(__pyx_v_binary_funct));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":571
 *     cpdef transform_values(self, binary_funct):
 *         binary_funct = _adapt_binary_functor(binary_funct, self.key_chain, self.value_chain)
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":569
 *         return d
 * 
 *     cpdef transform_values(self, binary_funct):             # <<<<<<<<<<<<<<
 *         binary_funct = _adapt_binary_functor(binary_funct, self.key_chain, self.value_chain)
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.transform_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_binary_funct);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_50transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_funct); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_50transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_funct) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transform_values (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_49transform_values(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), ((PyObject *)__pyx_v_binary_funct));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_49transform_values(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_binary_funct) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transform_values", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5PDict_transform_values(__pyx_v_self, __pyx_v_binary_funct, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.transform_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":574
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 * 
 *     cpdef remove_if(self, binary_pred):             # <<<<<<<<<<<<<<
 *         binary_pred = _adapt_binary_predicate(binary_pred, self.key_chain, self.value_chain)
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_52remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_pred); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_remove_if(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_binary_pred, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_if", 0);
  __Pyx_INCREF(__pyx_v_binary_pred);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove_if); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_52remove_if)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_binary_pred); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_binary_pred);
        __Pyx_GIVEREF(__pyx_v_binary_pred);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_binary_pred);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":575
 * 
 *     cpdef remove_if(self, binary_pred):
 *         binary_pred = _adapt_binary_predicate(binary_pred, self.key_chain, self.value_chain)             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_adapt_binary_predicate); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_binary_pred);
  __Pyx_GIVEREF(__pyx_v_binary_pred);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_v_binary_pred);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->key_chain));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->key_chain));
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, ((PyObject *)__pyx_v_self->key_chain));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->value_chain));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->value_chain));
  PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_6, ((PyObject *)__pyx_v_self->value_chain));
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_binary_pred, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pdict_impl.pxi":576
 *     cpdef remove_if(self, binary_pred):
 *         binary_pred = _adapt_binary_predicate(binary_pred, self.key_chain, self.value_chain)
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":577
 *         binary_pred = _adapt_binary_predicate(binary_pred, self.key_chain, self.value_chain)
 *         with nogil:
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))             # <<<<<<<<<<<<<<
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->remove_if(quiet::PyPredicate::make_binary_predicate(__pyx_v_binary_pred));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":576
 *     cpdef remove_if(self, binary_pred):
 *         binary_pred = _adapt_binary_predicate(binary_pred, self.key_chain, self.value_chain)
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":574
 *             self.ptr.transform_values(make_binary_functor(binary_funct))
 * 
 *     cpdef remove_if(self, binary_pred):             # <<<<<<<<<<<<<<
 *         binary_pred = _adapt_binary_predicate(binary_pred, self.key_chain, self.value_chain)
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.remove_if", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_binary_pred);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_52remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_pred); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_52remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_binary_pred) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_if (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_51remove_if(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), ((PyObject *)__pyx_v_binary_pred));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_51remove_if(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_binary_pred) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_if", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5PDict_remove_if(__pyx_v_self, __pyx_v_binary_pred, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.remove_if", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":579
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PDict):
 *             raise TypeError()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_54copy_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_copy_to(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_copy_to *__pyx_optional_args) {
  Py_ssize_t __pyx_v_chunk_size = ((Py_ssize_t)-1L);
  Bstrlib::CBString __pyx_v_empt;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy_to", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_chunk_size = __pyx_optional_args->chunk_size;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_copy_to); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_54copy_to)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_chunk_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":580
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PDict):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         cdef CBString empt
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PDict); 
  __pyx_t_9 = ((!(__pyx_t_8 != 0)) != 0);
  if (__pyx_t_9) {

    /* "pcontainers/pdict_impl.pxi":581
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PDict):
 *             raise TypeError()             # <<<<<<<<<<<<<<
 *         cdef CBString empt
 *         with nogil:
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_TypeError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pdict_impl.pxi":580
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PDict):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         cdef CBString empt
 */
  }

  /* "pcontainers/pdict_impl.pxi":583
 *             raise TypeError()
 *         cdef CBString empt
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.copy_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":584
 *         cdef CBString empt
 *         with nogil:
 *             self.ptr.copy_to(deref((<PDict> other).ptr), empt, empt, chunk_size)             # <<<<<<<<<<<<<<
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->copy_to((*((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_other)->__pyx_base.ptr), __pyx_v_empt, __pyx_v_empt, __pyx_v_chunk_size);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L5_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":583
 *             raise TypeError()
 *         cdef CBString empt
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.copy_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L5_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L6:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":579
 *             self.ptr.remove_if(make_binary_predicate(binary_pred))
 * 
 *     cpdef copy_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PDict):
 *             raise TypeError()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.copy_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_54copy_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_54copy_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_other = 0;
  Py_ssize_t __pyx_v_chunk_size;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy_to (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_other,&__pyx_n_s_chunk_size,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_other)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_chunk_size);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "copy_to") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_other = values[0];
    if (values[1]) {
      __pyx_v_chunk_size = PyInt_AsSsize_t(values[1]); if (unlikely((__pyx_v_chunk_size == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_chunk_size = ((Py_ssize_t)-1L);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("copy_to", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.copy_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_53copy_to(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_other, __pyx_v_chunk_size);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_53copy_to(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy_to", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.chunk_size = __pyx_v_chunk_size;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PDict->__pyx_base.copy_to(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_other, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.copy_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":586
 *             self.ptr.copy_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PDict):
 *             raise TypeError()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_56move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_move_to(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_move_to *__pyx_optional_args) {
  Py_ssize_t __pyx_v_chunk_size = ((Py_ssize_t)-1L);
  Bstrlib::CBString __pyx_v_empt;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_chunk_size = __pyx_optional_args->chunk_size;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_move_to); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_56move_to)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_chunk_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":587
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PDict):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         cdef CBString empt
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PDict); 
  __pyx_t_9 = ((!(__pyx_t_8 != 0)) != 0);
  if (__pyx_t_9) {

    /* "pcontainers/pdict_impl.pxi":588
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PDict):
 *             raise TypeError()             # <<<<<<<<<<<<<<
 *         cdef CBString empt
 *         with nogil:
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_TypeError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pdict_impl.pxi":587
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PDict):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         cdef CBString empt
 */
  }

  /* "pcontainers/pdict_impl.pxi":590
 *             raise TypeError()
 *         cdef CBString empt
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.move_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":591
 *         cdef CBString empt
 *         with nogil:
 *             self.ptr.move_to(deref((<PDict> other).ptr), empt, empt, chunk_size)             # <<<<<<<<<<<<<<
 * 
 *     cpdef remove_duplicates(self, first="", last=""):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->move_to((*((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_other)->__pyx_base.ptr), __pyx_v_empt, __pyx_v_empt, __pyx_v_chunk_size);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L5_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":590
 *             raise TypeError()
 *         cdef CBString empt
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.move_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L5_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L6:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":586
 *             self.ptr.copy_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PDict):
 *             raise TypeError()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_56move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_56move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_other = 0;
  Py_ssize_t __pyx_v_chunk_size;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_to (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_other,&__pyx_n_s_chunk_size,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_other)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_chunk_size);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move_to") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_other = values[0];
    if (values[1]) {
      __pyx_v_chunk_size = PyInt_AsSsize_t(values[1]); if (unlikely((__pyx_v_chunk_size == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_chunk_size = ((Py_ssize_t)-1L);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move_to", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_55move_to(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_other, __pyx_v_chunk_size);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_55move_to(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.chunk_size = __pyx_v_chunk_size;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PDict->__pyx_base.move_to(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), __pyx_v_other, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pdict_impl.pxi":593
 *             self.ptr.move_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 *     cpdef remove_duplicates(self, first="", last=""):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_duplicates()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_58remove_duplicates(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5PDict_remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_5PDict_remove_duplicates *__pyx_optional_args) {
  PyObject *__pyx_v_first = ((PyObject *)__pyx_kp_s__5);
  PyObject *__pyx_v_last = ((PyObject *)__pyx_kp_s__5);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_duplicates", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_first = __pyx_optional_args->first;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_last = __pyx_optional_args->last;
      }
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove_duplicates); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_58remove_duplicates)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_first);
      __Pyx_GIVEREF(__pyx_v_first);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_first);
      __Pyx_INCREF(__pyx_v_last);
      __Pyx_GIVEREF(__pyx_v_last);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_last);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pdict_impl.pxi":594
 * 
 *     cpdef remove_duplicates(self, first="", last=""):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_duplicates()
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pdict_impl.pxi":595
 *     cpdef remove_duplicates(self, first="", last=""):
 *         with nogil:
 *             self.ptr.remove_duplicates()             # <<<<<<<<<<<<<<
 * 
 * 
 */
        try {
          __pyx_v_self->__pyx_base.ptr->remove_duplicates();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[1]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pdict_impl.pxi":594
 * 
 *     cpdef remove_duplicates(self, first="", last=""):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_duplicates()
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pdict_impl.pxi":593
 *             self.ptr.move_to(deref((<PDict> other).ptr), empt, empt, chunk_size)
 * 
 *     cpdef remove_duplicates(self, first="", last=""):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_duplicates()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.remove_duplicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_58remove_duplicates(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5PDict_58remove_duplicates(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_first = 0;
  PyObject *__pyx_v_last = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_duplicates (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_first,&__pyx_n_s_last,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_kp_s__5);
    values[1] = ((PyObject *)__pyx_kp_s__5);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_first);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_last);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "remove_duplicates") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_first = values[0];
    __pyx_v_last = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("remove_duplicates", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PDict.remove_duplicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5PDict_57remove_duplicates(((struct __pyx_obj_11pcontainers_6_pdict_PDict *)__pyx_v_self), __pyx_v_first, __pyx_v_last);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5PDict_57remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_self, PyObject *__pyx_v_first, PyObject *__pyx_v_last) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_duplicates", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 2;
  __pyx_t_2.first = __pyx_v_first;
  __pyx_t_2.last = __pyx_v_last;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PDict->__pyx_base.remove_duplicates(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self), 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PDict.remove_duplicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":3
 * 
 * cdef class PRawQueue(object):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_9PRawQueue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_9PRawQueue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dirname = 0;
  PyObject *__pyx_v_dbname = 0;
  struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_value_chain,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[3] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[2]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue___cinit__(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_9PRawQueue___cinit__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  Bstrlib::CBString __pyx_v_dirn;
  Bstrlib::CBString __pyx_v_dbn;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  quiet::PersistentQueue *__pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_opts);

  /* "pcontainers/pqueue_impl.pxi":4
 * cdef class PRawQueue(object):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))             # <<<<<<<<<<<<<<
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_dirname); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dirn = __pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":5
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))             # <<<<<<<<<<<<<<
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_dbname); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dbn = __pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":6
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("empty dirname")
 *         if opts is None:
 */
  __pyx_t_2 = ((__pyx_v_dirn.length() == 0) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/pqueue_impl.pxi":7
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")             # <<<<<<<<<<<<<<
 *         if opts is None:
 *             opts = LmdbOptions()
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pqueue_impl.pxi":6
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("empty dirname")
 *         if opts is None:
 */
  }

  /* "pcontainers/pqueue_impl.pxi":8
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")
 *         if opts is None:             # <<<<<<<<<<<<<<
 *             opts = LmdbOptions()
 *         self.ptr = new cppPersistentQueue(dirn, dbn, (<LmdbOptions> opts).opts)
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_opts) == Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "pcontainers/pqueue_impl.pxi":9
 *             raise ValueError("empty dirname")
 *         if opts is None:
 *             opts = LmdbOptions()             # <<<<<<<<<<<<<<
 *         self.ptr = new cppPersistentQueue(dirn, dbn, (<LmdbOptions> opts).opts)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_LmdbOptions), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_opts, ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "pcontainers/pqueue_impl.pxi":8
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")
 *         if opts is None:             # <<<<<<<<<<<<<<
 *             opts = LmdbOptions()
 *         self.ptr = new cppPersistentQueue(dirn, dbn, (<LmdbOptions> opts).opts)
 */
  }

  /* "pcontainers/pqueue_impl.pxi":10
 *         if opts is None:
 *             opts = LmdbOptions()
 *         self.ptr = new cppPersistentQueue(dirn, dbn, (<LmdbOptions> opts).opts)             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):
 */
  try {
    __pyx_t_4 = new quiet::PersistentQueue(__pyx_v_dirn, __pyx_v_dbn, __pyx_v_opts->opts);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->ptr = __pyx_t_4;

  /* "pcontainers/pqueue_impl.pxi":3
 * 
 * cdef class PRawQueue(object):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         cdef CBString dirn = tocbstring(make_utf8(dirname))
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_opts);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":12
 *         self.ptr = new cppPersistentQueue(dirn, dbn, (<LmdbOptions> opts).opts)
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_9PRawQueue_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_9PRawQueue_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_dirname = 0;
  CYTHON_UNUSED PyObject *__pyx_v_dbname = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_value_chain,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[3] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[2]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_2__init__(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_9PRawQueue_2__init__(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dirname, CYTHON_UNUSED PyObject *__pyx_v_dbname, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":15
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.ptr is not NULL:
 *             del self.ptr
 */

/* Python wrapper */
static void __pyx_pw_11pcontainers_6_pdict_9PRawQueue_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_11pcontainers_6_pdict_9PRawQueue_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_11pcontainers_6_pdict_9PRawQueue_4__dealloc__(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_11pcontainers_6_pdict_9PRawQueue_4__dealloc__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pcontainers/pqueue_impl.pxi":16
 * 
 *     def __dealloc__(self):
 *         if self.ptr is not NULL:             # <<<<<<<<<<<<<<
 *             del self.ptr
 *             self.ptr = NULL
 */
  __pyx_t_1 = ((__pyx_v_self->ptr != NULL) != 0);
  if (__pyx_t_1) {

    /* "pcontainers/pqueue_impl.pxi":17
 *     def __dealloc__(self):
 *         if self.ptr is not NULL:
 *             del self.ptr             # <<<<<<<<<<<<<<
 *             self.ptr = NULL
 * 
 */
    delete __pyx_v_self->ptr;

    /* "pcontainers/pqueue_impl.pxi":18
 *         if self.ptr is not NULL:
 *             del self.ptr
 *             self.ptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
    __pyx_v_self->ptr = NULL;

    /* "pcontainers/pqueue_impl.pxi":16
 * 
 *     def __dealloc__(self):
 *         if self.ptr is not NULL:             # <<<<<<<<<<<<<<
 *             del self.ptr
 *             self.ptr = NULL
 */
  }

  /* "pcontainers/pqueue_impl.pxi":15
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.ptr is not NULL:
 *             del self.ptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pcontainers/pqueue_impl.pxi":20
 *             self.ptr = NULL
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"PRawQueue(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_6__repr__(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_6__repr__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "pcontainers/pqueue_impl.pxi":21
 * 
 *     def __repr__(self):
 *         return u"PRawQueue(dbname='{}', dirname='{}')".format(             # <<<<<<<<<<<<<<
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 *         )
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_PRawQueue_dbname_dirname, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pcontainers/pqueue_impl.pxi":22
 *     def __repr__(self):
 *         return u"PRawQueue(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dbname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_unicode(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dirname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __pyx_f_11pcontainers_6_pdict_make_unicode(__pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_5);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":20
 *             self.ptr = NULL
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"PRawQueue(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":26
 * 
 *     property dirname:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return topy(self.ptr.get_dirname())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_7dirname_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_7dirname_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_7dirname___get__(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_7dirname___get__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/pqueue_impl.pxi":27
 *     property dirname:
 *         def __get__(self):
 *             return topy(self.ptr.get_dirname())             # <<<<<<<<<<<<<<
 * 
 *     property dbname:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_self->ptr->get_dirname()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":26
 * 
 *     property dirname:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return topy(self.ptr.get_dirname())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.dirname.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":30
 * 
 *     property dbname:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return topy(self.ptr.get_dbname())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_6dbname_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_6dbname_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_6dbname___get__(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_6dbname___get__(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pcontainers/pqueue_impl.pxi":31
 *     property dbname:
 *         def __get__(self):
 *             return topy(self.ptr.get_dbname())             # <<<<<<<<<<<<<<
 * 
 *     cpdef empty(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_self->ptr->get_dbname()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":30
 * 
 *     property dbname:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return topy(self.ptr.get_dbname())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.dbname.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":33
 *             return topy(self.ptr.get_dbname())
 * 
 *     cpdef empty(self):             # <<<<<<<<<<<<<<
 *         return self.ptr.empty()
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_9empty(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_empty(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  bool __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("empty", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_empty); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_9empty)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":34
 * 
 *     cpdef empty(self):
 *         return self.ptr.empty()             # <<<<<<<<<<<<<<
 * 
 *     cpdef qsize(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_5 = __pyx_v_self->ptr->empty();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":33
 *             return topy(self.ptr.get_dbname())
 * 
 *     cpdef empty(self):             # <<<<<<<<<<<<<<
 *         return self.ptr.empty()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.empty", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_9empty(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_9empty(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("empty (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_8empty(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_8empty(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("empty", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_empty(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.empty", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":36
 *         return self.ptr.empty()
 * 
 *     cpdef qsize(self):             # <<<<<<<<<<<<<<
 *         return self.ptr.size()
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_11qsize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_qsize(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  size_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("qsize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_qsize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_11qsize)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":37
 * 
 *     cpdef qsize(self):
 *         return self.ptr.size()             # <<<<<<<<<<<<<<
 * 
 *     cpdef full(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_5 = __pyx_v_self->ptr->size();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":36
 *         return self.ptr.empty()
 * 
 *     cpdef qsize(self):             # <<<<<<<<<<<<<<
 *         return self.ptr.size()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.qsize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_11qsize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_11qsize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("qsize (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_10qsize(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_10qsize(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("qsize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_qsize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.qsize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":39
 *         return self.ptr.size()
 * 
 *     cpdef full(self):             # <<<<<<<<<<<<<<
 *         return False
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_13full(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_full(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("full", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_full); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_13full)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":40
 * 
 *     cpdef full(self):
 *         return False             # <<<<<<<<<<<<<<
 * 
 *     cpdef clear(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_False);
  __pyx_r = Py_False;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":39
 *         return self.ptr.size()
 * 
 *     cpdef full(self):             # <<<<<<<<<<<<<<
 *         return False
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.full", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_13full(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_13full(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("full (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_12full(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_12full(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("full", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_full(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.full", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":42
 *         return False
 * 
 *     cpdef clear(self):             # <<<<<<<<<<<<<<
 *         self.ptr.clear()
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_15clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_clear(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_clear); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_15clear)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":43
 * 
 *     cpdef clear(self):
 *         self.ptr.clear()             # <<<<<<<<<<<<<<
 * 
 *     cpdef push_front(self, val):
 */
  try {
    __pyx_v_self->ptr->clear();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pcontainers/pqueue_impl.pxi":42
 *         return False
 * 
 *     cpdef clear(self):             # <<<<<<<<<<<<<<
 *         self.ptr.clear()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_15clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_15clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_14clear(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_14clear(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_clear(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":45
 *         self.ptr.clear()
 * 
 *     cpdef push_front(self, val):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_17push_front(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_push_front(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_val, int __pyx_skip_dispatch) {
  utils::PyBufferWrap __pyx_v_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  utils::PyBufferWrap __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_front", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_push_front); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_17push_front)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_val); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_val);
        __Pyx_GIVEREF(__pyx_v_val);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":46
 * 
 *     cpdef push_front(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.push_front(view.get_mdb_val())
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_6 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_view = boost::move(__pyx_t_6);

  /* "pcontainers/pqueue_impl.pxi":47
 *     cpdef push_front(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_front(view.get_mdb_val())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":48
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:
 *             self.ptr.push_front(view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     cpdef push_back(self, val):
 */
        try {
          __pyx_v_self->ptr->push_front(__pyx_v_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":47
 *     cpdef push_front(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_front(view.get_mdb_val())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":45
 *         self.ptr.clear()
 * 
 *     cpdef push_front(self, val):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.push_front", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_17push_front(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_17push_front(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_front (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_16push_front(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_16push_front(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_front", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_push_front(__pyx_v_self, __pyx_v_val, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.push_front", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":50
 *             self.ptr.push_front(view.get_mdb_val())
 * 
 *     cpdef push_back(self, val):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_19push_back(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_push_back(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_val, int __pyx_skip_dispatch) {
  utils::PyBufferWrap __pyx_v_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  utils::PyBufferWrap __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_back", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_push_back); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_19push_back)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_val); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_val);
        __Pyx_GIVEREF(__pyx_v_val);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":51
 * 
 *     cpdef push_back(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.push_back(view.get_mdb_val())
 */
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_val); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_6 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_view = boost::move(__pyx_t_6);

  /* "pcontainers/pqueue_impl.pxi":52
 *     cpdef push_back(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_back(view.get_mdb_val())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":53
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:
 *             self.ptr.push_back(view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     cpdef put(self, item, block=True, timeout=None):
 */
        try {
          __pyx_v_self->ptr->push_back(__pyx_v_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":52
 *     cpdef push_back(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_back(view.get_mdb_val())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":50
 *             self.ptr.push_front(view.get_mdb_val())
 * 
 *     cpdef push_back(self, val):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(make_utf8(val)))
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.push_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_19push_back(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_19push_back(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_back (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_18push_back(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_18push_back(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_back", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_push_back(__pyx_v_self, __pyx_v_val, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.push_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":55
 *             self.ptr.push_back(view.get_mdb_val())
 * 
 *     cpdef put(self, item, block=True, timeout=None):             # <<<<<<<<<<<<<<
 *         self.push_back(item)
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_21put(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_put(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_item, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_put *__pyx_optional_args) {
  PyObject *__pyx_v_block = ((PyObject *)Py_True);
  PyObject *__pyx_v_timeout = ((PyObject *)Py_None);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("put", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_block = __pyx_optional_args->block;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_timeout = __pyx_optional_args->timeout;
      }
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_put); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_21put)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_item);
      __Pyx_GIVEREF(__pyx_v_item);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_item);
      __Pyx_INCREF(__pyx_v_block);
      __Pyx_GIVEREF(__pyx_v_block);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_block);
      __Pyx_INCREF(__pyx_v_timeout);
      __Pyx_GIVEREF(__pyx_v_timeout);
      PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_timeout);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":56
 * 
 *     cpdef put(self, item, block=True, timeout=None):
 *         self.push_back(item)             # <<<<<<<<<<<<<<
 * 
 *     cpdef put_nowait(self, item):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self->__pyx_vtab)->push_back(__pyx_v_self, __pyx_v_item, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":55
 *             self.ptr.push_back(view.get_mdb_val())
 * 
 *     cpdef put(self, item, block=True, timeout=None):             # <<<<<<<<<<<<<<
 *         self.push_back(item)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.put", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_21put(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_21put(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_item = 0;
  PyObject *__pyx_v_block = 0;
  PyObject *__pyx_v_timeout = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("put (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_item,&__pyx_n_s_block,&__pyx_n_s_timeout,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)Py_True);
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_item)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_block);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_timeout);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "put") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_item = values[0];
    __pyx_v_block = values[1];
    __pyx_v_timeout = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("put", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.put", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_20put(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), __pyx_v_item, __pyx_v_block, __pyx_v_timeout);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_20put(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_block, PyObject *__pyx_v_timeout) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_put __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("put", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 2;
  __pyx_t_2.block = __pyx_v_block;
  __pyx_t_2.timeout = __pyx_v_timeout;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawQueue->put(__pyx_v_self, __pyx_v_item, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.put", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":58
 *         self.push_back(item)
 * 
 *     cpdef put_nowait(self, item):             # <<<<<<<<<<<<<<
 *         self.push_back(item)
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_23put_nowait(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_put_nowait(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_item, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("put_nowait", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_put_nowait); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_23put_nowait)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_item); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_item);
        __Pyx_GIVEREF(__pyx_v_item);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_item);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":59
 * 
 *     cpdef put_nowait(self, item):
 *         self.push_back(item)             # <<<<<<<<<<<<<<
 * 
 *     cpdef pop_back(self):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self->__pyx_vtab)->push_back(__pyx_v_self, __pyx_v_item, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":58
 *         self.push_back(item)
 * 
 *     cpdef put_nowait(self, item):             # <<<<<<<<<<<<<<
 *         self.push_back(item)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.put_nowait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_23put_nowait(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_23put_nowait(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("put_nowait (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_22put_nowait(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_22put_nowait(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("put_nowait", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_put_nowait(__pyx_v_self, __pyx_v_item, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.put_nowait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":61
 *         self.push_back(item)
 * 
 *     cpdef pop_back(self):             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_25pop_back(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_back(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  Bstrlib::CBString __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Bstrlib::CBString __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_back", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop_back); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_25pop_back)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":63
 *     cpdef pop_back(self):
 *         cdef CBString v
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = self.ptr.pop_back()
 *         return topy(v)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":64
 *         cdef CBString v
 *         with nogil:
 *             v = self.ptr.pop_back()             # <<<<<<<<<<<<<<
 *         return topy(v)
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->ptr->pop_back();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_v = __pyx_t_5;
      }

      /* "pcontainers/pqueue_impl.pxi":63
 *     cpdef pop_back(self):
 *         cdef CBString v
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = self.ptr.pop_back()
 *         return topy(v)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":65
 *         with nogil:
 *             v = self.ptr.pop_back()
 *         return topy(v)             # <<<<<<<<<<<<<<
 * 
 *     cpdef pop_front(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_v); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":61
 *         self.push_back(item)
 * 
 *     cpdef pop_back(self):             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.pop_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_25pop_back(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_25pop_back(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop_back (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_24pop_back(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_24pop_back(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_back", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_back(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.pop_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":67
 *         return topy(v)
 * 
 *     cpdef pop_front(self):             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_27pop_front(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_front(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  Bstrlib::CBString __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Bstrlib::CBString __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_front", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop_front); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_27pop_front)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":69
 *     cpdef pop_front(self):
 *         cdef CBString v
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = self.ptr.pop_front()
 *         return topy(v)
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":70
 *         cdef CBString v
 *         with nogil:
 *             v = self.ptr.pop_front()             # <<<<<<<<<<<<<<
 *         return topy(v)
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->ptr->pop_front();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_v = __pyx_t_5;
      }

      /* "pcontainers/pqueue_impl.pxi":69
 *     cpdef pop_front(self):
 *         cdef CBString v
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = self.ptr.pop_front()
 *         return topy(v)
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":71
 *         with nogil:
 *             v = self.ptr.pop_front()
 *         return topy(v)             # <<<<<<<<<<<<<<
 * 
 *     cpdef pop_all(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_v); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":67
 *         return topy(v)
 * 
 *     cpdef pop_front(self):             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.pop_front", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_27pop_front(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_27pop_front(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop_front (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_26pop_front(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_26pop_front(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_front", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_front(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.pop_front", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":73
 *         return topy(v)
 * 
 *     cpdef pop_all(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] vec
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_29pop_all(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_all(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<Bstrlib::CBString>  __pyx_v_vec;
  Bstrlib::CBString __pyx_v_val;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<Bstrlib::CBString>  __pyx_t_5;
  std::vector<Bstrlib::CBString> ::iterator __pyx_t_6;
  Bstrlib::CBString __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_all", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop_all); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_29pop_all)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":75
 *     cpdef pop_all(self):
 *         cdef vector[CBString] vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             vec = self.ptr.pop_all()
 *         return [topy(val) for val in vec]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":76
 *         cdef vector[CBString] vec
 *         with nogil:
 *             vec = self.ptr.pop_all()             # <<<<<<<<<<<<<<
 *         return [topy(val) for val in vec]
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->ptr->pop_all();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_vec = __pyx_t_5;
      }

      /* "pcontainers/pqueue_impl.pxi":75
 *     cpdef pop_all(self):
 *         cdef vector[CBString] vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             vec = self.ptr.pop_all()
 *         return [topy(val) for val in vec]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":77
 *         with nogil:
 *             vec = self.ptr.pop_all()
 *         return [topy(val) for val in vec]             # <<<<<<<<<<<<<<
 * 
 *     cpdef get(self, block=True, timeout=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_v_vec.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_vec.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_val = __pyx_t_7;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_val); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":73
 *         return topy(v)
 * 
 *     cpdef pop_all(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] vec
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.pop_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_29pop_all(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_29pop_all(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop_all (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_28pop_all(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_28pop_all(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_all", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_all(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.pop_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":79
 *         return [topy(val) for val in vec]
 * 
 *     cpdef get(self, block=True, timeout=None):             # <<<<<<<<<<<<<<
 *         cdef double delay
 *         cdef double t_out
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_31get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_get(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_get *__pyx_optional_args) {
  PyObject *__pyx_v_block = ((PyObject *)Py_True);
  PyObject *__pyx_v_timeout = ((PyObject *)Py_None);
  double __pyx_v_delay;
  double __pyx_v_t_out;
  double __pyx_v_endtime;
  double __pyx_v_remaining;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  double __pyx_t_13;
  double __pyx_t_14;
  double __pyx_t_15;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  double __pyx_t_19;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_block = __pyx_optional_args->block;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_timeout = __pyx_optional_args->timeout;
      }
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_31get)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_block);
      __Pyx_GIVEREF(__pyx_v_block);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_block);
      __Pyx_INCREF(__pyx_v_timeout);
      __Pyx_GIVEREF(__pyx_v_timeout);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_timeout);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":83
 *         cdef double t_out
 *         cdef double endtime
 *         if not block:             # <<<<<<<<<<<<<<
 *             return self.get_nowait()
 *         elif timeout is None:
 */
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_block); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_8 = ((!__pyx_t_7) != 0);
  if (__pyx_t_8) {

    /* "pcontainers/pqueue_impl.pxi":84
 *         cdef double endtime
 *         if not block:
 *             return self.get_nowait()             # <<<<<<<<<<<<<<
 *         elif timeout is None:
 *             # wait until there is an available element
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self->__pyx_vtab)->get_nowait(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pcontainers/pqueue_impl.pxi":83
 *         cdef double t_out
 *         cdef double endtime
 *         if not block:             # <<<<<<<<<<<<<<
 *             return self.get_nowait()
 *         elif timeout is None:
 */
  }

  /* "pcontainers/pqueue_impl.pxi":85
 *         if not block:
 *             return self.get_nowait()
 *         elif timeout is None:             # <<<<<<<<<<<<<<
 *             # wait until there is an available element
 *             delay = 0.0005
 */
  __pyx_t_8 = (__pyx_v_timeout == Py_None);
  __pyx_t_7 = (__pyx_t_8 != 0);
  if (__pyx_t_7) {

    /* "pcontainers/pqueue_impl.pxi":87
 *         elif timeout is None:
 *             # wait until there is an available element
 *             delay = 0.0005             # <<<<<<<<<<<<<<
 *             while True:
 *                 try:
 */
    __pyx_v_delay = 0.0005;

    /* "pcontainers/pqueue_impl.pxi":88
 *             # wait until there is an available element
 *             delay = 0.0005
 *             while True:             # <<<<<<<<<<<<<<
 *                 try:
 *                     return self.get_nowait()
 */
    while (1) {

      /* "pcontainers/pqueue_impl.pxi":89
 *             delay = 0.0005
 *             while True:
 *                 try:             # <<<<<<<<<<<<<<
 *                     return self.get_nowait()
 *                 except Empty:
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_11);
        /*try:*/ {

          /* "pcontainers/pqueue_impl.pxi":90
 *             while True:
 *                 try:
 *                     return self.get_nowait()             # <<<<<<<<<<<<<<
 *                 except Empty:
 *                     delay = min(delay * 2.0, 0.1)
 */
          __Pyx_XDECREF(__pyx_r);
          __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self->__pyx_vtab)->get_nowait(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_r = __pyx_t_1;
          __pyx_t_1 = 0;
          goto __pyx_L10_try_return;

          /* "pcontainers/pqueue_impl.pxi":89
 *             delay = 0.0005
 *             while True:
 *                 try:             # <<<<<<<<<<<<<<
 *                     return self.get_nowait()
 *                 except Empty:
 */
        }
        __pyx_L6_error:;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "pcontainers/pqueue_impl.pxi":91
 *                 try:
 *                     return self.get_nowait()
 *                 except Empty:             # <<<<<<<<<<<<<<
 *                     delay = min(delay * 2.0, 0.1)
 *                     sleep(delay)
 */
        __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_Empty); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_12 = PyErr_ExceptionMatches(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__pyx_t_12) {
          __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);

          /* "pcontainers/pqueue_impl.pxi":92
 *                     return self.get_nowait()
 *                 except Empty:
 *                     delay = min(delay * 2.0, 0.1)             # <<<<<<<<<<<<<<
 *                     sleep(delay)
 * 
 */
          __pyx_t_13 = 0.1;
          __pyx_t_14 = (__pyx_v_delay * 2.0);
          if (((__pyx_t_13 < __pyx_t_14) != 0)) {
            __pyx_t_15 = __pyx_t_13;
          } else {
            __pyx_t_15 = __pyx_t_14;
          }
          __pyx_v_delay = __pyx_t_15;

          /* "pcontainers/pqueue_impl.pxi":93
 *                 except Empty:
 *                     delay = min(delay * 2.0, 0.1)
 *                     sleep(delay)             # <<<<<<<<<<<<<<
 * 
 *         elif timeout < 0:
 */
          __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_sleep); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_16 = PyFloat_FromDouble(__pyx_v_delay); if (unlikely(!__pyx_t_16)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_17 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_17)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_17);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          if (!__pyx_t_17) {
            __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_16); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else {
            __pyx_t_18 = PyTuple_New(1+1); if (unlikely(!__pyx_t_18)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
            __Pyx_GOTREF(__pyx_t_18);
            __Pyx_GIVEREF(__pyx_t_17); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_17); __pyx_t_17 = NULL;
            __Pyx_GIVEREF(__pyx_t_16);
            PyTuple_SET_ITEM(__pyx_t_18, 0+1, __pyx_t_16);
            __pyx_t_16 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_18, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L7_exception_handled;
        }
        goto __pyx_L8_except_error;
        __pyx_L8_except_error:;

        /* "pcontainers/pqueue_impl.pxi":89
 *             delay = 0.0005
 *             while True:
 *                 try:             # <<<<<<<<<<<<<<
 *                     return self.get_nowait()
 *                 except Empty:
 */
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        goto __pyx_L1_error;
        __pyx_L10_try_return:;
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        goto __pyx_L0;
        __pyx_L7_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
      }
    }

    /* "pcontainers/pqueue_impl.pxi":85
 *         if not block:
 *             return self.get_nowait()
 *         elif timeout is None:             # <<<<<<<<<<<<<<
 *             # wait until there is an available element
 *             delay = 0.0005
 */
    goto __pyx_L3;
  }

  /* "pcontainers/pqueue_impl.pxi":95
 *                     sleep(delay)
 * 
 *         elif timeout < 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("'timeout' must be a non-negative number")
 *         else:
 */
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_timeout, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_7) {

    /* "pcontainers/pqueue_impl.pxi":96
 * 
 *         elif timeout < 0:
 *             raise ValueError("'timeout' must be a non-negative number")             # <<<<<<<<<<<<<<
 *         else:
 *             t_out = timeout
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pqueue_impl.pxi":95
 *                     sleep(delay)
 * 
 *         elif timeout < 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("'timeout' must be a non-negative number")
 *         else:
 */
  }

  /* "pcontainers/pqueue_impl.pxi":98
 *             raise ValueError("'timeout' must be a non-negative number")
 *         else:
 *             t_out = timeout             # <<<<<<<<<<<<<<
 *             # wait at maximum 'timeout' seconds
 *             endtime = c_time(NULL) + t_out
 */
  /*else*/ {
    __pyx_t_15 = __pyx_PyFloat_AsDouble(__pyx_v_timeout); if (unlikely((__pyx_t_15 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_t_out = __pyx_t_15;

    /* "pcontainers/pqueue_impl.pxi":100
 *             t_out = timeout
 *             # wait at maximum 'timeout' seconds
 *             endtime = c_time(NULL) + t_out             # <<<<<<<<<<<<<<
 *             delay = 0.0005
 *             while True:
 */
    __pyx_v_endtime = (time(NULL) + __pyx_v_t_out);

    /* "pcontainers/pqueue_impl.pxi":101
 *             # wait at maximum 'timeout' seconds
 *             endtime = c_time(NULL) + t_out
 *             delay = 0.0005             # <<<<<<<<<<<<<<
 *             while True:
 *                 try:
 */
    __pyx_v_delay = 0.0005;

    /* "pcontainers/pqueue_impl.pxi":102
 *             endtime = c_time(NULL) + t_out
 *             delay = 0.0005
 *             while True:             # <<<<<<<<<<<<<<
 *                 try:
 *                     return self.get_nowait()
 */
    while (1) {

      /* "pcontainers/pqueue_impl.pxi":103
 *             delay = 0.0005
 *             while True:
 *                 try:             # <<<<<<<<<<<<<<
 *                     return self.get_nowait()
 *                 except Empty:
 */
      {
        __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {

          /* "pcontainers/pqueue_impl.pxi":104
 *             while True:
 *                 try:
 *                     return self.get_nowait()             # <<<<<<<<<<<<<<
 *                 except Empty:
 *                     remaining = endtime - c_time(NULL)
 */
          __Pyx_XDECREF(__pyx_r);
          __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self->__pyx_vtab)->get_nowait(__pyx_v_self, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L18_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_r = __pyx_t_3;
          __pyx_t_3 = 0;
          goto __pyx_L22_try_return;

          /* "pcontainers/pqueue_impl.pxi":103
 *             delay = 0.0005
 *             while True:
 *                 try:             # <<<<<<<<<<<<<<
 *                     return self.get_nowait()
 *                 except Empty:
 */
        }
        __pyx_L18_error:;
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "pcontainers/pqueue_impl.pxi":105
 *                 try:
 *                     return self.get_nowait()
 *                 except Empty:             # <<<<<<<<<<<<<<
 *                     remaining = endtime - c_time(NULL)
 *                     if remaining <= 0.0:
 */
        __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_Empty); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L20_except_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_12 = PyErr_ExceptionMatches(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_12) {
          __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_2, &__pyx_t_1) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L20_except_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_1);

          /* "pcontainers/pqueue_impl.pxi":106
 *                     return self.get_nowait()
 *                 except Empty:
 *                     remaining = endtime - c_time(NULL)             # <<<<<<<<<<<<<<
 *                     if remaining <= 0.0:
 *                         raise
 */
          __pyx_v_remaining = (__pyx_v_endtime - time(NULL));

          /* "pcontainers/pqueue_impl.pxi":107
 *                 except Empty:
 *                     remaining = endtime - c_time(NULL)
 *                     if remaining <= 0.0:             # <<<<<<<<<<<<<<
 *                         raise
 *                     delay = min(delay * 2.0, remaining, 0.1)
 */
          __pyx_t_7 = ((__pyx_v_remaining <= 0.0) != 0);
          if (__pyx_t_7) {

            /* "pcontainers/pqueue_impl.pxi":108
 *                     remaining = endtime - c_time(NULL)
 *                     if remaining <= 0.0:
 *                         raise             # <<<<<<<<<<<<<<
 *                     delay = min(delay * 2.0, remaining, 0.1)
 *                     sleep(delay)
 */
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_1);
            __Pyx_ErrRestore(__pyx_t_3, __pyx_t_2, __pyx_t_1);
            __pyx_t_3 = 0; __pyx_t_2 = 0; __pyx_t_1 = 0; 
            {__pyx_filename = __pyx_f[3]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L20_except_error;}

            /* "pcontainers/pqueue_impl.pxi":107
 *                 except Empty:
 *                     remaining = endtime - c_time(NULL)
 *                     if remaining <= 0.0:             # <<<<<<<<<<<<<<
 *                         raise
 *                     delay = min(delay * 2.0, remaining, 0.1)
 */
          }

          /* "pcontainers/pqueue_impl.pxi":109
 *                     if remaining <= 0.0:
 *                         raise
 *                     delay = min(delay * 2.0, remaining, 0.1)             # <<<<<<<<<<<<<<
 *                     sleep(delay)
 * 
 */
          __pyx_t_15 = __pyx_v_remaining;
          __pyx_t_13 = 0.1;
          __pyx_t_14 = (__pyx_v_delay * 2.0);
          if (((__pyx_t_15 < __pyx_t_14) != 0)) {
            __pyx_t_19 = __pyx_t_15;
          } else {
            __pyx_t_19 = __pyx_t_14;
          }
          __pyx_t_14 = __pyx_t_19;
          if (((__pyx_t_13 < __pyx_t_14) != 0)) {
            __pyx_t_19 = __pyx_t_13;
          } else {
            __pyx_t_19 = __pyx_t_14;
          }
          __pyx_v_delay = __pyx_t_19;

          /* "pcontainers/pqueue_impl.pxi":110
 *                         raise
 *                     delay = min(delay * 2.0, remaining, 0.1)
 *                     sleep(delay)             # <<<<<<<<<<<<<<
 * 
 *     cpdef get_nowait(self):
 */
          __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_sleep); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L20_except_error;}
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_18 = PyFloat_FromDouble(__pyx_v_delay); if (unlikely(!__pyx_t_18)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L20_except_error;}
          __Pyx_GOTREF(__pyx_t_18);
          __pyx_t_16 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_16)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_16);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          if (!__pyx_t_16) {
            __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_18); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L20_except_error;}
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else {
            __pyx_t_17 = PyTuple_New(1+1); if (unlikely(!__pyx_t_17)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L20_except_error;}
            __Pyx_GOTREF(__pyx_t_17);
            __Pyx_GIVEREF(__pyx_t_16); PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_16); __pyx_t_16 = NULL;
            __Pyx_GIVEREF(__pyx_t_18);
            PyTuple_SET_ITEM(__pyx_t_17, 0+1, __pyx_t_18);
            __pyx_t_18 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_17, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L20_except_error;}
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          goto __pyx_L19_exception_handled;
        }
        goto __pyx_L20_except_error;
        __pyx_L20_except_error:;

        /* "pcontainers/pqueue_impl.pxi":103
 *             delay = 0.0005
 *             while True:
 *                 try:             # <<<<<<<<<<<<<<
 *                     return self.get_nowait()
 *                 except Empty:
 */
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_10, __pyx_t_9);
        goto __pyx_L1_error;
        __pyx_L22_try_return:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_10, __pyx_t_9);
        goto __pyx_L0;
        __pyx_L19_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_10, __pyx_t_9);
      }
    }
  }
  __pyx_L3:;

  /* "pcontainers/pqueue_impl.pxi":79
 *         return [topy(val) for val in vec]
 * 
 *     cpdef get(self, block=True, timeout=None):             # <<<<<<<<<<<<<<
 *         cdef double delay
 *         cdef double t_out
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_31get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_31get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_block = 0;
  PyObject *__pyx_v_timeout = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_block,&__pyx_n_s_timeout,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_True);
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_block);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_timeout);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_block = values[0];
    __pyx_v_timeout = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_30get(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), __pyx_v_block, __pyx_v_timeout);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_30get(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_block, PyObject *__pyx_v_timeout) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_get __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 2;
  __pyx_t_2.block = __pyx_v_block;
  __pyx_t_2.timeout = __pyx_v_timeout;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawQueue->get(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":112
 *                     sleep(delay)
 * 
 *     cpdef get_nowait(self):             # <<<<<<<<<<<<<<
 *         try:
 *             return self.pop_front()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_33get_nowait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_get_nowait(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_nowait", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_nowait); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_33get_nowait)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":113
 * 
 *     cpdef get_nowait(self):
 *         try:             # <<<<<<<<<<<<<<
 *             return self.pop_front()
 *         except EmptyDatabase:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "pcontainers/pqueue_impl.pxi":114
 *     cpdef get_nowait(self):
 *         try:
 *             return self.pop_front()             # <<<<<<<<<<<<<<
 *         except EmptyDatabase:
 *             raise Empty()
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self->__pyx_vtab)->pop_front(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L7_try_return;

      /* "pcontainers/pqueue_impl.pxi":113
 * 
 *     cpdef get_nowait(self):
 *         try:             # <<<<<<<<<<<<<<
 *             return self.pop_front()
 *         except EmptyDatabase:
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/pqueue_impl.pxi":115
 *         try:
 *             return self.pop_front()
 *         except EmptyDatabase:             # <<<<<<<<<<<<<<
 *             raise Empty()
 * 
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_EmptyDatabase); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyErr_ExceptionMatches(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_8) {
      __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.get_nowait", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "pcontainers/pqueue_impl.pxi":116
 *             return self.pop_front()
 *         except EmptyDatabase:
 *             raise Empty()             # <<<<<<<<<<<<<<
 * 
 *     def push_front_many(self, vals):
 */
      __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_Empty); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      if (__pyx_t_10) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_10); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      } else {
        __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_9); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      }
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[3]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "pcontainers/pqueue_impl.pxi":113
 * 
 *     cpdef get_nowait(self):
 *         try:             # <<<<<<<<<<<<<<
 *             return self.pop_front()
 *         except EmptyDatabase:
 */
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L0;
  }

  /* "pcontainers/pqueue_impl.pxi":112
 *                     sleep(delay)
 * 
 *     cpdef get_nowait(self):             # <<<<<<<<<<<<<<
 *         try:
 *             return self.pop_front()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.get_nowait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_33get_nowait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_33get_nowait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_nowait (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_32get_nowait(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_32get_nowait(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_nowait", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_get_nowait(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.get_nowait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":118
 *             raise Empty()
 * 
 *     def push_front_many(self, vals):             # <<<<<<<<<<<<<<
 *         vals = iter(vals)
 *         #cdef PyObject* v = <PyObject*> vals
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_35push_front_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_35push_front_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_front_many (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_34push_front_many(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), ((PyObject *)__pyx_v_vals));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_34push_front_many(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_vals) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_front_many", 0);
  __Pyx_INCREF(__pyx_v_vals);

  /* "pcontainers/pqueue_impl.pxi":119
 * 
 *     def push_front_many(self, vals):
 *         vals = iter(vals)             # <<<<<<<<<<<<<<
 *         #cdef PyObject* v = <PyObject*> vals
 *         with nogil:
 */
  __pyx_t_1 = PyObject_GetIter(__pyx_v_vals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_vals, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":121
 *         vals = iter(vals)
 *         #cdef PyObject* v = <PyObject*> vals
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_front(PyStringInputIterator(vals), PyStringInputIterator())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":122
 *         #cdef PyObject* v = <PyObject*> vals
 *         with nogil:
 *             self.ptr.push_front(PyStringInputIterator(vals), PyStringInputIterator())             # <<<<<<<<<<<<<<
 * 
 *     def push_back_many(self, vals):
 */
        try {
          __pyx_v_self->ptr->push_front(quiet::PyStringInputIterator(__pyx_v_vals), quiet::PyStringInputIterator());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":121
 *         vals = iter(vals)
 *         #cdef PyObject* v = <PyObject*> vals
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_front(PyStringInputIterator(vals), PyStringInputIterator())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":118
 *             raise Empty()
 * 
 *     def push_front_many(self, vals):             # <<<<<<<<<<<<<<
 *         vals = iter(vals)
 *         #cdef PyObject* v = <PyObject*> vals
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.push_front_many", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_vals);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":124
 *             self.ptr.push_front(PyStringInputIterator(vals), PyStringInputIterator())
 * 
 *     def push_back_many(self, vals):             # <<<<<<<<<<<<<<
 *         vals = iter(vals)
 *         #cdef PyObject* v = <PyObject*> vals
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_37push_back_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_37push_back_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_back_many (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_36push_back_many(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), ((PyObject *)__pyx_v_vals));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_36push_back_many(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_vals) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_back_many", 0);
  __Pyx_INCREF(__pyx_v_vals);

  /* "pcontainers/pqueue_impl.pxi":125
 * 
 *     def push_back_many(self, vals):
 *         vals = iter(vals)             # <<<<<<<<<<<<<<
 *         #cdef PyObject* v = <PyObject*> vals
 *         with nogil:
 */
  __pyx_t_1 = PyObject_GetIter(__pyx_v_vals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_vals, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":127
 *         vals = iter(vals)
 *         #cdef PyObject* v = <PyObject*> vals
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_back(PyStringInputIterator(vals), PyStringInputIterator())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":128
 *         #cdef PyObject* v = <PyObject*> vals
 *         with nogil:
 *             self.ptr.push_back(PyStringInputIterator(vals), PyStringInputIterator())             # <<<<<<<<<<<<<<
 * 
 *     def push_many(self, vals):
 */
        try {
          __pyx_v_self->ptr->push_back(quiet::PyStringInputIterator(__pyx_v_vals), quiet::PyStringInputIterator());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":127
 *         vals = iter(vals)
 *         #cdef PyObject* v = <PyObject*> vals
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_back(PyStringInputIterator(vals), PyStringInputIterator())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":124
 *             self.ptr.push_front(PyStringInputIterator(vals), PyStringInputIterator())
 * 
 *     def push_back_many(self, vals):             # <<<<<<<<<<<<<<
 *         vals = iter(vals)
 *         #cdef PyObject* v = <PyObject*> vals
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.push_back_many", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_vals);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":130
 *             self.ptr.push_back(PyStringInputIterator(vals), PyStringInputIterator())
 * 
 *     def push_many(self, vals):             # <<<<<<<<<<<<<<
 *         self.push_back_many(vals)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_39push_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_39push_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_many (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_38push_many(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), ((PyObject *)__pyx_v_vals));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_38push_many(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_vals) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_many", 0);

  /* "pcontainers/pqueue_impl.pxi":131
 * 
 *     def push_many(self, vals):
 *         self.push_back_many(vals)             # <<<<<<<<<<<<<<
 * 
 *     cpdef transform_values(self, unary_funct):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_push_back_many); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_vals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_vals);
    __Pyx_GIVEREF(__pyx_v_vals);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_vals);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":130
 *             self.ptr.push_back(PyStringInputIterator(vals), PyStringInputIterator())
 * 
 *     def push_many(self, vals):             # <<<<<<<<<<<<<<
 *         self.push_back_many(vals)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.push_many", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":133
 *         self.push_back_many(vals)
 * 
 *     cpdef transform_values(self, unary_funct):             # <<<<<<<<<<<<<<
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_41transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_funct); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_transform_values(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_unary_funct, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transform_values", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transform_values); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_41transform_values)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_unary_funct); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_unary_funct);
        __Pyx_GIVEREF(__pyx_v_unary_funct);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_unary_funct);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":135
 *     cpdef transform_values(self, unary_funct):
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.transform_values(make_unary_functor(unary_funct))
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":136
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:
 *             self.ptr.transform_values(make_unary_functor(unary_funct))             # <<<<<<<<<<<<<<
 * 
 *     cpdef remove_if(self, unary_pred):
 */
        try {
          __pyx_v_self->ptr->transform_values(quiet::PyFunctor::make_unary_functor(__pyx_v_unary_funct));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":135
 *     cpdef transform_values(self, unary_funct):
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.transform_values(make_unary_functor(unary_funct))
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":133
 *         self.push_back_many(vals)
 * 
 *     cpdef transform_values(self, unary_funct):             # <<<<<<<<<<<<<<
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.transform_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_41transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_funct); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_41transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_funct) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transform_values (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_40transform_values(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), ((PyObject *)__pyx_v_unary_funct));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_40transform_values(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_unary_funct) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transform_values", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_transform_values(__pyx_v_self, __pyx_v_unary_funct, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.transform_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":138
 *             self.ptr.transform_values(make_unary_functor(unary_funct))
 * 
 *     cpdef remove_if(self, unary_pred):             # <<<<<<<<<<<<<<
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_43remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_pred); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_remove_if(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_unary_pred, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_if", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove_if); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_43remove_if)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_unary_pred); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_unary_pred);
        __Pyx_GIVEREF(__pyx_v_unary_pred);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_unary_pred);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":140
 *     cpdef remove_if(self, unary_pred):
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":141
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))             # <<<<<<<<<<<<<<
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 */
        try {
          __pyx_v_self->ptr->remove_if(quiet::PyPredicate::make_unary_predicate(__pyx_v_unary_pred));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":140
 *     cpdef remove_if(self, unary_pred):
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":138
 *             self.ptr.transform_values(make_unary_functor(unary_funct))
 * 
 *     cpdef remove_if(self, unary_pred):             # <<<<<<<<<<<<<<
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.remove_if", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_43remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_pred); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_43remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_pred) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_if (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_42remove_if(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), ((PyObject *)__pyx_v_unary_pred));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_42remove_if(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_unary_pred) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_if", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_remove_if(__pyx_v_self, __pyx_v_unary_pred, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.remove_if", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":143
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PRawQueue):
 *             raise TypeError()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_45move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_move_to(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to *__pyx_optional_args) {
  Py_ssize_t __pyx_v_chunk_size = ((Py_ssize_t)-1L);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_chunk_size = __pyx_optional_args->chunk_size;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_move_to); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_45move_to)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_chunk_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":144
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawQueue):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         with nogil:
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PRawQueue); 
  __pyx_t_9 = ((!(__pyx_t_8 != 0)) != 0);
  if (__pyx_t_9) {

    /* "pcontainers/pqueue_impl.pxi":145
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawQueue):
 *             raise TypeError()             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.move_to(deref((<PRawQueue> other).ptr), chunk_size)
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_TypeError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pqueue_impl.pxi":144
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PRawQueue):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         with nogil:
 */
  }

  /* "pcontainers/pqueue_impl.pxi":146
 *         if not isinstance(other, PRawQueue):
 *             raise TypeError()
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.move_to(deref((<PRawQueue> other).ptr), chunk_size)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":147
 *             raise TypeError()
 *         with nogil:
 *             self.ptr.move_to(deref((<PRawQueue> other).ptr), chunk_size)             # <<<<<<<<<<<<<<
 * 
 *     cpdef remove_duplicates(self):
 */
        try {
          __pyx_v_self->ptr->move_to((*((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_other)->ptr), __pyx_v_chunk_size);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L5_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":146
 *         if not isinstance(other, PRawQueue):
 *             raise TypeError()
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.move_to(deref((<PRawQueue> other).ptr), chunk_size)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L5_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L6:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":143
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PRawQueue):
 *             raise TypeError()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_45move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_45move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_other = 0;
  Py_ssize_t __pyx_v_chunk_size;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_to (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_other,&__pyx_n_s_chunk_size,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_other)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_chunk_size);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move_to") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_other = values[0];
    if (values[1]) {
      __pyx_v_chunk_size = PyInt_AsSsize_t(values[1]); if (unlikely((__pyx_v_chunk_size == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_chunk_size = ((Py_ssize_t)-1L);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move_to", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_44move_to(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), __pyx_v_other, __pyx_v_chunk_size);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_44move_to(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.chunk_size = __pyx_v_chunk_size;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PRawQueue->move_to(__pyx_v_self, __pyx_v_other, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":149
 *             self.ptr.move_to(deref((<PRawQueue> other).ptr), chunk_size)
 * 
 *     cpdef remove_duplicates(self):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_duplicates()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_47remove_duplicates(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_9PRawQueue_remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_duplicates", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove_duplicates); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_47remove_duplicates)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":150
 * 
 *     cpdef remove_duplicates(self):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_duplicates()
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":151
 *     cpdef remove_duplicates(self):
 *         with nogil:
 *             self.ptr.remove_duplicates()             # <<<<<<<<<<<<<<
 * 
 * 
 */
        try {
          __pyx_v_self->ptr->remove_duplicates();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":150
 * 
 *     cpdef remove_duplicates(self):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_duplicates()
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":149
 *             self.ptr.move_to(deref((<PRawQueue> other).ptr), chunk_size)
 * 
 *     cpdef remove_duplicates(self):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.remove_duplicates()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.remove_duplicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_47remove_duplicates(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_9PRawQueue_47remove_duplicates(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_duplicates (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_9PRawQueue_46remove_duplicates(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_9PRawQueue_46remove_duplicates(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_duplicates", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_9PRawQueue_remove_duplicates(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PRawQueue.remove_duplicates", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":155
 * 
 * cdef class PQueue(PRawQueue):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_6PQueue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_6PQueue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_dirname = 0;
  CYTHON_UNUSED PyObject *__pyx_v_dbname = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_value_chain,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[3] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[2]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue___cinit__(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_6PQueue___cinit__(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dirname, CYTHON_UNUSED PyObject *__pyx_v_dbname, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pcontainers/pqueue_impl.pxi":156
 * cdef class PQueue(PRawQueue):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_value_chain)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {
    __Pyx_INCREF(((PyObject *)__pyx_v_value_chain));
    __pyx_t_1 = ((PyObject *)__pyx_v_value_chain);
  } else {
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PickleSerializer), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_4, 1, Py_None);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_4, 2, Py_None);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_Chain), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->value_chain);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->value_chain));
  __pyx_v_self->value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":155
 * 
 * cdef class PQueue(PRawQueue):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":158
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         super(PQueue, self).__init__(dirname, dbname, opts)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_6PQueue_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_6PQueue_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_dirname = 0;
  PyObject *__pyx_v_dbname = 0;
  struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts = 0;
  CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dirname,&__pyx_n_s_dbname,&__pyx_n_s_opts,&__pyx_n_s_value_chain,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)Py_None);
    values[3] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dirname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dbname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_opts);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dirname = values[0];
    __pyx_v_dbname = values[1];
    __pyx_v_opts = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)values[2]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_opts), __pyx_ptype_11pcontainers_6_pdict_LmdbOptions, 1, "opts", 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_2__init__(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), __pyx_v_dirname, __pyx_v_dbname, __pyx_v_opts, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_6PQueue_2__init__(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_dirname, PyObject *__pyx_v_dbname, struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *__pyx_v_opts, CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/pqueue_impl.pxi":159
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):
 *         super(PQueue, self).__init__(dirname, dbname, opts)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(3+__pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_dirname);
  __Pyx_GIVEREF(__pyx_v_dirname);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_dirname);
  __Pyx_INCREF(__pyx_v_dbname);
  __Pyx_GIVEREF(__pyx_v_dbname);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_dbname);
  __Pyx_INCREF(((PyObject *)__pyx_v_opts));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_opts));
  PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_4, ((PyObject *)__pyx_v_opts));
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":158
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 * 
 *     def __init__(self, dirname, dbname, LmdbOptions opts=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         super(PQueue, self).__init__(dirname, dbname, opts)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":161
 *         super(PQueue, self).__init__(dirname, dbname, opts)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"PQueue(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_4__repr__(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_4__repr__(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "pcontainers/pqueue_impl.pxi":162
 * 
 *     def __repr__(self):
 *         return u"PQueue(dbname='{}', dirname='{}')".format(             # <<<<<<<<<<<<<<
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 *         )
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_PQueue_dbname_dirname, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pcontainers/pqueue_impl.pxi":163
 *     def __repr__(self):
 *         return u"PQueue(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dbname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __pyx_f_11pcontainers_6_pdict_make_unicode(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dirname); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __pyx_f_11pcontainers_6_pdict_make_unicode(__pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_5);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":161
 *         super(PQueue, self).__init__(dirname, dbname, opts)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return u"PQueue(dbname='{}', dirname='{}')".format(
 *             make_unicode(self.dbname), make_unicode(self.dirname)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":166
 *         )
 * 
 *     cpdef push_front(self, val):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_7push_front(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_push_front(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_val, int __pyx_skip_dispatch) {
  utils::PyBufferWrap __pyx_v_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  utils::PyBufferWrap __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_front", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_push_front); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_7push_front)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_val); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_val);
        __Pyx_GIVEREF(__pyx_v_val);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":167
 * 
 *     cpdef push_front(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.push_front(view.get_mdb_val())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_v_val, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_6 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_view = boost::move(__pyx_t_6);

  /* "pcontainers/pqueue_impl.pxi":168
 *     cpdef push_front(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_front(view.get_mdb_val())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":169
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:
 *             self.ptr.push_front(view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     cpdef push_back(self, val):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->push_front(__pyx_v_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":168
 *     cpdef push_front(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_front(view.get_mdb_val())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":166
 *         )
 * 
 *     cpdef push_front(self, val):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.push_front", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_7push_front(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_7push_front(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_front (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_6push_front(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_6push_front(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_front", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6PQueue_push_front(__pyx_v_self, __pyx_v_val, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.push_front", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":171
 *             self.ptr.push_front(view.get_mdb_val())
 * 
 *     cpdef push_back(self, val):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_9push_back(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_push_back(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_val, int __pyx_skip_dispatch) {
  utils::PyBufferWrap __pyx_v_view;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  utils::PyBufferWrap __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_back", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_push_back); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_9push_back)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_val); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_val);
        __Pyx_GIVEREF(__pyx_v_val);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":172
 * 
 *     cpdef push_back(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.push_back(view.get_mdb_val())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_v_val, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_6 = utils::PyBufferWrap(__pyx_t_1);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_view = boost::move(__pyx_t_6);

  /* "pcontainers/pqueue_impl.pxi":173
 *     cpdef push_back(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_back(view.get_mdb_val())
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":174
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:
 *             self.ptr.push_back(view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *     cpdef pop_back(self):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->push_back(__pyx_v_view.get_mdb_val());
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":173
 *     cpdef push_back(self, val):
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.push_back(view.get_mdb_val())
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":171
 *             self.ptr.push_front(view.get_mdb_val())
 * 
 *     cpdef push_back(self, val):             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(self.value_chain.dumps(val)))
 *         with nogil:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.push_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_9push_back(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_9push_back(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_back (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_8push_back(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_8push_back(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_back", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6PQueue_push_back(__pyx_v_self, __pyx_v_val, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.push_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":176
 *             self.ptr.push_back(view.get_mdb_val())
 * 
 *     cpdef pop_back(self):             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_11pop_back(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_pop_back(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  Bstrlib::CBString __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Bstrlib::CBString __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_back", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop_back); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_11pop_back)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":178
 *     cpdef pop_back(self):
 *         cdef CBString v
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = self.ptr.pop_back()
 *         return self.value_chain.loads(topy(v))
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":179
 *         cdef CBString v
 *         with nogil:
 *             v = self.ptr.pop_back()             # <<<<<<<<<<<<<<
 *         return self.value_chain.loads(topy(v))
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->__pyx_base.ptr->pop_back();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_v = __pyx_t_5;
      }

      /* "pcontainers/pqueue_impl.pxi":178
 *     cpdef pop_back(self):
 *         cdef CBString v
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = self.ptr.pop_back()
 *         return self.value_chain.loads(topy(v))
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":180
 *         with nogil:
 *             v = self.ptr.pop_back()
 *         return self.value_chain.loads(topy(v))             # <<<<<<<<<<<<<<
 * 
 *     cpdef pop_front(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_v); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":176
 *             self.ptr.push_back(view.get_mdb_val())
 * 
 *     cpdef pop_back(self):             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.pop_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_11pop_back(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_11pop_back(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop_back (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_10pop_back(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_10pop_back(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_back", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6PQueue_pop_back(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.pop_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":182
 *         return self.value_chain.loads(topy(v))
 * 
 *     cpdef pop_front(self):             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_13pop_front(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_pop_front(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  Bstrlib::CBString __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Bstrlib::CBString __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_front", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop_front); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_13pop_front)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":184
 *     cpdef pop_front(self):
 *         cdef CBString v
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = self.ptr.pop_front()
 *         return self.value_chain.loads(topy(v))
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":185
 *         cdef CBString v
 *         with nogil:
 *             v = self.ptr.pop_front()             # <<<<<<<<<<<<<<
 *         return self.value_chain.loads(topy(v))
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->__pyx_base.ptr->pop_front();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_v = __pyx_t_5;
      }

      /* "pcontainers/pqueue_impl.pxi":184
 *     cpdef pop_front(self):
 *         cdef CBString v
 *         with nogil:             # <<<<<<<<<<<<<<
 *             v = self.ptr.pop_front()
 *         return self.value_chain.loads(topy(v))
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":186
 *         with nogil:
 *             v = self.ptr.pop_front()
 *         return self.value_chain.loads(topy(v))             # <<<<<<<<<<<<<<
 * 
 *     cpdef pop_all(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_v); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":182
 *         return self.value_chain.loads(topy(v))
 * 
 *     cpdef pop_front(self):             # <<<<<<<<<<<<<<
 *         cdef CBString v
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.pop_front", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_13pop_front(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_13pop_front(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop_front (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_12pop_front(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_12pop_front(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_front", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6PQueue_pop_front(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.pop_front", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":188
 *         return self.value_chain.loads(topy(v))
 * 
 *     cpdef pop_all(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] vec
 *         with nogil:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_15pop_all(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_pop_all(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<Bstrlib::CBString>  __pyx_v_vec;
  Bstrlib::CBString __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<Bstrlib::CBString>  __pyx_t_5;
  std::vector<Bstrlib::CBString> ::iterator __pyx_t_6;
  Bstrlib::CBString __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_all", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop_all); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_15pop_all)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":190
 *     cpdef pop_all(self):
 *         cdef vector[CBString] vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             vec = self.ptr.pop_all()
 *         return [self.value_chain.loads(topy(v)) for v in vec]
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":191
 *         cdef vector[CBString] vec
 *         with nogil:
 *             vec = self.ptr.pop_all()             # <<<<<<<<<<<<<<
 *         return [self.value_chain.loads(topy(v)) for v in vec]
 * 
 */
        try {
          __pyx_t_5 = __pyx_v_self->__pyx_base.ptr->pop_all();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
        __pyx_v_vec = __pyx_t_5;
      }

      /* "pcontainers/pqueue_impl.pxi":190
 *     cpdef pop_all(self):
 *         cdef vector[CBString] vec
 *         with nogil:             # <<<<<<<<<<<<<<
 *             vec = self.ptr.pop_all()
 *         return [self.value_chain.loads(topy(v)) for v in vec]
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":192
 *         with nogil:
 *             vec = self.ptr.pop_all()
 *         return [self.value_chain.loads(topy(v)) for v in vec]             # <<<<<<<<<<<<<<
 * 
 *     def push_front_many(self, vals):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_v_vec.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_vec.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_v = __pyx_t_7;
    __pyx_t_2 = __pyx_f_11pcontainers_6_pdict_topy(__pyx_v_v); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->value_chain), __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_3))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/pqueue_impl.pxi":188
 *         return self.value_chain.loads(topy(v))
 * 
 *     cpdef pop_all(self):             # <<<<<<<<<<<<<<
 *         cdef vector[CBString] vec
 *         with nogil:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.pop_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_15pop_all(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_15pop_all(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop_all (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_14pop_all(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_14pop_all(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop_all", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6PQueue_pop_all(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.pop_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":194
 *         return [self.value_chain.loads(topy(v)) for v in vec]
 * 
 *     def push_front_many(self, vals):             # <<<<<<<<<<<<<<
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_front_many(values_iter)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_17push_front_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_17push_front_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_front_many (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_16push_front_many(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), ((PyObject *)__pyx_v_vals));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_6PQueue_15push_front_many_2generator11(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pqueue_impl.pxi":195
 * 
 *     def push_front_many(self, vals):
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)             # <<<<<<<<<<<<<<
 *         super(PQueue, self).push_front_many(values_iter)
 * 
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_15push_front_many_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_6PQueue_15push_front_many_2generator11, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_push_front_many_locals_genexpr); if (unlikely(!gen)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.push_front_many.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_6PQueue_15push_front_many_2generator11(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals)) { __Pyx_RaiseClosureNameError("vals"); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_val);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_val, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
    __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->value_chain), __pyx_cur_scope->__pyx_v_val, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_tobytes); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    __Pyx_XGIVEREF(__pyx_t_1);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":194
 *         return [self.value_chain.loads(topy(v)) for v in vec]
 * 
 *     def push_front_many(self, vals):             # <<<<<<<<<<<<<<
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_front_many(values_iter)
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_16push_front_many(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_vals) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *__pyx_cur_scope;
  PyObject *__pyx_v_values_iter = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_front_many", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_vals = __pyx_v_vals;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_vals);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_vals);

  /* "pcontainers/pqueue_impl.pxi":195
 * 
 *     def push_front_many(self, vals):
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)             # <<<<<<<<<<<<<<
 *         super(PQueue, self).push_front_many(values_iter)
 * 
 */
  __pyx_t_1 = __pyx_pf_11pcontainers_6_pdict_6PQueue_15push_front_many_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_values_iter = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":196
 *     def push_front_many(self, vals):
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_front_many(values_iter)             # <<<<<<<<<<<<<<
 * 
 *     def push_back_many(self, vals):
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_cur_scope->__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_push_front_many); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_values_iter); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_values_iter);
    __Pyx_GIVEREF(__pyx_v_values_iter);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_values_iter);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":194
 *         return [self.value_chain.loads(topy(v)) for v in vec]
 * 
 *     def push_front_many(self, vals):             # <<<<<<<<<<<<<<
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_front_many(values_iter)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.push_front_many", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_values_iter);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":198
 *         super(PQueue, self).push_front_many(values_iter)
 * 
 *     def push_back_many(self, vals):             # <<<<<<<<<<<<<<
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_back_many(values_iter)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_19push_back_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_19push_back_many(PyObject *__pyx_v_self, PyObject *__pyx_v_vals) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("push_back_many (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_18push_back_many(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), ((PyObject *)__pyx_v_vals));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_6PQueue_14push_back_many_2generator12(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/pqueue_impl.pxi":199
 * 
 *     def push_back_many(self, vals):
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)             # <<<<<<<<<<<<<<
 *         super(PQueue, self).push_back_many(values_iter)
 * 
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_14push_back_many_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_6PQueue_14push_back_many_2generator12, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_push_back_many_locals_genexpr); if (unlikely(!gen)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.push_back_many.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_6PQueue_14push_back_many_2generator12(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals)) { __Pyx_RaiseClosureNameError("vals"); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_vals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_val);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_val, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
    __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self->value_chain), __pyx_cur_scope->__pyx_v_val, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_tobytes); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    __Pyx_XGIVEREF(__pyx_t_1);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":198
 *         super(PQueue, self).push_front_many(values_iter)
 * 
 *     def push_back_many(self, vals):             # <<<<<<<<<<<<<<
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_back_many(values_iter)
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_18push_back_many(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_vals) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *__pyx_cur_scope;
  PyObject *__pyx_v_values_iter = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("push_back_many", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_vals = __pyx_v_vals;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_vals);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_vals);

  /* "pcontainers/pqueue_impl.pxi":199
 * 
 *     def push_back_many(self, vals):
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)             # <<<<<<<<<<<<<<
 *         super(PQueue, self).push_back_many(values_iter)
 * 
 */
  __pyx_t_1 = __pyx_pf_11pcontainers_6_pdict_6PQueue_14push_back_many_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_values_iter = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":200
 *     def push_back_many(self, vals):
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_back_many(values_iter)             # <<<<<<<<<<<<<<
 * 
 *     cpdef transform_values(self, unary_funct):
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PQueue));
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_cur_scope->__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_push_back_many); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_values_iter); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_values_iter);
    __Pyx_GIVEREF(__pyx_v_values_iter);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_values_iter);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":198
 *         super(PQueue, self).push_front_many(values_iter)
 * 
 *     def push_back_many(self, vals):             # <<<<<<<<<<<<<<
 *         values_iter = (self.value_chain.dumps(val).tobytes() for val in vals)
 *         super(PQueue, self).push_back_many(values_iter)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.push_back_many", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_values_iter);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":202
 *         super(PQueue, self).push_back_many(values_iter)
 * 
 *     cpdef transform_values(self, unary_funct):             # <<<<<<<<<<<<<<
 *         unary_funct = _adapt_unary_functor(unary_funct, self.secret_key)
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_21transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_funct); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_transform_values(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_unary_funct, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transform_values", 0);
  __Pyx_INCREF(__pyx_v_unary_funct);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transform_values); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_21transform_values)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_unary_funct); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_unary_funct);
        __Pyx_GIVEREF(__pyx_v_unary_funct);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_unary_funct);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":203
 * 
 *     cpdef transform_values(self, unary_funct):
 *         unary_funct = _adapt_unary_functor(unary_funct, self.secret_key)             # <<<<<<<<<<<<<<
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_adapt_unary_functor); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_unary_funct);
  __Pyx_GIVEREF(__pyx_v_unary_funct);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_v_unary_funct);
  __Pyx_INCREF(__pyx_v_self->secret_key);
  __Pyx_GIVEREF(__pyx_v_self->secret_key);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_v_self->secret_key);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_unary_funct, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":205
 *         unary_funct = _adapt_unary_functor(unary_funct, self.secret_key)
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.transform_values(make_unary_functor(unary_funct))
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":206
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:
 *             self.ptr.transform_values(make_unary_functor(unary_funct))             # <<<<<<<<<<<<<<
 * 
 *     cpdef remove_if(self, unary_pred):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->transform_values(quiet::PyFunctor::make_unary_functor(__pyx_v_unary_funct));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":205
 *         unary_funct = _adapt_unary_functor(unary_funct, self.secret_key)
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.transform_values(make_unary_functor(unary_funct))
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":202
 *         super(PQueue, self).push_back_many(values_iter)
 * 
 *     cpdef transform_values(self, unary_funct):             # <<<<<<<<<<<<<<
 *         unary_funct = _adapt_unary_functor(unary_funct, self.secret_key)
 *         #cdef PyObject* obj = <PyObject*> unary_funct
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.transform_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_unary_funct);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_21transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_funct); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_21transform_values(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_funct) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transform_values (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_20transform_values(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), ((PyObject *)__pyx_v_unary_funct));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_20transform_values(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_unary_funct) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transform_values", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6PQueue_transform_values(__pyx_v_self, __pyx_v_unary_funct, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.transform_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":208
 *             self.ptr.transform_values(make_unary_functor(unary_funct))
 * 
 *     cpdef remove_if(self, unary_pred):             # <<<<<<<<<<<<<<
 *         unary_pred = _adapt_unary_predicate(unary_pred, self.secret_key)
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_23remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_pred); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_remove_if(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_unary_pred, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_if", 0);
  __Pyx_INCREF(__pyx_v_unary_pred);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_remove_if); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_23remove_if)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_unary_pred); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_unary_pred);
        __Pyx_GIVEREF(__pyx_v_unary_pred);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_unary_pred);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":209
 * 
 *     cpdef remove_if(self, unary_pred):
 *         unary_pred = _adapt_unary_predicate(unary_pred, self.secret_key)             # <<<<<<<<<<<<<<
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_adapt_unary_predicate); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_unary_pred);
  __Pyx_GIVEREF(__pyx_v_unary_pred);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_v_unary_pred);
  __Pyx_INCREF(__pyx_v_self->secret_key);
  __Pyx_GIVEREF(__pyx_v_self->secret_key);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_v_self->secret_key);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_unary_pred, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/pqueue_impl.pxi":211
 *         unary_pred = _adapt_unary_predicate(unary_pred, self.secret_key)
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":212
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))             # <<<<<<<<<<<<<<
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 */
        try {
          __pyx_v_self->__pyx_base.ptr->remove_if(quiet::PyPredicate::make_unary_predicate(__pyx_v_unary_pred));
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":211
 *         unary_pred = _adapt_unary_predicate(unary_pred, self.secret_key)
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":208
 *             self.ptr.transform_values(make_unary_functor(unary_funct))
 * 
 *     cpdef remove_if(self, unary_pred):             # <<<<<<<<<<<<<<
 *         unary_pred = _adapt_unary_predicate(unary_pred, self.secret_key)
 *         #cdef PyObject* obj = <PyObject*> unary_pred
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.remove_if", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_unary_pred);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_23remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_pred); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_23remove_if(PyObject *__pyx_v_self, PyObject *__pyx_v_unary_pred) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_if (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_22remove_if(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), ((PyObject *)__pyx_v_unary_pred));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_22remove_if(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_unary_pred) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_if", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6PQueue_remove_if(__pyx_v_self, __pyx_v_unary_pred, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.remove_if", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/pqueue_impl.pxi":214
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PQueue):
 *             raise TypeError()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_25move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6PQueue_move_to(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_6PQueue_move_to *__pyx_optional_args) {
  Py_ssize_t __pyx_v_chunk_size = ((Py_ssize_t)-1L);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_chunk_size = __pyx_optional_args->chunk_size;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_move_to); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_25move_to)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_chunk_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/pqueue_impl.pxi":215
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PQueue):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         with nogil:
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_11pcontainers_6_pdict_PQueue); 
  __pyx_t_9 = ((!(__pyx_t_8 != 0)) != 0);
  if (__pyx_t_9) {

    /* "pcontainers/pqueue_impl.pxi":216
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PQueue):
 *             raise TypeError()             # <<<<<<<<<<<<<<
 *         with nogil:
 *             self.ptr.move_to(deref((<PQueue> other).ptr), chunk_size)
 */
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_TypeError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[3]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/pqueue_impl.pxi":215
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):
 *         if not isinstance(other, PQueue):             # <<<<<<<<<<<<<<
 *             raise TypeError()
 *         with nogil:
 */
  }

  /* "pcontainers/pqueue_impl.pxi":217
 *         if not isinstance(other, PQueue):
 *             raise TypeError()
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.move_to(deref((<PQueue> other).ptr), chunk_size)
 * 
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "pcontainers/pqueue_impl.pxi":218
 *             raise TypeError()
 *         with nogil:
 *             self.ptr.move_to(deref((<PQueue> other).ptr), chunk_size)             # <<<<<<<<<<<<<<
 * 
 */
        try {
          __pyx_v_self->__pyx_base.ptr->move_to((*((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_other)->__pyx_base.ptr), __pyx_v_chunk_size);
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[3]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L5_error;}
        }
      }

      /* "pcontainers/pqueue_impl.pxi":217
 *         if not isinstance(other, PQueue):
 *             raise TypeError()
 *         with nogil:             # <<<<<<<<<<<<<<
 *             self.ptr.move_to(deref((<PQueue> other).ptr), chunk_size)
 * 
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L5_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L6:;
      }
  }

  /* "pcontainers/pqueue_impl.pxi":214
 *             self.ptr.remove_if(make_unary_predicate(unary_pred))
 * 
 *     cpdef move_to(self, other, ssize_t chunk_size=-1):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, PQueue):
 *             raise TypeError()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_25move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6PQueue_25move_to(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_other = 0;
  Py_ssize_t __pyx_v_chunk_size;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_to (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_other,&__pyx_n_s_chunk_size,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_other)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_chunk_size);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move_to") < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_other = values[0];
    if (values[1]) {
      __pyx_v_chunk_size = PyInt_AsSsize_t(values[1]); if (unlikely((__pyx_v_chunk_size == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_chunk_size = ((Py_ssize_t)-1L);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move_to", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[3]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6PQueue_24move_to(((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)__pyx_v_self), __pyx_v_other, __pyx_v_chunk_size);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6PQueue_24move_to(struct __pyx_obj_11pcontainers_6_pdict_PQueue *__pyx_v_self, PyObject *__pyx_v_other, Py_ssize_t __pyx_v_chunk_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_to", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.chunk_size = __pyx_v_chunk_size;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_PQueue->__pyx_base.move_to(((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)__pyx_v_self), __pyx_v_other, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PQueue.move_to", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":3
 * 
 * cdef class expiry_dict(object):
 *     def __init__(self, PDict values_dict, PDict index_dict, time_t default_expiry=3600, time_t prune_period=5):             # <<<<<<<<<<<<<<
 *         if not values_dict:
 *             raise ValueError('values_dict is not initialized')
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11expiry_dict_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11expiry_dict_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_values_dict = 0;
  struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_index_dict = 0;
  time_t __pyx_v_default_expiry;
  time_t __pyx_v_prune_period;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_values_dict,&__pyx_n_s_index_dict,&__pyx_n_s_default_expiry,&__pyx_n_s_prune_period,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_values_dict)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_index_dict)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default_expiry);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prune_period);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_values_dict = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)values[0]);
    __pyx_v_index_dict = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)values[1]);
    if (values[2]) {
      __pyx_v_default_expiry = __Pyx_PyInt_As_time_t(values[2]); if (unlikely((__pyx_v_default_expiry == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_default_expiry = ((time_t)0xE10);
    }
    if (values[3]) {
      __pyx_v_prune_period = __Pyx_PyInt_As_time_t(values[3]); if (unlikely((__pyx_v_prune_period == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_prune_period = ((time_t)5);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_values_dict), __pyx_ptype_11pcontainers_6_pdict_PDict, 1, "values_dict", 0))) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_index_dict), __pyx_ptype_11pcontainers_6_pdict_PDict, 1, "index_dict", 0))) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict___init__(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), __pyx_v_values_dict, __pyx_v_index_dict, __pyx_v_default_expiry, __pyx_v_prune_period);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11expiry_dict___init__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_values_dict, struct __pyx_obj_11pcontainers_6_pdict_PDict *__pyx_v_index_dict, time_t __pyx_v_default_expiry, time_t __pyx_v_prune_period) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/expiry_dict_impl.pxi":4
 * cdef class expiry_dict(object):
 *     def __init__(self, PDict values_dict, PDict index_dict, time_t default_expiry=3600, time_t prune_period=5):
 *         if not values_dict:             # <<<<<<<<<<<<<<
 *             raise ValueError('values_dict is not initialized')
 *         if not index_dict:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_values_dict)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((!__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/expiry_dict_impl.pxi":5
 *     def __init__(self, PDict values_dict, PDict index_dict, time_t default_expiry=3600, time_t prune_period=5):
 *         if not values_dict:
 *             raise ValueError('values_dict is not initialized')             # <<<<<<<<<<<<<<
 *         if not index_dict:
 *             raise ValueError('index_dict is not initialized')
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/expiry_dict_impl.pxi":4
 * cdef class expiry_dict(object):
 *     def __init__(self, PDict values_dict, PDict index_dict, time_t default_expiry=3600, time_t prune_period=5):
 *         if not values_dict:             # <<<<<<<<<<<<<<
 *             raise ValueError('values_dict is not initialized')
 *         if not index_dict:
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":6
 *         if not values_dict:
 *             raise ValueError('values_dict is not initialized')
 *         if not index_dict:             # <<<<<<<<<<<<<<
 *             raise ValueError('index_dict is not initialized')
 *         if values_dict == index_dict:
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_index_dict)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = ((!__pyx_t_2) != 0);
  if (__pyx_t_1) {

    /* "pcontainers/expiry_dict_impl.pxi":7
 *             raise ValueError('values_dict is not initialized')
 *         if not index_dict:
 *             raise ValueError('index_dict is not initialized')             # <<<<<<<<<<<<<<
 *         if values_dict == index_dict:
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/expiry_dict_impl.pxi":6
 *         if not values_dict:
 *             raise ValueError('values_dict is not initialized')
 *         if not index_dict:             # <<<<<<<<<<<<<<
 *             raise ValueError('index_dict is not initialized')
 *         if values_dict == index_dict:
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":8
 *         if not index_dict:
 *             raise ValueError('index_dict is not initialized')
 *         if values_dict == index_dict:             # <<<<<<<<<<<<<<
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')
 *         if prune_period <= 0:
 */
  __pyx_t_3 = PyObject_RichCompare(((PyObject *)__pyx_v_values_dict), ((PyObject *)__pyx_v_index_dict), Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_1) {

    /* "pcontainers/expiry_dict_impl.pxi":9
 *             raise ValueError('index_dict is not initialized')
 *         if values_dict == index_dict:
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')             # <<<<<<<<<<<<<<
 *         if prune_period <= 0:
 *             raise ValueError("prune_period must be strictly positive")
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/expiry_dict_impl.pxi":8
 *         if not index_dict:
 *             raise ValueError('index_dict is not initialized')
 *         if values_dict == index_dict:             # <<<<<<<<<<<<<<
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')
 *         if prune_period <= 0:
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":10
 *         if values_dict == index_dict:
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')
 *         if prune_period <= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("prune_period must be strictly positive")
 *         self.values_dict = values_dict
 */
  __pyx_t_1 = ((__pyx_v_prune_period <= 0) != 0);
  if (__pyx_t_1) {

    /* "pcontainers/expiry_dict_impl.pxi":11
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')
 *         if prune_period <= 0:
 *             raise ValueError("prune_period must be strictly positive")             # <<<<<<<<<<<<<<
 *         self.values_dict = values_dict
 *         self.index_dict = index_dict
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/expiry_dict_impl.pxi":10
 *         if values_dict == index_dict:
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')
 *         if prune_period <= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("prune_period must be strictly positive")
 *         self.values_dict = values_dict
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":12
 *         if prune_period <= 0:
 *             raise ValueError("prune_period must be strictly positive")
 *         self.values_dict = values_dict             # <<<<<<<<<<<<<<
 *         self.index_dict = index_dict
 *         self.default_expiry = default_expiry
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_values_dict));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_values_dict));
  __Pyx_GOTREF(__pyx_v_self->values_dict);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->values_dict));
  __pyx_v_self->values_dict = __pyx_v_values_dict;

  /* "pcontainers/expiry_dict_impl.pxi":13
 *             raise ValueError("prune_period must be strictly positive")
 *         self.values_dict = values_dict
 *         self.index_dict = index_dict             # <<<<<<<<<<<<<<
 *         self.default_expiry = default_expiry
 *         self.prune_period = prune_period
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_index_dict));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_index_dict));
  __Pyx_GOTREF(__pyx_v_self->index_dict);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->index_dict));
  __pyx_v_self->index_dict = __pyx_v_index_dict;

  /* "pcontainers/expiry_dict_impl.pxi":14
 *         self.values_dict = values_dict
 *         self.index_dict = index_dict
 *         self.default_expiry = default_expiry             # <<<<<<<<<<<<<<
 *         self.prune_period = prune_period
 *         self.stopping = threading.Event()
 */
  __pyx_v_self->default_expiry = __pyx_v_default_expiry;

  /* "pcontainers/expiry_dict_impl.pxi":15
 *         self.index_dict = index_dict
 *         self.default_expiry = default_expiry
 *         self.prune_period = prune_period             # <<<<<<<<<<<<<<
 *         self.stopping = threading.Event()
 *         self.prune_expired()
 */
  __pyx_v_self->prune_period = __pyx_v_prune_period;

  /* "pcontainers/expiry_dict_impl.pxi":16
 *         self.default_expiry = default_expiry
 *         self.prune_period = prune_period
 *         self.stopping = threading.Event()             # <<<<<<<<<<<<<<
 *         self.prune_expired()
 * 
 */
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_threading); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_Event); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->stopping);
  __Pyx_DECREF(__pyx_v_self->stopping);
  __pyx_v_self->stopping = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":17
 *         self.prune_period = prune_period
 *         self.stopping = threading.Event()
 *         self.prune_expired()             # <<<<<<<<<<<<<<
 * 
 *     def __enter__(self):
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self->__pyx_vtab)->prune_expired(__pyx_v_self, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":3
 * 
 * cdef class expiry_dict(object):
 *     def __init__(self, PDict values_dict, PDict index_dict, time_t default_expiry=3600, time_t prune_period=5):             # <<<<<<<<<<<<<<
 *         if not values_dict:
 *             raise ValueError('values_dict is not initialized')
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":19
 *         self.prune_expired()
 * 
 *     def __enter__(self):             # <<<<<<<<<<<<<<
 *         self.pruning_thread = threading.Thread(target=self.pruning_thread_fun)
 *         self.pruning_thread.start()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_3__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_3__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__enter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_2__enter__(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_2__enter__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__enter__", 0);

  /* "pcontainers/expiry_dict_impl.pxi":20
 * 
 *     def __enter__(self):
 *         self.pruning_thread = threading.Thread(target=self.pruning_thread_fun)             # <<<<<<<<<<<<<<
 *         self.pruning_thread.start()
 *         return self
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_threading); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_Thread); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pruning_thread_fun); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_target, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->pruning_thread);
  __Pyx_DECREF(__pyx_v_self->pruning_thread);
  __pyx_v_self->pruning_thread = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":21
 *     def __enter__(self):
 *         self.pruning_thread = threading.Thread(target=self.pruning_thread_fun)
 *         self.pruning_thread.start()             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pruning_thread, __pyx_n_s_start); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":22
 *         self.pruning_thread = threading.Thread(target=self.pruning_thread_fun)
 *         self.pruning_thread.start()
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "pcontainers/expiry_dict_impl.pxi":19
 *         self.prune_expired()
 * 
 *     def __enter__(self):             # <<<<<<<<<<<<<<
 *         self.pruning_thread = threading.Thread(target=self.pruning_thread_fun)
 *         self.pruning_thread.start()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__enter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":24
 *         return self
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):             # <<<<<<<<<<<<<<
 *         self.stopping.set()
 *         self.pruning_thread.join()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_5__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_5__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_exc_type = 0;
  CYTHON_UNUSED PyObject *__pyx_v_exc_val = 0;
  CYTHON_UNUSED PyObject *__pyx_v_exc_tb = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__exit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_exc_type,&__pyx_n_s_exc_val,&__pyx_n_s_exc_tb,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_val)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 1); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_tb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 2); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__exit__") < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_exc_type = values[0];
    __pyx_v_exc_val = values[1];
    __pyx_v_exc_tb = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_4__exit__(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), __pyx_v_exc_type, __pyx_v_exc_val, __pyx_v_exc_tb);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_4__exit__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_exc_type, CYTHON_UNUSED PyObject *__pyx_v_exc_val, CYTHON_UNUSED PyObject *__pyx_v_exc_tb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__exit__", 0);

  /* "pcontainers/expiry_dict_impl.pxi":25
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):
 *         self.stopping.set()             # <<<<<<<<<<<<<<
 *         self.pruning_thread.join()
 *         self.stopping.clear()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->stopping, __pyx_n_s_set); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":26
 *     def __exit__(self, exc_type, exc_val, exc_tb):
 *         self.stopping.set()
 *         self.pruning_thread.join()             # <<<<<<<<<<<<<<
 *         self.stopping.clear()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pruning_thread, __pyx_n_s_join); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":27
 *         self.stopping.set()
 *         self.pruning_thread.join()
 *         self.stopping.clear()             # <<<<<<<<<<<<<<
 * 
 *     def pruning_thread_fun(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->stopping, __pyx_n_s_clear); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":24
 *         return self
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):             # <<<<<<<<<<<<<<
 *         self.stopping.set()
 *         self.pruning_thread.join()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":29
 *         self.stopping.clear()
 * 
 *     def pruning_thread_fun(self):             # <<<<<<<<<<<<<<
 *         while not self.stopping.is_set():
 *             self.stopping.wait(self.prune_period)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_7pruning_thread_fun(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_7pruning_thread_fun(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pruning_thread_fun (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_6pruning_thread_fun(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_6pruning_thread_fun(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pruning_thread_fun", 0);

  /* "pcontainers/expiry_dict_impl.pxi":30
 * 
 *     def pruning_thread_fun(self):
 *         while not self.stopping.is_set():             # <<<<<<<<<<<<<<
 *             self.stopping.wait(self.prune_period)
 *             self.prune_expired()
 */
  while (1) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->stopping, __pyx_n_s_is_set); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_5 = ((!__pyx_t_4) != 0);
    if (!__pyx_t_5) break;

    /* "pcontainers/expiry_dict_impl.pxi":31
 *     def pruning_thread_fun(self):
 *         while not self.stopping.is_set():
 *             self.stopping.wait(self.prune_period)             # <<<<<<<<<<<<<<
 *             self.prune_expired()
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->stopping, __pyx_n_s_wait); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyInt_From_time_t(__pyx_v_self->prune_period); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":32
 *         while not self.stopping.is_set():
 *             self.stopping.wait(self.prune_period)
 *             self.prune_expired()             # <<<<<<<<<<<<<<
 * 
 *     cpdef prune_expired(self):
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self->__pyx_vtab)->prune_expired(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/expiry_dict_impl.pxi":29
 *         self.stopping.clear()
 * 
 *     def pruning_thread_fun(self):             # <<<<<<<<<<<<<<
 *         while not self.stopping.is_set():
 *             self.stopping.wait(self.prune_period)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.pruning_thread_fun", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":34
 *             self.prune_expired()
 * 
 *     cpdef prune_expired(self):             # <<<<<<<<<<<<<<
 *         cdef time_t now = c_time(NULL)
 *         cdef time_t expiry
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_9prune_expired(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_prune_expired(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, int __pyx_skip_dispatch) {
  time_t __pyx_v_now;
  time_t __pyx_v_expiry;
  utils::PyBufferWrap __pyx_v_values_key_view;
  boost::scoped_ptr<quiet::PersistentDict::iterator>  __pyx_v_index_it;
  boost::scoped_ptr<quiet::PersistentDict::iterator>  __pyx_v_values_it;
  PyObject *__pyx_v_s_expiry = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  quiet::PersistentDict::iterator *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  bool __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  time_t __pyx_t_12;
  utils::PyBufferWrap __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  char const *__pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_expired", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_prune_expired); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_9prune_expired)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/expiry_dict_impl.pxi":35
 * 
 *     cpdef prune_expired(self):
 *         cdef time_t now = c_time(NULL)             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef PyBufferWrap values_key_view
 */
  __pyx_v_now = time(NULL);

  /* "pcontainers/expiry_dict_impl.pxi":41
 *         cdef scoped_ptr[cppIterator] index_it
 *         cdef scoped_ptr[cppIterator] values_it
 *         index_it.reset(new cppIterator(self.index_dict.ptr, 0, 0))             # <<<<<<<<<<<<<<
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 */
  try {
    __pyx_t_5 = new quiet::PersistentDict::iterator(__pyx_v_self->index_dict->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_index_it.reset(__pyx_t_5);

  /* "pcontainers/expiry_dict_impl.pxi":42
 *         cdef scoped_ptr[cppIterator] values_it
 *         index_it.reset(new cppIterator(self.index_dict.ptr, 0, 0))
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  try {
    __pyx_t_5 = new quiet::PersistentDict::iterator(__pyx_v_self->values_dict->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_values_it.reset(__pyx_t_5);

  /* "pcontainers/expiry_dict_impl.pxi":44
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             while not index_it.get().has_reached_end():
 *                 s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(deref(index_it)))
 */
  /*try:*/ {
    {
      __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);
      /*try:*/ {

        /* "pcontainers/expiry_dict_impl.pxi":45
 * 
 *         try:
 *             while not index_it.get().has_reached_end():             # <<<<<<<<<<<<<<
 *                 s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(deref(index_it)))
 *                 if s_expiry == b"none":
 */
        while (1) {
          try {
            __pyx_t_9 = __pyx_v_index_it.get()->has_reached_end();
          } catch(...) {
            __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
            {__pyx_filename = __pyx_f[4]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          }
          __pyx_t_10 = ((!(__pyx_t_9 != 0)) != 0);
          if (!__pyx_t_10) break;

          /* "pcontainers/expiry_dict_impl.pxi":46
 *         try:
 *             while not index_it.get().has_reached_end():
 *                 s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(deref(index_it)))             # <<<<<<<<<<<<<<
 *                 if s_expiry == b"none":
 *                     continue
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->index_dict), __pyx_n_s_loads); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_value_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), (*__pyx_v_index_it)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          if (!__pyx_t_4) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            __Pyx_GOTREF(__pyx_t_11);
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_4); __pyx_t_4 = NULL;
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF_SET(__pyx_v_s_expiry, __pyx_t_1);
          __pyx_t_1 = 0;

          /* "pcontainers/expiry_dict_impl.pxi":47
 *             while not index_it.get().has_reached_end():
 *                 s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(deref(index_it)))
 *                 if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                     continue
 *                 expiry = int(s_expiry)
 */
          __pyx_t_10 = (__Pyx_PyBytes_Equals(__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_10 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          if (__pyx_t_10) {

            /* "pcontainers/expiry_dict_impl.pxi":48
 *                 s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(deref(index_it)))
 *                 if s_expiry == b"none":
 *                     continue             # <<<<<<<<<<<<<<
 *                 expiry = int(s_expiry)
 *                 if now >= expiry:
 */
            goto __pyx_L14_continue;

            /* "pcontainers/expiry_dict_impl.pxi":47
 *             while not index_it.get().has_reached_end():
 *                 s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(deref(index_it)))
 *                 if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                     continue
 *                 expiry = int(s_expiry)
 */
          }

          /* "pcontainers/expiry_dict_impl.pxi":49
 *                 if s_expiry == b"none":
 *                     continue
 *                 expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *                 if now >= expiry:
 *                     key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(deref(index_it)))
 */
          __pyx_t_1 = PyNumber_Int(__pyx_v_s_expiry); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_12 = __Pyx_PyInt_As_time_t(__pyx_t_1); if (unlikely((__pyx_t_12 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_expiry = __pyx_t_12;

          /* "pcontainers/expiry_dict_impl.pxi":50
 *                     continue
 *                 expiry = int(s_expiry)
 *                 if now >= expiry:             # <<<<<<<<<<<<<<
 *                     key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(deref(index_it)))
 *                     values_key_view = move(PyBufferWrap(self.values_dict.key_chain.dumps(key)))
 */
          __pyx_t_10 = ((__pyx_v_now >= __pyx_v_expiry) != 0);
          if (__pyx_t_10) {

            /* "pcontainers/expiry_dict_impl.pxi":51
 *                 expiry = int(s_expiry)
 *                 if now >= expiry:
 *                     key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(deref(index_it)))             # <<<<<<<<<<<<<<
 *                     values_key_view = move(PyBufferWrap(self.values_dict.key_chain.dumps(key)))
 *                     with nogil:
 */
            __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_key_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), (*__pyx_v_index_it)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->key_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "pcontainers/expiry_dict_impl.pxi":52
 *                 if now >= expiry:
 *                     key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(deref(index_it)))
 *                     values_key_view = move(PyBufferWrap(self.values_dict.key_chain.dumps(key)))             # <<<<<<<<<<<<<<
 *                     with nogil:
 *                         index_it.get().dlte()
 */
            __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            __Pyx_GOTREF(__pyx_t_2);
            try {
              __pyx_t_13 = utils::PyBufferWrap(__pyx_t_2);
            } catch(...) {
              __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
              {__pyx_filename = __pyx_f[4]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            }
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_v_values_key_view = boost::move(__pyx_t_13);

            /* "pcontainers/expiry_dict_impl.pxi":53
 *                     key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(deref(index_it)))
 *                     values_key_view = move(PyBufferWrap(self.values_dict.key_chain.dumps(key)))
 *                     with nogil:             # <<<<<<<<<<<<<<
 *                         index_it.get().dlte()
 *                         values_it.get().dlte(values_key_view.get_mdb_val())
 */
            {
                #ifdef WITH_THREAD
                PyThreadState *_save;
                Py_UNBLOCK_THREADS
                #endif
                /*try:*/ {

                  /* "pcontainers/expiry_dict_impl.pxi":54
 *                     values_key_view = move(PyBufferWrap(self.values_dict.key_chain.dumps(key)))
 *                     with nogil:
 *                         index_it.get().dlte()             # <<<<<<<<<<<<<<
 *                         values_it.get().dlte(values_key_view.get_mdb_val())
 * 
 */
                  try {
                    __pyx_v_index_it.get()->quiet::PersistentDict::iterator::del();
                  } catch(...) {
                    #ifdef WITH_THREAD
                    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
                    #endif
                    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
                    #ifdef WITH_THREAD
                    PyGILState_Release(__pyx_gilstate_save);
                    #endif
                    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L21_error;}
                  }

                  /* "pcontainers/expiry_dict_impl.pxi":55
 *                     with nogil:
 *                         index_it.get().dlte()
 *                         values_it.get().dlte(values_key_view.get_mdb_val())             # <<<<<<<<<<<<<<
 * 
 *                 index_it.get().incr()
 */
                  try {
                    __pyx_v_values_it.get()->quiet::PersistentDict::iterator::del(__pyx_v_values_key_view.get_mdb_val());
                  } catch(...) {
                    #ifdef WITH_THREAD
                    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
                    #endif
                    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
                    #ifdef WITH_THREAD
                    PyGILState_Release(__pyx_gilstate_save);
                    #endif
                    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L21_error;}
                  }
                }

                /* "pcontainers/expiry_dict_impl.pxi":53
 *                     key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(deref(index_it)))
 *                     values_key_view = move(PyBufferWrap(self.values_dict.key_chain.dumps(key)))
 *                     with nogil:             # <<<<<<<<<<<<<<
 *                         index_it.get().dlte()
 *                         values_it.get().dlte(values_key_view.get_mdb_val())
 */
                /*finally:*/ {
                  /*normal exit:*/{
                    #ifdef WITH_THREAD
                    Py_BLOCK_THREADS
                    #endif
                    goto __pyx_L22;
                  }
                  __pyx_L21_error: {
                    #ifdef WITH_THREAD
                    Py_BLOCK_THREADS
                    #endif
                    goto __pyx_L6_error;
                  }
                  __pyx_L22:;
                }
            }

            /* "pcontainers/expiry_dict_impl.pxi":50
 *                     continue
 *                 expiry = int(s_expiry)
 *                 if now >= expiry:             # <<<<<<<<<<<<<<
 *                     key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(deref(index_it)))
 *                     values_key_view = move(PyBufferWrap(self.values_dict.key_chain.dumps(key)))
 */
          }

          /* "pcontainers/expiry_dict_impl.pxi":57
 *                         values_it.get().dlte(values_key_view.get_mdb_val())
 * 
 *                 index_it.get().incr()             # <<<<<<<<<<<<<<
 * 
 *         except:
 */
          try {
            __pyx_v_index_it.get()->quiet::PersistentDict::iterator::operator++();
          } catch(...) {
            __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
            {__pyx_filename = __pyx_f[4]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          }
          __pyx_L14_continue:;
        }

        /* "pcontainers/expiry_dict_impl.pxi":44
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             while not index_it.get().has_reached_end():
 *                 s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(deref(index_it)))
 */
      }
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L13_try_end;
      __pyx_L6_error:;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "pcontainers/expiry_dict_impl.pxi":59
 *                 index_it.get().incr()
 * 
 *         except:             # <<<<<<<<<<<<<<
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()
 */
      /*except:*/ {
        __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.prune_expired", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_11) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_11);

        /* "pcontainers/expiry_dict_impl.pxi":60
 * 
 *         except:
 *             index_it.get().set_rollback()             # <<<<<<<<<<<<<<
 *             values_it.get().set_rollback()
 *             raise
 */
        __pyx_v_index_it.get()->set_rollback();

        /* "pcontainers/expiry_dict_impl.pxi":61
 *         except:
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()             # <<<<<<<<<<<<<<
 *             raise
 * 
 */
        __pyx_v_values_it.get()->set_rollback();

        /* "pcontainers/expiry_dict_impl.pxi":62
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()
 *             raise             # <<<<<<<<<<<<<<
 * 
 *         finally:
 */
        __Pyx_GIVEREF(__pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_1);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ErrRestore(__pyx_t_2, __pyx_t_1, __pyx_t_11);
        __pyx_t_2 = 0; __pyx_t_1 = 0; __pyx_t_11 = 0; 
        {__pyx_filename = __pyx_f[4]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
      }
      __pyx_L8_except_error:;

      /* "pcontainers/expiry_dict_impl.pxi":44
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             while not index_it.get().has_reached_end():
 *                 s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(deref(index_it)))
 */
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
      goto __pyx_L4_error;
      __pyx_L13_try_end:;
    }
  }

  /* "pcontainers/expiry_dict_impl.pxi":65
 * 
 *         finally:
 *             values_it.reset()             # <<<<<<<<<<<<<<
 *             index_it.reset()
 * 
 */
  /*finally:*/ {
    /*normal exit:*/{
      __pyx_v_values_it.reset();

      /* "pcontainers/expiry_dict_impl.pxi":66
 *         finally:
 *             values_it.reset()
 *             index_it.reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_index_it.reset();
      goto __pyx_L5;
    }
    /*exception exit:*/{
      __pyx_L4_error:;
      __pyx_t_8 = 0; __pyx_t_7 = 0; __pyx_t_6 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_17, &__pyx_t_18, &__pyx_t_19);
      if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0)) __Pyx_ErrFetch(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_17);
      __Pyx_XGOTREF(__pyx_t_18);
      __Pyx_XGOTREF(__pyx_t_19);
      __pyx_t_14 = __pyx_lineno; __pyx_t_15 = __pyx_clineno; __pyx_t_16 = __pyx_filename;
      {

        /* "pcontainers/expiry_dict_impl.pxi":65
 * 
 *         finally:
 *             values_it.reset()             # <<<<<<<<<<<<<<
 *             index_it.reset()
 * 
 */
        __pyx_v_values_it.reset();

        /* "pcontainers/expiry_dict_impl.pxi":66
 *         finally:
 *             values_it.reset()
 *             index_it.reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_index_it.reset();
      }
      if (PY_MAJOR_VERSION >= 3) {
        __Pyx_XGIVEREF(__pyx_t_17);
        __Pyx_XGIVEREF(__pyx_t_18);
        __Pyx_XGIVEREF(__pyx_t_19);
        __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
      }
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_ErrRestore(__pyx_t_8, __pyx_t_7, __pyx_t_6);
      __pyx_t_8 = 0; __pyx_t_7 = 0; __pyx_t_6 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0;
      __pyx_lineno = __pyx_t_14; __pyx_clineno = __pyx_t_15; __pyx_filename = __pyx_t_16;
      goto __pyx_L1_error;
    }
    __pyx_L5:;
  }

  /* "pcontainers/expiry_dict_impl.pxi":34
 *             self.prune_expired()
 * 
 *     cpdef prune_expired(self):             # <<<<<<<<<<<<<<
 *         cdef time_t now = c_time(NULL)
 *         cdef time_t expiry
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.prune_expired", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s_expiry);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_9prune_expired(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_9prune_expired(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prune_expired (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_8prune_expired(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_8prune_expired(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prune_expired", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_11expiry_dict_prune_expired(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.prune_expired", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":69
 * 
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         if key in self.index_dict:
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_10__getitem__(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_10__getitem__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key) {
  time_t __pyx_v_expiry;
  PyObject *__pyx_v_s_expiry = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  time_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pcontainers/expiry_dict_impl.pxi":71
 *     def __getitem__(self, key):
 *         cdef time_t expiry
 *         if key in self.index_dict:             # <<<<<<<<<<<<<<
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":
 */
  __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_key, ((PyObject *)__pyx_v_self->index_dict), Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/expiry_dict_impl.pxi":72
 *         cdef time_t expiry
 *         if key in self.index_dict:
 *             s_expiry = self.index_dict[key]             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 return self.values_dict[key]
 */
    __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_self->index_dict), __pyx_v_key); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_s_expiry = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":73
 *         if key in self.index_dict:
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 return self.values_dict[key]
 *             else:
 */
    __pyx_t_2 = (__Pyx_PyBytes_Equals(__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_2) {

      /* "pcontainers/expiry_dict_impl.pxi":74
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":
 *                 return self.values_dict[key]             # <<<<<<<<<<<<<<
 *             else:
 *                 expiry = int(s_expiry)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_self->values_dict), __pyx_v_key); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_r = __pyx_t_3;
      __pyx_t_3 = 0;
      goto __pyx_L0;

      /* "pcontainers/expiry_dict_impl.pxi":73
 *         if key in self.index_dict:
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 return self.values_dict[key]
 *             else:
 */
    }

    /* "pcontainers/expiry_dict_impl.pxi":76
 *                 return self.values_dict[key]
 *             else:
 *                 expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *                 if c_time(NULL) < expiry:
 *                     return self.values_dict[key]
 */
    /*else*/ {
      __pyx_t_3 = PyNumber_Int(__pyx_v_s_expiry); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyInt_As_time_t(__pyx_t_3); if (unlikely((__pyx_t_4 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_v_expiry = __pyx_t_4;

      /* "pcontainers/expiry_dict_impl.pxi":77
 *             else:
 *                 expiry = int(s_expiry)
 *                 if c_time(NULL) < expiry:             # <<<<<<<<<<<<<<
 *                     return self.values_dict[key]
 *                 else:
 */
      __pyx_t_2 = ((time(NULL) < __pyx_v_expiry) != 0);
      if (__pyx_t_2) {

        /* "pcontainers/expiry_dict_impl.pxi":78
 *                 expiry = int(s_expiry)
 *                 if c_time(NULL) < expiry:
 *                     return self.values_dict[key]             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise NotFound()
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_self->values_dict), __pyx_v_key); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_r = __pyx_t_3;
        __pyx_t_3 = 0;
        goto __pyx_L0;

        /* "pcontainers/expiry_dict_impl.pxi":77
 *             else:
 *                 expiry = int(s_expiry)
 *                 if c_time(NULL) < expiry:             # <<<<<<<<<<<<<<
 *                     return self.values_dict[key]
 *                 else:
 */
      }

      /* "pcontainers/expiry_dict_impl.pxi":80
 *                     return self.values_dict[key]
 *                 else:
 *                     raise NotFound()             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotFound()
 */
      /*else*/ {
        __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        if (__pyx_t_6) {
          __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        } else {
          __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[4]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }

    /* "pcontainers/expiry_dict_impl.pxi":71
 *     def __getitem__(self, key):
 *         cdef time_t expiry
 *         if key in self.index_dict:             # <<<<<<<<<<<<<<
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":82
 *                     raise NotFound()
 *         else:
 *             raise NotFound()             # <<<<<<<<<<<<<<
 * 
 *     cpdef get(self, key, default=None):
 */
  /*else*/ {
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "pcontainers/expiry_dict_impl.pxi":69
 * 
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         if key in self.index_dict:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s_expiry);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":84
 *             raise NotFound()
 * 
 *     cpdef get(self, key, default=None):             # <<<<<<<<<<<<<<
 *         try:
 *             return self[key]
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_13get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_get(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_get *__pyx_optional_args) {
  PyObject *__pyx_v_default = ((PyObject *)Py_None);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default = __pyx_optional_args->__pyx_default;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_13get)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_key);
      __Pyx_INCREF(__pyx_v_default);
      __Pyx_GIVEREF(__pyx_v_default);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_default);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/expiry_dict_impl.pxi":85
 * 
 *     cpdef get(self, key, default=None):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[key]
 *         except NotFound:
 */
  {
    __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    /*try:*/ {

      /* "pcontainers/expiry_dict_impl.pxi":86
 *     cpdef get(self, key, default=None):
 *         try:
 *             return self[key]             # <<<<<<<<<<<<<<
 *         except NotFound:
 *             return default
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_key); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L3_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L7_try_return;

      /* "pcontainers/expiry_dict_impl.pxi":85
 * 
 *     cpdef get(self, key, default=None):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[key]
 *         except NotFound:
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":87
 *         try:
 *             return self[key]
 *         except NotFound:             # <<<<<<<<<<<<<<
 *             return default
 * 
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = PyErr_ExceptionMatches(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_10) {
      __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L5_except_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "pcontainers/expiry_dict_impl.pxi":88
 *             return self[key]
 *         except NotFound:
 *             return default             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_default);
      __pyx_r = __pyx_v_default;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "pcontainers/expiry_dict_impl.pxi":85
 * 
 *     cpdef get(self, key, default=None):
 *         try:             # <<<<<<<<<<<<<<
 *             return self[key]
 *         except NotFound:
 */
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
    goto __pyx_L0;
  }

  /* "pcontainers/expiry_dict_impl.pxi":84
 *             raise NotFound()
 * 
 *     cpdef get(self, key, default=None):             # <<<<<<<<<<<<<<
 *         try:
 *             return self[key]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_13get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_13get(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get") < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_12get(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), __pyx_v_key, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_12get(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_get __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_default = __pyx_v_default;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_expiry_dict->get(__pyx_v_self, __pyx_v_key, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":90
 *             return default
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         self.set(key, value)
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11expiry_dict_15__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11expiry_dict_15__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_14__setitem__(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11expiry_dict_14__setitem__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "pcontainers/expiry_dict_impl.pxi":91
 * 
 *     def __setitem__(self, key, value):
 *         self.set(key, value)             # <<<<<<<<<<<<<<
 * 
 *     cpdef set(self, key, value, time_t expiry=0):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self->__pyx_vtab)->set(__pyx_v_self, __pyx_v_key, __pyx_v_value, 0, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":90
 *             return default
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         self.set(key, value)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":93
 *         self.set(key, value)
 * 
 *     cpdef set(self, key, value, time_t expiry=0):             # <<<<<<<<<<<<<<
 *         if expiry == 0:
 *             expiry = self.default_expiry
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_17set(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_set(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_set *__pyx_optional_args) {
  time_t __pyx_v_expiry = ((time_t)0);
  PyObject *__pyx_v_index_v = NULL;
  boost::scoped_ptr<quiet::PersistentDict::iterator>  __pyx_v_index_it;
  boost::scoped_ptr<quiet::PersistentDict::iterator>  __pyx_v_values_it;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  time_t __pyx_t_9;
  quiet::PersistentDict::iterator *__pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  int __pyx_t_15;
  char const *__pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_expiry = __pyx_optional_args->expiry;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_17set)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __Pyx_PyInt_From_time_t(__pyx_v_expiry); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      __pyx_t_7 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_key);
      __Pyx_INCREF(__pyx_v_value);
      __Pyx_GIVEREF(__pyx_v_value);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v_value);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_6, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/expiry_dict_impl.pxi":94
 * 
 *     cpdef set(self, key, value, time_t expiry=0):
 *         if expiry == 0:             # <<<<<<<<<<<<<<
 *             expiry = self.default_expiry
 * 
 */
  __pyx_t_8 = ((__pyx_v_expiry == 0) != 0);
  if (__pyx_t_8) {

    /* "pcontainers/expiry_dict_impl.pxi":95
 *     cpdef set(self, key, value, time_t expiry=0):
 *         if expiry == 0:
 *             expiry = self.default_expiry             # <<<<<<<<<<<<<<
 * 
 *         if expiry > 0:
 */
    __pyx_t_9 = __pyx_v_self->default_expiry;
    __pyx_v_expiry = __pyx_t_9;

    /* "pcontainers/expiry_dict_impl.pxi":94
 * 
 *     cpdef set(self, key, value, time_t expiry=0):
 *         if expiry == 0:             # <<<<<<<<<<<<<<
 *             expiry = self.default_expiry
 * 
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":97
 *             expiry = self.default_expiry
 * 
 *         if expiry > 0:             # <<<<<<<<<<<<<<
 *             index_v = self.index_dict.value_chain.dumps(bytes(expiry + c_time(NULL)))
 *         else:
 */
  __pyx_t_8 = ((__pyx_v_expiry > 0) != 0);
  if (__pyx_t_8) {

    /* "pcontainers/expiry_dict_impl.pxi":98
 * 
 *         if expiry > 0:
 *             index_v = self.index_dict.value_chain.dumps(bytes(expiry + c_time(NULL)))             # <<<<<<<<<<<<<<
 *         else:
 *             index_v = self.index_dict.value_chain.dumps(b'none')
 */
    __pyx_t_1 = __Pyx_PyInt_From_time_t((__pyx_v_expiry + time(NULL))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_index_v = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":97
 *             expiry = self.default_expiry
 * 
 *         if expiry > 0:             # <<<<<<<<<<<<<<
 *             index_v = self.index_dict.value_chain.dumps(bytes(expiry + c_time(NULL)))
 *         else:
 */
    goto __pyx_L4;
  }

  /* "pcontainers/expiry_dict_impl.pxi":100
 *             index_v = self.index_dict.value_chain.dumps(bytes(expiry + c_time(NULL)))
 *         else:
 *             index_v = self.index_dict.value_chain.dumps(b'none')             # <<<<<<<<<<<<<<
 * 
 *         cdef scoped_ptr[cppIterator] index_it
 */
  /*else*/ {
    __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_n_b_none, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_index_v = __pyx_t_2;
    __pyx_t_2 = 0;
  }
  __pyx_L4:;

  /* "pcontainers/expiry_dict_impl.pxi":104
 *         cdef scoped_ptr[cppIterator] index_it
 *         cdef scoped_ptr[cppIterator] values_it
 *         index_it.reset(new cppIterator(self.index_dict.ptr, 0, 0))             # <<<<<<<<<<<<<<
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 */
  try {
    __pyx_t_10 = new quiet::PersistentDict::iterator(__pyx_v_self->index_dict->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_index_it.reset(__pyx_t_10);

  /* "pcontainers/expiry_dict_impl.pxi":105
 *         cdef scoped_ptr[cppIterator] values_it
 *         index_it.reset(new cppIterator(self.index_dict.ptr, 0, 0))
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  try {
    __pyx_t_10 = new quiet::PersistentDict::iterator(__pyx_v_self->values_dict->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_values_it.reset(__pyx_t_10);

  /* "pcontainers/expiry_dict_impl.pxi":107
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), index_v)
 *             self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 */
  /*try:*/ {
    {
      __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
      __Pyx_XGOTREF(__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_12);
      __Pyx_XGOTREF(__pyx_t_13);
      /*try:*/ {

        /* "pcontainers/expiry_dict_impl.pxi":108
 * 
 *         try:
 *             self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), index_v)             # <<<<<<<<<<<<<<
 *             self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 *         except:
 */
        __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), (*__pyx_v_index_it), __pyx_t_2, __pyx_v_index_v); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "pcontainers/expiry_dict_impl.pxi":109
 *         try:
 *             self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), index_v)
 *             self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))             # <<<<<<<<<<<<<<
 *         except:
 *             index_it.get().set_rollback()
 */
        __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->value_chain), __pyx_v_value, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->values_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->values_dict), (*__pyx_v_values_it), __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "pcontainers/expiry_dict_impl.pxi":107
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), index_v)
 *             self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 */
      }
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      goto __pyx_L15_try_end;
      __pyx_L8_error:;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "pcontainers/expiry_dict_impl.pxi":110
 *             self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), index_v)
 *             self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 *         except:             # <<<<<<<<<<<<<<
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()
 */
      /*except:*/ {
        __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_2, &__pyx_t_1) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_t_1);

        /* "pcontainers/expiry_dict_impl.pxi":111
 *             self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 *         except:
 *             index_it.get().set_rollback()             # <<<<<<<<<<<<<<
 *             values_it.get().set_rollback()
 *             raise
 */
        __pyx_v_index_it.get()->set_rollback();

        /* "pcontainers/expiry_dict_impl.pxi":112
 *         except:
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()             # <<<<<<<<<<<<<<
 *             raise
 *         finally:
 */
        __pyx_v_values_it.get()->set_rollback();

        /* "pcontainers/expiry_dict_impl.pxi":113
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()
 *             raise             # <<<<<<<<<<<<<<
 *         finally:
 *             values_it.reset()
 */
        __Pyx_GIVEREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_2);
        __Pyx_XGIVEREF(__pyx_t_1);
        __Pyx_ErrRestore(__pyx_t_4, __pyx_t_2, __pyx_t_1);
        __pyx_t_4 = 0; __pyx_t_2 = 0; __pyx_t_1 = 0; 
        {__pyx_filename = __pyx_f[4]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
      }
      __pyx_L10_except_error:;

      /* "pcontainers/expiry_dict_impl.pxi":107
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), index_v)
 *             self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 */
      __Pyx_XGIVEREF(__pyx_t_11);
      __Pyx_XGIVEREF(__pyx_t_12);
      __Pyx_XGIVEREF(__pyx_t_13);
      __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
      goto __pyx_L6_error;
      __pyx_L15_try_end:;
    }
  }

  /* "pcontainers/expiry_dict_impl.pxi":115
 *             raise
 *         finally:
 *             values_it.reset()             # <<<<<<<<<<<<<<
 *             index_it.reset()
 * 
 */
  /*finally:*/ {
    /*normal exit:*/{
      __pyx_v_values_it.reset();

      /* "pcontainers/expiry_dict_impl.pxi":116
 *         finally:
 *             values_it.reset()
 *             index_it.reset()             # <<<<<<<<<<<<<<
 * 
 *     def __delitem__(self, key):
 */
      __pyx_v_index_it.reset();
      goto __pyx_L7;
    }
    /*exception exit:*/{
      __pyx_L6_error:;
      __pyx_t_13 = 0; __pyx_t_12 = 0; __pyx_t_11 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_17, &__pyx_t_18, &__pyx_t_19);
      if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_13, &__pyx_t_12, &__pyx_t_11) < 0)) __Pyx_ErrFetch(&__pyx_t_13, &__pyx_t_12, &__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_13);
      __Pyx_XGOTREF(__pyx_t_12);
      __Pyx_XGOTREF(__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_17);
      __Pyx_XGOTREF(__pyx_t_18);
      __Pyx_XGOTREF(__pyx_t_19);
      __pyx_t_14 = __pyx_lineno; __pyx_t_15 = __pyx_clineno; __pyx_t_16 = __pyx_filename;
      {

        /* "pcontainers/expiry_dict_impl.pxi":115
 *             raise
 *         finally:
 *             values_it.reset()             # <<<<<<<<<<<<<<
 *             index_it.reset()
 * 
 */
        __pyx_v_values_it.reset();

        /* "pcontainers/expiry_dict_impl.pxi":116
 *         finally:
 *             values_it.reset()
 *             index_it.reset()             # <<<<<<<<<<<<<<
 * 
 *     def __delitem__(self, key):
 */
        __pyx_v_index_it.reset();
      }
      if (PY_MAJOR_VERSION >= 3) {
        __Pyx_XGIVEREF(__pyx_t_17);
        __Pyx_XGIVEREF(__pyx_t_18);
        __Pyx_XGIVEREF(__pyx_t_19);
        __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
      }
      __Pyx_XGIVEREF(__pyx_t_13);
      __Pyx_XGIVEREF(__pyx_t_12);
      __Pyx_XGIVEREF(__pyx_t_11);
      __Pyx_ErrRestore(__pyx_t_13, __pyx_t_12, __pyx_t_11);
      __pyx_t_13 = 0; __pyx_t_12 = 0; __pyx_t_11 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0;
      __pyx_lineno = __pyx_t_14; __pyx_clineno = __pyx_t_15; __pyx_filename = __pyx_t_16;
      goto __pyx_L1_error;
    }
    __pyx_L7:;
  }

  /* "pcontainers/expiry_dict_impl.pxi":93
 *         self.set(key, value)
 * 
 *     cpdef set(self, key, value, time_t expiry=0):             # <<<<<<<<<<<<<<
 *         if expiry == 0:
 *             expiry = self.default_expiry
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_index_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_17set(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_17set(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_value = 0;
  time_t __pyx_v_expiry;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_value,&__pyx_n_s_expiry,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set", 0, 2, 3, 1); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_expiry);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set") < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_value = values[1];
    if (values[2]) {
      __pyx_v_expiry = __Pyx_PyInt_As_time_t(values[2]); if (unlikely((__pyx_v_expiry == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_expiry = ((time_t)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_16set(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), __pyx_v_key, __pyx_v_value, __pyx_v_expiry);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_16set(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value, time_t __pyx_v_expiry) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_set __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.expiry = __pyx_v_expiry;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_expiry_dict->set(__pyx_v_self, __pyx_v_key, __pyx_v_value, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":118
 *             index_it.reset()
 * 
 *     def __delitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef time_t now = c_time(NULL)
 *         index_key = self.index_dict.key_chain.dumps(key)
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11expiry_dict_19__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11expiry_dict_19__delitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__delitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_18__delitem__(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11expiry_dict_18__delitem__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key) {
  time_t __pyx_v_now;
  PyObject *__pyx_v_index_key = NULL;
  quiet::PersistentDict::iterator __pyx_v_index_it;
  PyObject *__pyx_v_s_expiry = NULL;
  time_t __pyx_v_expiry;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  utils::PyBufferWrap __pyx_t_2;
  quiet::PersistentDict::iterator __pyx_t_3;
  bool __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  time_t __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__delitem__", 0);

  /* "pcontainers/expiry_dict_impl.pxi":119
 * 
 *     def __delitem__(self, key):
 *         cdef time_t now = c_time(NULL)             # <<<<<<<<<<<<<<
 *         index_key = self.index_dict.key_chain.dumps(key)
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 */
  __pyx_v_now = time(NULL);

  /* "pcontainers/expiry_dict_impl.pxi":120
 *     def __delitem__(self, key):
 *         cdef time_t now = c_time(NULL)
 *         index_key = self.index_dict.key_chain.dumps(key)             # <<<<<<<<<<<<<<
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_index_key = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":121
 *         cdef time_t now = c_time(NULL)
 *         index_key = self.index_dict.key_chain.dumps(key)
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))             # <<<<<<<<<<<<<<
 * 
 *         if index_it.has_reached_end():
 */
  try {
    __pyx_t_2 = utils::PyBufferWrap(__pyx_v_index_key);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  try {
    __pyx_t_3 = quiet::PersistentDict::iterator(__pyx_v_self->index_dict->__pyx_base.ptr, __pyx_t_2.get_mdb_val(), 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_index_it = boost::move(__pyx_t_3);

  /* "pcontainers/expiry_dict_impl.pxi":123
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 * 
 *         if index_it.has_reached_end():             # <<<<<<<<<<<<<<
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 */
  try {
    __pyx_t_4 = __pyx_v_index_it.has_reached_end();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "pcontainers/expiry_dict_impl.pxi":124
 * 
 *         if index_it.has_reached_end():
 *             raise NotFound()             # <<<<<<<<<<<<<<
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 *         if s_expiry == b"none":
 */
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/expiry_dict_impl.pxi":123
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 * 
 *         if index_it.has_reached_end():             # <<<<<<<<<<<<<<
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":125
 *         if index_it.has_reached_end():
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))             # <<<<<<<<<<<<<<
 *         if s_expiry == b"none":
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->index_dict), __pyx_n_s_loads); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_value_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), __pyx_v_index_it); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_8) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_v_s_expiry = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":126
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 *         if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return
 */
  __pyx_t_5 = (__Pyx_PyBytes_Equals(__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_5) {

    /* "pcontainers/expiry_dict_impl.pxi":127
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 *         if s_expiry == b"none":
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))             # <<<<<<<<<<<<<<
 *             return
 *         cdef time_t expiry = int(s_expiry)
 */
    __pyx_t_1 = __Pyx_PyInt_From_time_t((__pyx_v_now - 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), __pyx_v_index_it, __pyx_v_index_key, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":128
 *         if s_expiry == b"none":
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return             # <<<<<<<<<<<<<<
 *         cdef time_t expiry = int(s_expiry)
 *         if now < expiry:
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "pcontainers/expiry_dict_impl.pxi":126
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 *         if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":129
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return
 *         cdef time_t expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *         if now < expiry:
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 */
  __pyx_t_1 = PyNumber_Int(__pyx_v_s_expiry); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyInt_As_time_t(__pyx_t_1); if (unlikely((__pyx_t_10 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_expiry = __pyx_t_10;

  /* "pcontainers/expiry_dict_impl.pxi":130
 *             return
 *         cdef time_t expiry = int(s_expiry)
 *         if now < expiry:             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return
 */
  __pyx_t_5 = ((__pyx_v_now < __pyx_v_expiry) != 0);
  if (__pyx_t_5) {

    /* "pcontainers/expiry_dict_impl.pxi":131
 *         cdef time_t expiry = int(s_expiry)
 *         if now < expiry:
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))             # <<<<<<<<<<<<<<
 *             return
 *         raise NotFound()
 */
    __pyx_t_1 = __Pyx_PyInt_From_time_t((__pyx_v_now - 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), __pyx_v_index_it, __pyx_v_index_key, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":132
 *         if now < expiry:
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return             # <<<<<<<<<<<<<<
 *         raise NotFound()
 * 
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "pcontainers/expiry_dict_impl.pxi":130
 *             return
 *         cdef time_t expiry = int(s_expiry)
 *         if now < expiry:             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":133
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return
 *         raise NotFound()             # <<<<<<<<<<<<<<
 * 
 *     cpdef pop(self, key, default=None):
 */
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_9 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_9) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_9); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[4]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/expiry_dict_impl.pxi":118
 *             index_it.reset()
 * 
 *     def __delitem__(self, key):             # <<<<<<<<<<<<<<
 *         cdef time_t now = c_time(NULL)
 *         index_key = self.index_dict.key_chain.dumps(key)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__delitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_index_key);
  __Pyx_XDECREF(__pyx_v_s_expiry);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":135
 *         raise NotFound()
 * 
 *     cpdef pop(self, key, default=None):             # <<<<<<<<<<<<<<
 *         cdef time_t now = c_time(NULL)
 *         index_key = self.index_dict.key_chain.dumps(key)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_21pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_pop(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_pop *__pyx_optional_args) {
  PyObject *__pyx_v_default = ((PyObject *)Py_None);
  time_t __pyx_v_now;
  PyObject *__pyx_v_index_key = NULL;
  quiet::PersistentDict::iterator __pyx_v_index_it;
  PyObject *__pyx_v_s_expiry = NULL;
  time_t __pyx_v_expiry;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  utils::PyBufferWrap __pyx_t_7;
  quiet::PersistentDict::iterator __pyx_t_8;
  bool __pyx_t_9;
  int __pyx_t_10;
  time_t __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default = __pyx_optional_args->__pyx_default;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pop); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_21pop)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_key);
      __Pyx_INCREF(__pyx_v_default);
      __Pyx_GIVEREF(__pyx_v_default);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_default);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/expiry_dict_impl.pxi":136
 * 
 *     cpdef pop(self, key, default=None):
 *         cdef time_t now = c_time(NULL)             # <<<<<<<<<<<<<<
 *         index_key = self.index_dict.key_chain.dumps(key)
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 */
  __pyx_v_now = time(NULL);

  /* "pcontainers/expiry_dict_impl.pxi":137
 *     cpdef pop(self, key, default=None):
 *         cdef time_t now = c_time(NULL)
 *         index_key = self.index_dict.key_chain.dumps(key)             # <<<<<<<<<<<<<<
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 *         if index_it.has_reached_end():
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_index_key = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":138
 *         cdef time_t now = c_time(NULL)
 *         index_key = self.index_dict.key_chain.dumps(key)
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))             # <<<<<<<<<<<<<<
 *         if index_it.has_reached_end():
 *             raise NotFound()
 */
  try {
    __pyx_t_7 = utils::PyBufferWrap(__pyx_v_index_key);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  try {
    __pyx_t_8 = quiet::PersistentDict::iterator(__pyx_v_self->index_dict->__pyx_base.ptr, __pyx_t_7.get_mdb_val(), 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_index_it = boost::move(__pyx_t_8);

  /* "pcontainers/expiry_dict_impl.pxi":139
 *         index_key = self.index_dict.key_chain.dumps(key)
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 *         if index_it.has_reached_end():             # <<<<<<<<<<<<<<
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 */
  try {
    __pyx_t_9 = __pyx_v_index_it.has_reached_end();
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_10 = (__pyx_t_9 != 0);
  if (__pyx_t_10) {

    /* "pcontainers/expiry_dict_impl.pxi":140
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 *         if index_it.has_reached_end():
 *             raise NotFound()             # <<<<<<<<<<<<<<
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 *         if s_expiry == b"none":
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/expiry_dict_impl.pxi":139
 *         index_key = self.index_dict.key_chain.dumps(key)
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, PyBufferWrap(index_key).get_mdb_val(), 0))
 *         if index_it.has_reached_end():             # <<<<<<<<<<<<<<
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":141
 *         if index_it.has_reached_end():
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))             # <<<<<<<<<<<<<<
 *         if s_expiry == b"none":
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->index_dict), __pyx_n_s_loads); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_value_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), __pyx_v_index_it); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_s_expiry = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":142
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 *         if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]
 */
  __pyx_t_10 = (__Pyx_PyBytes_Equals(__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_10 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_10) {

    /* "pcontainers/expiry_dict_impl.pxi":143
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 *         if s_expiry == b"none":
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))             # <<<<<<<<<<<<<<
 *             return self.values_dict[key]
 *         cdef time_t expiry = int(s_expiry)
 */
    __pyx_t_1 = __Pyx_PyInt_From_time_t((__pyx_v_now - 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), __pyx_v_index_it, __pyx_v_index_key, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":144
 *         if s_expiry == b"none":
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]             # <<<<<<<<<<<<<<
 *         cdef time_t expiry = int(s_expiry)
 *         if now < expiry:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self->values_dict), __pyx_v_key); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pcontainers/expiry_dict_impl.pxi":142
 *             raise NotFound()
 *         s_expiry = self.index_dict.loads(self.index_dict.raw_get_value_buf(index_it))
 *         if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":145
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]
 *         cdef time_t expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *         if now < expiry:
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 */
  __pyx_t_1 = PyNumber_Int(__pyx_v_s_expiry); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_11 = __Pyx_PyInt_As_time_t(__pyx_t_1); if (unlikely((__pyx_t_11 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_expiry = __pyx_t_11;

  /* "pcontainers/expiry_dict_impl.pxi":146
 *             return self.values_dict[key]
 *         cdef time_t expiry = int(s_expiry)
 *         if now < expiry:             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]
 */
  __pyx_t_10 = ((__pyx_v_now < __pyx_v_expiry) != 0);
  if (__pyx_t_10) {

    /* "pcontainers/expiry_dict_impl.pxi":147
 *         cdef time_t expiry = int(s_expiry)
 *         if now < expiry:
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))             # <<<<<<<<<<<<<<
 *             return self.values_dict[key]
 *         if default:
 */
    __pyx_t_1 = __Pyx_PyInt_From_time_t((__pyx_v_now - 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), __pyx_v_index_it, __pyx_v_index_key, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":148
 *         if now < expiry:
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]             # <<<<<<<<<<<<<<
 *         if default:
 *             return default
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self->values_dict), __pyx_v_key); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pcontainers/expiry_dict_impl.pxi":146
 *             return self.values_dict[key]
 *         cdef time_t expiry = int(s_expiry)
 *         if now < expiry:             # <<<<<<<<<<<<<<
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":149
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]
 *         if default:             # <<<<<<<<<<<<<<
 *             return default
 *         raise NotFound()
 */
  __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_v_default); if (unlikely(__pyx_t_10 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_10) {

    /* "pcontainers/expiry_dict_impl.pxi":150
 *             return self.values_dict[key]
 *         if default:
 *             return default             # <<<<<<<<<<<<<<
 *         raise NotFound()
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_default);
    __pyx_r = __pyx_v_default;
    goto __pyx_L0;

    /* "pcontainers/expiry_dict_impl.pxi":149
 *             self.index_dict.raw_set_item_buf(index_it, index_key, self.index_dict.value_chain.dumps(bytes(now - 1)))
 *             return self.values_dict[key]
 *         if default:             # <<<<<<<<<<<<<<
 *             return default
 *         raise NotFound()
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":151
 *         if default:
 *             return default
 *         raise NotFound()             # <<<<<<<<<<<<<<
 * 
 *     cpdef popitem(self):
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_NotFound); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[4]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/expiry_dict_impl.pxi":135
 *         raise NotFound()
 * 
 *     cpdef pop(self, key, default=None):             # <<<<<<<<<<<<<<
 *         cdef time_t now = c_time(NULL)
 *         index_key = self.index_dict.key_chain.dumps(key)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_index_key);
  __Pyx_XDECREF(__pyx_v_s_expiry);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_21pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_21pop(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_key = 0;
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pop (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_key,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pop") < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_key = values[0];
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pop", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_20pop(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), __pyx_v_key, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_20pop(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_pop __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pop", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_default = __pyx_v_default;
  __pyx_t_1 = __pyx_vtabptr_11pcontainers_6_pdict_expiry_dict->pop(__pyx_v_self, __pyx_v_key, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.pop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":153
 *         raise NotFound()
 * 
 *     cpdef popitem(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, 0, 0))
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_23popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_11expiry_dict_popitem(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, int __pyx_skip_dispatch) {
  time_t __pyx_v_expiry;
  quiet::PersistentDict::iterator __pyx_v_index_it;
  time_t __pyx_v_now;
  utils::PyBufferWrap __pyx_v_index_value_view;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_s_expiry = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  quiet::PersistentDict::iterator __pyx_t_5;
  utils::PyBufferWrap __pyx_t_6;
  bool __pyx_t_7;
  int __pyx_t_8;
  time_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("popitem", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_popitem); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_23popitem)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/expiry_dict_impl.pxi":155
 *     cpdef popitem(self):
 *         cdef time_t expiry
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, 0, 0))             # <<<<<<<<<<<<<<
 *         cdef time_t now = c_time(NULL)
 *         cdef PyBufferWrap index_value_view = move(PyBufferWrap(self.index_dict.value_chain.dumps(bytes(now - 1))))
 */
  try {
    __pyx_t_5 = quiet::PersistentDict::iterator(__pyx_v_self->index_dict->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_index_it = boost::move(__pyx_t_5);

  /* "pcontainers/expiry_dict_impl.pxi":156
 *         cdef time_t expiry
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, 0, 0))
 *         cdef time_t now = c_time(NULL)             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap index_value_view = move(PyBufferWrap(self.index_dict.value_chain.dumps(bytes(now - 1))))
 * 
 */
  __pyx_v_now = time(NULL);

  /* "pcontainers/expiry_dict_impl.pxi":157
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, 0, 0))
 *         cdef time_t now = c_time(NULL)
 *         cdef PyBufferWrap index_value_view = move(PyBufferWrap(self.index_dict.value_chain.dumps(bytes(now - 1))))             # <<<<<<<<<<<<<<
 * 
 *         while not index_it.has_reached_end():
 */
  __pyx_t_1 = __Pyx_PyInt_From_time_t((__pyx_v_now - 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  try {
    __pyx_t_6 = utils::PyBufferWrap(__pyx_t_2);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_index_value_view = boost::move(__pyx_t_6);

  /* "pcontainers/expiry_dict_impl.pxi":159
 *         cdef PyBufferWrap index_value_view = move(PyBufferWrap(self.index_dict.value_chain.dumps(bytes(now - 1))))
 * 
 *         while not index_it.has_reached_end():             # <<<<<<<<<<<<<<
 *             key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(index_it))
 *             s_expiry = self.index_dict.value_chain.loads(self.index_dict.raw_get_value_buf(index_it))
 */
  while (1) {
    try {
      __pyx_t_7 = __pyx_v_index_it.has_reached_end();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[4]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_8 = ((!(__pyx_t_7 != 0)) != 0);
    if (!__pyx_t_8) break;

    /* "pcontainers/expiry_dict_impl.pxi":160
 * 
 *         while not index_it.has_reached_end():
 *             key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(index_it))             # <<<<<<<<<<<<<<
 *             s_expiry = self.index_dict.value_chain.loads(self.index_dict.raw_get_value_buf(index_it))
 *             if s_expiry == b"none":
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_key_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), __pyx_v_index_it); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->key_chain), __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":161
 *         while not index_it.has_reached_end():
 *             key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(index_it))
 *             s_expiry = self.index_dict.value_chain.loads(self.index_dict.raw_get_value_buf(index_it))             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 with nogil:
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_get_value_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), __pyx_v_index_it); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_s_expiry, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":162
 *             key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(index_it))
 *             s_expiry = self.index_dict.value_chain.loads(self.index_dict.raw_get_value_buf(index_it))
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 with nogil:
 *                     index_it.set_value(index_value_view.get_mdb_val())
 */
    __pyx_t_8 = (__Pyx_PyBytes_Equals(__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_8) {

      /* "pcontainers/expiry_dict_impl.pxi":163
 *             s_expiry = self.index_dict.value_chain.loads(self.index_dict.raw_get_value_buf(index_it))
 *             if s_expiry == b"none":
 *                 with nogil:             # <<<<<<<<<<<<<<
 *                     index_it.set_value(index_value_view.get_mdb_val())
 *                 return key, self.values_dict[key]
 */
      {
          #ifdef WITH_THREAD
          PyThreadState *_save;
          Py_UNBLOCK_THREADS
          #endif
          /*try:*/ {

            /* "pcontainers/expiry_dict_impl.pxi":164
 *             if s_expiry == b"none":
 *                 with nogil:
 *                     index_it.set_value(index_value_view.get_mdb_val())             # <<<<<<<<<<<<<<
 *                 return key, self.values_dict[key]
 *             expiry = int(s_expiry)
 */
            try {
              __pyx_v_index_it.set_value(__pyx_v_index_value_view.get_mdb_val());
            } catch(...) {
              #ifdef WITH_THREAD
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
              #endif
              __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
              #ifdef WITH_THREAD
              PyGILState_Release(__pyx_gilstate_save);
              #endif
              {__pyx_filename = __pyx_f[4]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L9_error;}
            }
          }

          /* "pcontainers/expiry_dict_impl.pxi":163
 *             s_expiry = self.index_dict.value_chain.loads(self.index_dict.raw_get_value_buf(index_it))
 *             if s_expiry == b"none":
 *                 with nogil:             # <<<<<<<<<<<<<<
 *                     index_it.set_value(index_value_view.get_mdb_val())
 *                 return key, self.values_dict[key]
 */
          /*finally:*/ {
            /*normal exit:*/{
              #ifdef WITH_THREAD
              Py_BLOCK_THREADS
              #endif
              goto __pyx_L10;
            }
            __pyx_L9_error: {
              #ifdef WITH_THREAD
              Py_BLOCK_THREADS
              #endif
              goto __pyx_L1_error;
            }
            __pyx_L10:;
          }
      }

      /* "pcontainers/expiry_dict_impl.pxi":165
 *                 with nogil:
 *                     index_it.set_value(index_value_view.get_mdb_val())
 *                 return key, self.values_dict[key]             # <<<<<<<<<<<<<<
 *             expiry = int(s_expiry)
 *             if now < expiry:
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_GetItem(((PyObject *)__pyx_v_self->values_dict), __pyx_v_key); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_key);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L0;

      /* "pcontainers/expiry_dict_impl.pxi":162
 *             key = self.index_dict.key_chain.loads(self.index_dict.raw_get_key_buf(index_it))
 *             s_expiry = self.index_dict.value_chain.loads(self.index_dict.raw_get_value_buf(index_it))
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 with nogil:
 *                     index_it.set_value(index_value_view.get_mdb_val())
 */
    }

    /* "pcontainers/expiry_dict_impl.pxi":166
 *                     index_it.set_value(index_value_view.get_mdb_val())
 *                 return key, self.values_dict[key]
 *             expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *             if now < expiry:
 *                 with nogil:
 */
    __pyx_t_1 = PyNumber_Int(__pyx_v_s_expiry); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_PyInt_As_time_t(__pyx_t_1); if (unlikely((__pyx_t_9 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_expiry = __pyx_t_9;

    /* "pcontainers/expiry_dict_impl.pxi":167
 *                 return key, self.values_dict[key]
 *             expiry = int(s_expiry)
 *             if now < expiry:             # <<<<<<<<<<<<<<
 *                 with nogil:
 *                     index_it.set_value(index_value_view.get_mdb_val())
 */
    __pyx_t_8 = ((__pyx_v_now < __pyx_v_expiry) != 0);
    if (__pyx_t_8) {

      /* "pcontainers/expiry_dict_impl.pxi":168
 *             expiry = int(s_expiry)
 *             if now < expiry:
 *                 with nogil:             # <<<<<<<<<<<<<<
 *                     index_it.set_value(index_value_view.get_mdb_val())
 *                 return key, self.values_dict[key]
 */
      {
          #ifdef WITH_THREAD
          PyThreadState *_save;
          Py_UNBLOCK_THREADS
          #endif
          /*try:*/ {

            /* "pcontainers/expiry_dict_impl.pxi":169
 *             if now < expiry:
 *                 with nogil:
 *                     index_it.set_value(index_value_view.get_mdb_val())             # <<<<<<<<<<<<<<
 *                 return key, self.values_dict[key]
 *             index_it.incr()
 */
            try {
              __pyx_v_index_it.set_value(__pyx_v_index_value_view.get_mdb_val());
            } catch(...) {
              #ifdef WITH_THREAD
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
              #endif
              __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
              #ifdef WITH_THREAD
              PyGILState_Release(__pyx_gilstate_save);
              #endif
              {__pyx_filename = __pyx_f[4]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L15_error;}
            }
          }

          /* "pcontainers/expiry_dict_impl.pxi":168
 *             expiry = int(s_expiry)
 *             if now < expiry:
 *                 with nogil:             # <<<<<<<<<<<<<<
 *                     index_it.set_value(index_value_view.get_mdb_val())
 *                 return key, self.values_dict[key]
 */
          /*finally:*/ {
            /*normal exit:*/{
              #ifdef WITH_THREAD
              Py_BLOCK_THREADS
              #endif
              goto __pyx_L16;
            }
            __pyx_L15_error: {
              #ifdef WITH_THREAD
              Py_BLOCK_THREADS
              #endif
              goto __pyx_L1_error;
            }
            __pyx_L16:;
          }
      }

      /* "pcontainers/expiry_dict_impl.pxi":170
 *                 with nogil:
 *                     index_it.set_value(index_value_view.get_mdb_val())
 *                 return key, self.values_dict[key]             # <<<<<<<<<<<<<<
 *             index_it.incr()
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self->values_dict), __pyx_v_key); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_key);
      __Pyx_GIVEREF(__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_key);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      goto __pyx_L0;

      /* "pcontainers/expiry_dict_impl.pxi":167
 *                 return key, self.values_dict[key]
 *             expiry = int(s_expiry)
 *             if now < expiry:             # <<<<<<<<<<<<<<
 *                 with nogil:
 *                     index_it.set_value(index_value_view.get_mdb_val())
 */
    }

    /* "pcontainers/expiry_dict_impl.pxi":171
 *                     index_it.set_value(index_value_view.get_mdb_val())
 *                 return key, self.values_dict[key]
 *             index_it.incr()             # <<<<<<<<<<<<<<
 * 
 *         raise EmptyDatabase()
 */
    try {
      __pyx_v_index_it.quiet::PersistentDict::iterator::operator++();
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[4]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }

  /* "pcontainers/expiry_dict_impl.pxi":173
 *             index_it.incr()
 * 
 *         raise EmptyDatabase()             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_EmptyDatabase); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_2, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {__pyx_filename = __pyx_f[4]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/expiry_dict_impl.pxi":153
 *         raise NotFound()
 * 
 *     cpdef popitem(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef cppIterator index_it = move(cppIterator(self.index_dict.ptr, 0, 0))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.popitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_s_expiry);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_23popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_23popitem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("popitem (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_22popitem(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_22popitem(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("popitem", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_11expiry_dict_popitem(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.popitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_11expiry_dict_26generator6(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/expiry_dict_impl.pxi":175
 *         raise EmptyDatabase()
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_25__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_25__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_24__iter__(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_24__iter__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_14___iter__(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_14___iter__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_11expiry_dict_26generator6, (PyObject *) __pyx_cur_scope, __pyx_n_s_iter, __pyx_n_s_expiry_dict___iter); if (unlikely(!gen)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_11expiry_dict_26generator6(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  time_t __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L9_resume_from_yield;
    case 2: goto __pyx_L11_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/expiry_dict_impl.pxi":177
 *     def __iter__(self):
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)             # <<<<<<<<<<<<<<
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":
 */
  __pyx_cur_scope->__pyx_v_now = time(NULL);

  /* "pcontainers/expiry_dict_impl.pxi":178
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 yield key
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self->index_dict), __pyx_n_s_items); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_3)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[4]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L7_unpacking_done:;
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_key);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_key, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_s_expiry);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_s_expiry, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":179
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 yield key
 *             else:
 */
    __pyx_t_9 = (__Pyx_PyBytes_Equals(__pyx_cur_scope->__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_9) {

      /* "pcontainers/expiry_dict_impl.pxi":180
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":
 *                 yield key             # <<<<<<<<<<<<<<
 *             else:
 *                 expiry = int(s_expiry)
 */
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_key);
      __pyx_r = __pyx_cur_scope->__pyx_v_key;
      __Pyx_XGIVEREF(__pyx_t_2);
      __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
      __pyx_cur_scope->__pyx_t_1 = __pyx_t_4;
      __pyx_cur_scope->__pyx_t_2 = __pyx_t_5;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L9_resume_from_yield:;
      __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
      __pyx_cur_scope->__pyx_t_0 = 0;
      __Pyx_XGOTREF(__pyx_t_2);
      __pyx_t_4 = __pyx_cur_scope->__pyx_t_1;
      __pyx_t_5 = __pyx_cur_scope->__pyx_t_2;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/expiry_dict_impl.pxi":179
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 yield key
 *             else:
 */
      goto __pyx_L8;
    }

    /* "pcontainers/expiry_dict_impl.pxi":182
 *                 yield key
 *             else:
 *                 expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *                 if now < expiry:
 *                     yield key
 */
    /*else*/ {
      __pyx_t_1 = PyNumber_Int(__pyx_cur_scope->__pyx_v_s_expiry); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = __Pyx_PyInt_As_time_t(__pyx_t_1); if (unlikely((__pyx_t_10 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_cur_scope->__pyx_v_expiry = __pyx_t_10;

      /* "pcontainers/expiry_dict_impl.pxi":183
 *             else:
 *                 expiry = int(s_expiry)
 *                 if now < expiry:             # <<<<<<<<<<<<<<
 *                     yield key
 * 
 */
      __pyx_t_9 = ((__pyx_cur_scope->__pyx_v_now < __pyx_cur_scope->__pyx_v_expiry) != 0);
      if (__pyx_t_9) {

        /* "pcontainers/expiry_dict_impl.pxi":184
 *                 expiry = int(s_expiry)
 *                 if now < expiry:
 *                     yield key             # <<<<<<<<<<<<<<
 * 
 *     def keys(self):
 */
        __Pyx_INCREF(__pyx_cur_scope->__pyx_v_key);
        __pyx_r = __pyx_cur_scope->__pyx_v_key;
        __Pyx_XGIVEREF(__pyx_t_2);
        __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
        __pyx_cur_scope->__pyx_t_1 = __pyx_t_4;
        __pyx_cur_scope->__pyx_t_2 = __pyx_t_5;
        __Pyx_XGIVEREF(__pyx_r);
        __Pyx_RefNannyFinishContext();
        /* return from generator, yielding value */
        __pyx_generator->resume_label = 2;
        return __pyx_r;
        __pyx_L11_resume_from_yield:;
        __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
        __pyx_cur_scope->__pyx_t_0 = 0;
        __Pyx_XGOTREF(__pyx_t_2);
        __pyx_t_4 = __pyx_cur_scope->__pyx_t_1;
        __pyx_t_5 = __pyx_cur_scope->__pyx_t_2;
        if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

        /* "pcontainers/expiry_dict_impl.pxi":183
 *             else:
 *                 expiry = int(s_expiry)
 *                 if now < expiry:             # <<<<<<<<<<<<<<
 *                     yield key
 * 
 */
      }
    }
    __pyx_L8:;

    /* "pcontainers/expiry_dict_impl.pxi":178
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 yield key
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":175
 *         raise EmptyDatabase()
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":186
 *                     yield key
 * 
 *     def keys(self):             # <<<<<<<<<<<<<<
 *         return self.__iter__(self)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_28keys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_28keys(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("keys (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_27keys(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_27keys(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("keys", 0);

  /* "pcontainers/expiry_dict_impl.pxi":187
 * 
 *     def keys(self):
 *         return self.__iter__(self)             # <<<<<<<<<<<<<<
 * 
 *     def values(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_iter); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_self));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/expiry_dict_impl.pxi":186
 *                     yield key
 * 
 *     def keys(self):             # <<<<<<<<<<<<<<
 *         return self.__iter__(self)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.keys", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_11expiry_dict_31generator7(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/expiry_dict_impl.pxi":189
 *         return self.__iter__(self)
 * 
 *     def values(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_30values(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_30values(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("values (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_29values(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_29values(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("values", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_15_values(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_15_values, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_11expiry_dict_31generator7, (PyObject *) __pyx_cur_scope, __pyx_n_s_values, __pyx_n_s_expiry_dict_values); if (unlikely(!gen)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_11expiry_dict_31generator7(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  time_t __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L9_resume_from_yield;
    case 2: goto __pyx_L11_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/expiry_dict_impl.pxi":191
 *     def values(self):
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)             # <<<<<<<<<<<<<<
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":
 */
  __pyx_cur_scope->__pyx_v_now = time(NULL);

  /* "pcontainers/expiry_dict_impl.pxi":192
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 yield self.values_dict[key]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self->index_dict), __pyx_n_s_items); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_3)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[4]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L7_unpacking_done:;
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_key);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_key, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_s_expiry);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_s_expiry, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":193
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 yield self.values_dict[key]
 *             else:
 */
    __pyx_t_9 = (__Pyx_PyBytes_Equals(__pyx_cur_scope->__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_9) {

      /* "pcontainers/expiry_dict_impl.pxi":194
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":
 *                 yield self.values_dict[key]             # <<<<<<<<<<<<<<
 *             else:
 *                 expiry = int(s_expiry)
 */
      __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_cur_scope->__pyx_v_self->values_dict), __pyx_cur_scope->__pyx_v_key); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      __Pyx_XGIVEREF(__pyx_t_2);
      __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
      __pyx_cur_scope->__pyx_t_1 = __pyx_t_4;
      __pyx_cur_scope->__pyx_t_2 = __pyx_t_5;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L9_resume_from_yield:;
      __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
      __pyx_cur_scope->__pyx_t_0 = 0;
      __Pyx_XGOTREF(__pyx_t_2);
      __pyx_t_4 = __pyx_cur_scope->__pyx_t_1;
      __pyx_t_5 = __pyx_cur_scope->__pyx_t_2;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/expiry_dict_impl.pxi":193
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 yield self.values_dict[key]
 *             else:
 */
      goto __pyx_L8;
    }

    /* "pcontainers/expiry_dict_impl.pxi":196
 *                 yield self.values_dict[key]
 *             else:
 *                 expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *                 if now < expiry:
 *                     yield self.values_dict[key]
 */
    /*else*/ {
      __pyx_t_1 = PyNumber_Int(__pyx_cur_scope->__pyx_v_s_expiry); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = __Pyx_PyInt_As_time_t(__pyx_t_1); if (unlikely((__pyx_t_10 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_cur_scope->__pyx_v_expiry = __pyx_t_10;

      /* "pcontainers/expiry_dict_impl.pxi":197
 *             else:
 *                 expiry = int(s_expiry)
 *                 if now < expiry:             # <<<<<<<<<<<<<<
 *                     yield self.values_dict[key]
 * 
 */
      __pyx_t_9 = ((__pyx_cur_scope->__pyx_v_now < __pyx_cur_scope->__pyx_v_expiry) != 0);
      if (__pyx_t_9) {

        /* "pcontainers/expiry_dict_impl.pxi":198
 *                 expiry = int(s_expiry)
 *                 if now < expiry:
 *                     yield self.values_dict[key]             # <<<<<<<<<<<<<<
 * 
 *     def items(self):
 */
        __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_cur_scope->__pyx_v_self->values_dict), __pyx_cur_scope->__pyx_v_key); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_r = __pyx_t_1;
        __pyx_t_1 = 0;
        __Pyx_XGIVEREF(__pyx_t_2);
        __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
        __pyx_cur_scope->__pyx_t_1 = __pyx_t_4;
        __pyx_cur_scope->__pyx_t_2 = __pyx_t_5;
        __Pyx_XGIVEREF(__pyx_r);
        __Pyx_RefNannyFinishContext();
        /* return from generator, yielding value */
        __pyx_generator->resume_label = 2;
        return __pyx_r;
        __pyx_L11_resume_from_yield:;
        __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
        __pyx_cur_scope->__pyx_t_0 = 0;
        __Pyx_XGOTREF(__pyx_t_2);
        __pyx_t_4 = __pyx_cur_scope->__pyx_t_1;
        __pyx_t_5 = __pyx_cur_scope->__pyx_t_2;
        if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

        /* "pcontainers/expiry_dict_impl.pxi":197
 *             else:
 *                 expiry = int(s_expiry)
 *                 if now < expiry:             # <<<<<<<<<<<<<<
 *                     yield self.values_dict[key]
 * 
 */
      }
    }
    __pyx_L8:;

    /* "pcontainers/expiry_dict_impl.pxi":192
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 yield self.values_dict[key]
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":189
 *         return self.__iter__(self)
 * 
 *     def values(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_11pcontainers_6_pdict_11expiry_dict_34generator8(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pcontainers/expiry_dict_impl.pxi":200
 *                     yield self.values_dict[key]
 * 
 *     def items(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_33items(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_33items(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("items (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_32items(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_32items(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("items", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_16_items(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_16_items, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_11pcontainers_6_pdict_11expiry_dict_34generator8, (PyObject *) __pyx_cur_scope, __pyx_n_s_items, __pyx_n_s_expiry_dict_items); if (unlikely(!gen)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_11pcontainers_6_pdict_11expiry_dict_34generator8(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *__pyx_cur_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  time_t __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L9_resume_from_yield;
    case 2: goto __pyx_L11_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/expiry_dict_impl.pxi":202
 *     def items(self):
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)             # <<<<<<<<<<<<<<
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":
 */
  __pyx_cur_scope->__pyx_v_now = time(NULL);

  /* "pcontainers/expiry_dict_impl.pxi":203
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 yield (key, self.values_dict[key])
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self->index_dict), __pyx_n_s_items); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_3)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[4]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L7_unpacking_done:;
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_key);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_key, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_s_expiry);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_s_expiry, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":204
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 yield (key, self.values_dict[key])
 *             else:
 */
    __pyx_t_9 = (__Pyx_PyBytes_Equals(__pyx_cur_scope->__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_9) {

      /* "pcontainers/expiry_dict_impl.pxi":205
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":
 *                 yield (key, self.values_dict[key])             # <<<<<<<<<<<<<<
 *             else:
 *                 expiry = int(s_expiry)
 */
      __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_cur_scope->__pyx_v_self->values_dict), __pyx_cur_scope->__pyx_v_key); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_key);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_cur_scope->__pyx_v_key);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_r = __pyx_t_6;
      __pyx_t_6 = 0;
      __Pyx_XGIVEREF(__pyx_t_2);
      __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
      __pyx_cur_scope->__pyx_t_1 = __pyx_t_4;
      __pyx_cur_scope->__pyx_t_2 = __pyx_t_5;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L9_resume_from_yield:;
      __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
      __pyx_cur_scope->__pyx_t_0 = 0;
      __Pyx_XGOTREF(__pyx_t_2);
      __pyx_t_4 = __pyx_cur_scope->__pyx_t_1;
      __pyx_t_5 = __pyx_cur_scope->__pyx_t_2;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/expiry_dict_impl.pxi":204
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 yield (key, self.values_dict[key])
 *             else:
 */
      goto __pyx_L8;
    }

    /* "pcontainers/expiry_dict_impl.pxi":207
 *                 yield (key, self.values_dict[key])
 *             else:
 *                 expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *                 if now < expiry:
 *                     yield (key, self.values_dict[key])
 */
    /*else*/ {
      __pyx_t_6 = PyNumber_Int(__pyx_cur_scope->__pyx_v_s_expiry); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = __Pyx_PyInt_As_time_t(__pyx_t_6); if (unlikely((__pyx_t_10 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_cur_scope->__pyx_v_expiry = __pyx_t_10;

      /* "pcontainers/expiry_dict_impl.pxi":208
 *             else:
 *                 expiry = int(s_expiry)
 *                 if now < expiry:             # <<<<<<<<<<<<<<
 *                     yield (key, self.values_dict[key])
 * 
 */
      __pyx_t_9 = ((__pyx_cur_scope->__pyx_v_now < __pyx_cur_scope->__pyx_v_expiry) != 0);
      if (__pyx_t_9) {

        /* "pcontainers/expiry_dict_impl.pxi":209
 *                 expiry = int(s_expiry)
 *                 if now < expiry:
 *                     yield (key, self.values_dict[key])             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, key):
 */
        __pyx_t_6 = PyObject_GetItem(((PyObject *)__pyx_cur_scope->__pyx_v_self->values_dict), __pyx_cur_scope->__pyx_v_key); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_INCREF(__pyx_cur_scope->__pyx_v_key);
        __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_key);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_cur_scope->__pyx_v_key);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_r = __pyx_t_1;
        __pyx_t_1 = 0;
        __Pyx_XGIVEREF(__pyx_t_2);
        __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
        __pyx_cur_scope->__pyx_t_1 = __pyx_t_4;
        __pyx_cur_scope->__pyx_t_2 = __pyx_t_5;
        __Pyx_XGIVEREF(__pyx_r);
        __Pyx_RefNannyFinishContext();
        /* return from generator, yielding value */
        __pyx_generator->resume_label = 2;
        return __pyx_r;
        __pyx_L11_resume_from_yield:;
        __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
        __pyx_cur_scope->__pyx_t_0 = 0;
        __Pyx_XGOTREF(__pyx_t_2);
        __pyx_t_4 = __pyx_cur_scope->__pyx_t_1;
        __pyx_t_5 = __pyx_cur_scope->__pyx_t_2;
        if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

        /* "pcontainers/expiry_dict_impl.pxi":208
 *             else:
 *                 expiry = int(s_expiry)
 *                 if now < expiry:             # <<<<<<<<<<<<<<
 *                     yield (key, self.values_dict[key])
 * 
 */
      }
    }
    __pyx_L8:;

    /* "pcontainers/expiry_dict_impl.pxi":203
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 *         for key, s_expiry in self.index_dict.items():             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 yield (key, self.values_dict[key])
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":200
 *                     yield self.values_dict[key]
 * 
 *     def items(self):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         cdef time_t now = c_time(NULL)
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("items", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":211
 *                     yield (key, self.values_dict[key])
 * 
 *     def __contains__(self, key):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         if key in self.index_dict:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_11expiry_dict_36__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_11expiry_dict_36__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_35__contains__(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_11expiry_dict_35__contains__(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_key) {
  time_t __pyx_v_expiry;
  PyObject *__pyx_v_s_expiry = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  time_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__contains__", 0);

  /* "pcontainers/expiry_dict_impl.pxi":213
 *     def __contains__(self, key):
 *         cdef time_t expiry
 *         if key in self.index_dict:             # <<<<<<<<<<<<<<
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":
 */
  __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_key, ((PyObject *)__pyx_v_self->index_dict), Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/expiry_dict_impl.pxi":214
 *         cdef time_t expiry
 *         if key in self.index_dict:
 *             s_expiry = self.index_dict[key]             # <<<<<<<<<<<<<<
 *             if s_expiry == b"none":
 *                 return True
 */
    __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_self->index_dict), __pyx_v_key); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_s_expiry = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pcontainers/expiry_dict_impl.pxi":215
 *         if key in self.index_dict:
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 return True
 *             else:
 */
    __pyx_t_2 = (__Pyx_PyBytes_Equals(__pyx_v_s_expiry, __pyx_n_b_none, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_2) {

      /* "pcontainers/expiry_dict_impl.pxi":216
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":
 *                 return True             # <<<<<<<<<<<<<<
 *             else:
 *                 expiry = int(s_expiry)
 */
      __pyx_r = 1;
      goto __pyx_L0;

      /* "pcontainers/expiry_dict_impl.pxi":215
 *         if key in self.index_dict:
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":             # <<<<<<<<<<<<<<
 *                 return True
 *             else:
 */
    }

    /* "pcontainers/expiry_dict_impl.pxi":218
 *                 return True
 *             else:
 *                 expiry = int(s_expiry)             # <<<<<<<<<<<<<<
 *                 if c_time(NULL) < expiry:
 *                     return True
 */
    /*else*/ {
      __pyx_t_3 = PyNumber_Int(__pyx_v_s_expiry); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyInt_As_time_t(__pyx_t_3); if (unlikely((__pyx_t_4 == (time_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_v_expiry = __pyx_t_4;

      /* "pcontainers/expiry_dict_impl.pxi":219
 *             else:
 *                 expiry = int(s_expiry)
 *                 if c_time(NULL) < expiry:             # <<<<<<<<<<<<<<
 *                     return True
 *                 else:
 */
      __pyx_t_2 = ((time(NULL) < __pyx_v_expiry) != 0);
      if (__pyx_t_2) {

        /* "pcontainers/expiry_dict_impl.pxi":220
 *                 expiry = int(s_expiry)
 *                 if c_time(NULL) < expiry:
 *                     return True             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise False
 */
        __pyx_r = 1;
        goto __pyx_L0;

        /* "pcontainers/expiry_dict_impl.pxi":219
 *             else:
 *                 expiry = int(s_expiry)
 *                 if c_time(NULL) < expiry:             # <<<<<<<<<<<<<<
 *                     return True
 *                 else:
 */
      }

      /* "pcontainers/expiry_dict_impl.pxi":222
 *                     return True
 *                 else:
 *                     raise False             # <<<<<<<<<<<<<<
 *         else:
 *             return False
 */
      /*else*/ {
        __Pyx_Raise(Py_False, 0, 0, 0);
        {__pyx_filename = __pyx_f[4]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }

    /* "pcontainers/expiry_dict_impl.pxi":213
 *     def __contains__(self, key):
 *         cdef time_t expiry
 *         if key in self.index_dict:             # <<<<<<<<<<<<<<
 *             s_expiry = self.index_dict[key]
 *             if s_expiry == b"none":
 */
  }

  /* "pcontainers/expiry_dict_impl.pxi":224
 *                     raise False
 *         else:
 *             return False             # <<<<<<<<<<<<<<
 * 
 *     def update(self, e=None, **kwds):
 */
  /*else*/ {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "pcontainers/expiry_dict_impl.pxi":211
 *                     yield (key, self.values_dict[key])
 * 
 *     def __contains__(self, key):             # <<<<<<<<<<<<<<
 *         cdef time_t expiry
 *         if key in self.index_dict:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s_expiry);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/expiry_dict_impl.pxi":226
 *             return False
 * 
 *     def update(self, e=None, **kwds):             # <<<<<<<<<<<<<<
 *         future = self.index_dict.value_chain.dumps(bytes(c_time(NULL) + self.default_expiry))
 *         cdef scoped_ptr[cppIterator] index_it
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_38update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_11expiry_dict_38update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_v_kwds = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  __pyx_v_kwds = PyDict_New(); if (unlikely(!__pyx_v_kwds)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwds);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_e,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwds, values, pos_args, "update") < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_e = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[4]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwds); __pyx_v_kwds = 0;
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_11expiry_dict_37update(((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)__pyx_v_self), __pyx_v_e, __pyx_v_kwds);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwds);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_11expiry_dict_37update(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_kwds) {
  PyObject *__pyx_v_future = NULL;
  boost::scoped_ptr<quiet::PersistentDict::iterator>  __pyx_v_index_it;
  boost::scoped_ptr<quiet::PersistentDict::iterator>  __pyx_v_values_it;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  quiet::PersistentDict::iterator *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *(*__pyx_t_14)(PyObject *);
  Py_ssize_t __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  char const *__pyx_t_18;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);

  /* "pcontainers/expiry_dict_impl.pxi":227
 * 
 *     def update(self, e=None, **kwds):
 *         future = self.index_dict.value_chain.dumps(bytes(c_time(NULL) + self.default_expiry))             # <<<<<<<<<<<<<<
 *         cdef scoped_ptr[cppIterator] index_it
 *         cdef scoped_ptr[cppIterator] values_it
 */
  __pyx_t_1 = __Pyx_PyInt_From_time_t((time(NULL) + __pyx_v_self->default_expiry)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->value_chain), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_future = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pcontainers/expiry_dict_impl.pxi":230
 *         cdef scoped_ptr[cppIterator] index_it
 *         cdef scoped_ptr[cppIterator] values_it
 *         index_it.reset(new cppIterator(self.index_dict.ptr, 0, 0))             # <<<<<<<<<<<<<<
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 */
  try {
    __pyx_t_3 = new quiet::PersistentDict::iterator(__pyx_v_self->index_dict->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_index_it.reset(__pyx_t_3);

  /* "pcontainers/expiry_dict_impl.pxi":231
 *         cdef scoped_ptr[cppIterator] values_it
 *         index_it.reset(new cppIterator(self.index_dict.ptr, 0, 0))
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  try {
    __pyx_t_3 = new quiet::PersistentDict::iterator(__pyx_v_self->values_dict->__pyx_base.ptr, 0, 0);
  } catch(...) {
    __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    {__pyx_filename = __pyx_f[4]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_values_it.reset(__pyx_t_3);

  /* "pcontainers/expiry_dict_impl.pxi":233
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             if e is not None:
 *                 if hasattr(e, 'keys'):
 */
  /*try:*/ {
    {
      __Pyx_ExceptionSave(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      /*try:*/ {

        /* "pcontainers/expiry_dict_impl.pxi":234
 * 
 *         try:
 *             if e is not None:             # <<<<<<<<<<<<<<
 *                 if hasattr(e, 'keys'):
 *                     for key in e.keys():
 */
        __pyx_t_7 = (__pyx_v_e != Py_None);
        __pyx_t_8 = (__pyx_t_7 != 0);
        if (__pyx_t_8) {

          /* "pcontainers/expiry_dict_impl.pxi":235
 *         try:
 *             if e is not None:
 *                 if hasattr(e, 'keys'):             # <<<<<<<<<<<<<<
 *                     for key in e.keys():
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(e[key]))
 */
          __pyx_t_8 = PyObject_HasAttr(__pyx_v_e, __pyx_n_s_keys); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __pyx_t_7 = (__pyx_t_8 != 0);
          if (__pyx_t_7) {

            /* "pcontainers/expiry_dict_impl.pxi":236
 *             if e is not None:
 *                 if hasattr(e, 'keys'):
 *                     for key in e.keys():             # <<<<<<<<<<<<<<
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(e[key]))
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_keys); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_9 = NULL;
            if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
              __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_1);
              if (likely(__pyx_t_9)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
                __Pyx_INCREF(__pyx_t_9);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_1, function);
              }
            }
            if (__pyx_t_9) {
              __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_9); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
            } else {
              __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            }
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
              __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_10 = 0;
              __pyx_t_11 = NULL;
            } else {
              __pyx_t_10 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __pyx_t_11 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            }
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            for (;;) {
              if (likely(!__pyx_t_11)) {
                if (likely(PyList_CheckExact(__pyx_t_1))) {
                  if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_1)) break;
                  #if CYTHON_COMPILING_IN_CPYTHON
                  __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_2); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  #else
                  __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  __Pyx_GOTREF(__pyx_t_2);
                  #endif
                } else {
                  if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
                  #if CYTHON_COMPILING_IN_CPYTHON
                  __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_2); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  #else
                  __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  __Pyx_GOTREF(__pyx_t_2);
                  #endif
                }
              } else {
                __pyx_t_2 = __pyx_t_11(__pyx_t_1);
                if (unlikely(!__pyx_t_2)) {
                  PyObject* exc_type = PyErr_Occurred();
                  if (exc_type) {
                    if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                    else {__pyx_filename = __pyx_f[4]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_2);
              }
              __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_2);
              __pyx_t_2 = 0;

              /* "pcontainers/expiry_dict_impl.pxi":237
 *                 if hasattr(e, 'keys'):
 *                     for key in e.keys():
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(e[key]))             # <<<<<<<<<<<<<<
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 *                 else:
 */
              __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_9 = PyObject_GetItem(__pyx_v_e, __pyx_v_key); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L6_error;};
              __Pyx_GOTREF(__pyx_t_9);
              __pyx_t_12 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->value_chain), __pyx_t_9, 0); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_12);
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
              __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->values_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->values_dict), (*__pyx_v_values_it), __pyx_t_2, __pyx_t_12); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_9);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

              /* "pcontainers/expiry_dict_impl.pxi":238
 *                     for key in e.keys():
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(e[key]))
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)             # <<<<<<<<<<<<<<
 *                 else:
 *                     for (key, value) in e:
 */
              __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_9);
              __pyx_t_12 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), (*__pyx_v_index_it), __pyx_t_9, __pyx_v_future); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_12);
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
              __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

              /* "pcontainers/expiry_dict_impl.pxi":236
 *             if e is not None:
 *                 if hasattr(e, 'keys'):
 *                     for key in e.keys():             # <<<<<<<<<<<<<<
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(e[key]))
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 */
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "pcontainers/expiry_dict_impl.pxi":235
 *         try:
 *             if e is not None:
 *                 if hasattr(e, 'keys'):             # <<<<<<<<<<<<<<
 *                     for key in e.keys():
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(e[key]))
 */
            goto __pyx_L15;
          }

          /* "pcontainers/expiry_dict_impl.pxi":240
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 *                 else:
 *                     for (key, value) in e:             # <<<<<<<<<<<<<<
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 */
          /*else*/ {
            if (likely(PyList_CheckExact(__pyx_v_e)) || PyTuple_CheckExact(__pyx_v_e)) {
              __pyx_t_1 = __pyx_v_e; __Pyx_INCREF(__pyx_t_1); __pyx_t_10 = 0;
              __pyx_t_11 = NULL;
            } else {
              __pyx_t_10 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_e); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __pyx_t_11 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
            }
            for (;;) {
              if (likely(!__pyx_t_11)) {
                if (likely(PyList_CheckExact(__pyx_t_1))) {
                  if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_1)) break;
                  #if CYTHON_COMPILING_IN_CPYTHON
                  __pyx_t_12 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_12); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  #else
                  __pyx_t_12 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  __Pyx_GOTREF(__pyx_t_12);
                  #endif
                } else {
                  if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
                  #if CYTHON_COMPILING_IN_CPYTHON
                  __pyx_t_12 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_12); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  #else
                  __pyx_t_12 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  __Pyx_GOTREF(__pyx_t_12);
                  #endif
                }
              } else {
                __pyx_t_12 = __pyx_t_11(__pyx_t_1);
                if (unlikely(!__pyx_t_12)) {
                  PyObject* exc_type = PyErr_Occurred();
                  if (exc_type) {
                    if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                    else {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_12);
              }
              if ((likely(PyTuple_CheckExact(__pyx_t_12))) || (PyList_CheckExact(__pyx_t_12))) {
                PyObject* sequence = __pyx_t_12;
                #if CYTHON_COMPILING_IN_CPYTHON
                Py_ssize_t size = Py_SIZE(sequence);
                #else
                Py_ssize_t size = PySequence_Size(sequence);
                #endif
                if (unlikely(size != 2)) {
                  if (size > 2) __Pyx_RaiseTooManyValuesError(2);
                  else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
                  {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                }
                #if CYTHON_COMPILING_IN_CPYTHON
                if (likely(PyTuple_CheckExact(sequence))) {
                  __pyx_t_9 = PyTuple_GET_ITEM(sequence, 0); 
                  __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
                } else {
                  __pyx_t_9 = PyList_GET_ITEM(sequence, 0); 
                  __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
                }
                __Pyx_INCREF(__pyx_t_9);
                __Pyx_INCREF(__pyx_t_2);
                #else
                __pyx_t_9 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                __Pyx_GOTREF(__pyx_t_9);
                __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                __Pyx_GOTREF(__pyx_t_2);
                #endif
                __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
              } else {
                Py_ssize_t index = -1;
                __pyx_t_13 = PyObject_GetIter(__pyx_t_12); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                __Pyx_GOTREF(__pyx_t_13);
                __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                __pyx_t_14 = Py_TYPE(__pyx_t_13)->tp_iternext;
                index = 0; __pyx_t_9 = __pyx_t_14(__pyx_t_13); if (unlikely(!__pyx_t_9)) goto __pyx_L20_unpacking_failed;
                __Pyx_GOTREF(__pyx_t_9);
                index = 1; __pyx_t_2 = __pyx_t_14(__pyx_t_13); if (unlikely(!__pyx_t_2)) goto __pyx_L20_unpacking_failed;
                __Pyx_GOTREF(__pyx_t_2);
                if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_13), 2) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                __pyx_t_14 = NULL;
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
                goto __pyx_L21_unpacking_done;
                __pyx_L20_unpacking_failed:;
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
                __pyx_t_14 = NULL;
                if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
                {__pyx_filename = __pyx_f[4]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
                __pyx_L21_unpacking_done:;
              }
              __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_9);
              __pyx_t_9 = 0;
              __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_2);
              __pyx_t_2 = 0;

              /* "pcontainers/expiry_dict_impl.pxi":241
 *                 else:
 *                     for (key, value) in e:
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))             # <<<<<<<<<<<<<<
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 * 
 */
              __pyx_t_12 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_12);
              __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->value_chain), __pyx_v_value, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->values_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->values_dict), (*__pyx_v_values_it), __pyx_t_12, __pyx_t_2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_9);
              __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

              /* "pcontainers/expiry_dict_impl.pxi":242
 *                     for (key, value) in e:
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)             # <<<<<<<<<<<<<<
 * 
 *             for key in kwds:
 */
              __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_9);
              __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), (*__pyx_v_index_it), __pyx_t_9, __pyx_v_future); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

              /* "pcontainers/expiry_dict_impl.pxi":240
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 *                 else:
 *                     for (key, value) in e:             # <<<<<<<<<<<<<<
 *                         self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(value))
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 */
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_L15:;

          /* "pcontainers/expiry_dict_impl.pxi":234
 * 
 *         try:
 *             if e is not None:             # <<<<<<<<<<<<<<
 *                 if hasattr(e, 'keys'):
 *                     for key in e.keys():
 */
        }

        /* "pcontainers/expiry_dict_impl.pxi":244
 *                         self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 * 
 *             for key in kwds:             # <<<<<<<<<<<<<<
 *                 self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(kwds[key]))
 *                 self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 */
        __pyx_t_10 = 0;
        __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_kwds, 1, ((PyObject *)NULL), (&__pyx_t_15), (&__pyx_t_16)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_XDECREF(__pyx_t_1);
        __pyx_t_1 = __pyx_t_2;
        __pyx_t_2 = 0;
        while (1) {
          __pyx_t_17 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_15, &__pyx_t_10, &__pyx_t_2, NULL, NULL, __pyx_t_16);
          if (unlikely(__pyx_t_17 == 0)) break;
          if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_2);
          __pyx_t_2 = 0;

          /* "pcontainers/expiry_dict_impl.pxi":245
 * 
 *             for key in kwds:
 *                 self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(kwds[key]))             # <<<<<<<<<<<<<<
 *                 self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 *         except:
 */
          __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_9 = __Pyx_PyDict_GetItem(__pyx_v_kwds, __pyx_v_key); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L6_error;};
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_12 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->values_dict->value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->values_dict->value_chain), __pyx_t_9, 0); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->values_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->values_dict), (*__pyx_v_values_it), __pyx_t_2, __pyx_t_12); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

          /* "pcontainers/expiry_dict_impl.pxi":246
 *             for key in kwds:
 *                 self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(kwds[key]))
 *                 self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)             # <<<<<<<<<<<<<<
 *         except:
 *             index_it.get().set_rollback()
 */
          __pyx_t_9 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_v_self->index_dict->key_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->index_dict->key_chain), __pyx_v_key, 0); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_12 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict *)__pyx_v_self->index_dict->__pyx_base.__pyx_vtab)->__pyx_base.raw_set_item_buf(((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)__pyx_v_self->index_dict), (*__pyx_v_index_it), __pyx_t_9, __pyx_v_future); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L6_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "pcontainers/expiry_dict_impl.pxi":233
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             if e is not None:
 *                 if hasattr(e, 'keys'):
 */
      }
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L13_try_end;
      __pyx_L6_error:;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "pcontainers/expiry_dict_impl.pxi":247
 *                 self.values_dict.raw_set_item_buf(deref(values_it), self.values_dict.key_chain.dumps(key), self.values_dict.value_chain.dumps(kwds[key]))
 *                 self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 *         except:             # <<<<<<<<<<<<<<
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()
 */
      /*except:*/ {
        __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_12, &__pyx_t_9) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GOTREF(__pyx_t_9);

        /* "pcontainers/expiry_dict_impl.pxi":248
 *                 self.index_dict.raw_set_item_buf(deref(index_it), self.index_dict.key_chain.dumps(key), future)
 *         except:
 *             index_it.get().set_rollback()             # <<<<<<<<<<<<<<
 *             values_it.get().set_rollback()
 *             raise
 */
        __pyx_v_index_it.get()->set_rollback();

        /* "pcontainers/expiry_dict_impl.pxi":249
 *         except:
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()             # <<<<<<<<<<<<<<
 *             raise
 *         finally:
 */
        __pyx_v_values_it.get()->set_rollback();

        /* "pcontainers/expiry_dict_impl.pxi":250
 *             index_it.get().set_rollback()
 *             values_it.get().set_rollback()
 *             raise             # <<<<<<<<<<<<<<
 *         finally:
 *             values_it.reset()
 */
        __Pyx_GIVEREF(__pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ErrRestore(__pyx_t_1, __pyx_t_12, __pyx_t_9);
        __pyx_t_1 = 0; __pyx_t_12 = 0; __pyx_t_9 = 0; 
        {__pyx_filename = __pyx_f[4]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L8_except_error;}
      }
      __pyx_L8_except_error:;

      /* "pcontainers/expiry_dict_impl.pxi":233
 *         values_it.reset(new cppIterator(self.values_dict.ptr, 0, 0))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             if e is not None:
 *                 if hasattr(e, 'keys'):
 */
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
      goto __pyx_L4_error;
      __pyx_L13_try_end:;
    }
  }

  /* "pcontainers/expiry_dict_impl.pxi":252
 *             raise
 *         finally:
 *             values_it.reset()             # <<<<<<<<<<<<<<
 *             index_it.reset()
 */
  /*finally:*/ {
    /*normal exit:*/{
      __pyx_v_values_it.reset();

      /* "pcontainers/expiry_dict_impl.pxi":253
 *         finally:
 *             values_it.reset()
 *             index_it.reset()             # <<<<<<<<<<<<<<
 */
      __pyx_v_index_it.reset();
      goto __pyx_L5;
    }
    /*exception exit:*/{
      __pyx_L4_error:;
      __pyx_t_6 = 0; __pyx_t_5 = 0; __pyx_t_4 = 0; __pyx_t_19 = 0; __pyx_t_20 = 0; __pyx_t_21 = 0;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_19, &__pyx_t_20, &__pyx_t_21);
      if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_6, &__pyx_t_5, &__pyx_t_4) < 0)) __Pyx_ErrFetch(&__pyx_t_6, &__pyx_t_5, &__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_19);
      __Pyx_XGOTREF(__pyx_t_20);
      __Pyx_XGOTREF(__pyx_t_21);
      __pyx_t_16 = __pyx_lineno; __pyx_t_17 = __pyx_clineno; __pyx_t_18 = __pyx_filename;
      {

        /* "pcontainers/expiry_dict_impl.pxi":252
 *             raise
 *         finally:
 *             values_it.reset()             # <<<<<<<<<<<<<<
 *             index_it.reset()
 */
        __pyx_v_values_it.reset();

        /* "pcontainers/expiry_dict_impl.pxi":253
 *         finally:
 *             values_it.reset()
 *             index_it.reset()             # <<<<<<<<<<<<<<
 */
        __pyx_v_index_it.reset();
      }
      if (PY_MAJOR_VERSION >= 3) {
        __Pyx_XGIVEREF(__pyx_t_19);
        __Pyx_XGIVEREF(__pyx_t_20);
        __Pyx_XGIVEREF(__pyx_t_21);
        __Pyx_ExceptionReset(__pyx_t_19, __pyx_t_20, __pyx_t_21);
      }
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_ErrRestore(__pyx_t_6, __pyx_t_5, __pyx_t_4);
      __pyx_t_6 = 0; __pyx_t_5 = 0; __pyx_t_4 = 0; __pyx_t_19 = 0; __pyx_t_20 = 0; __pyx_t_21 = 0;
      __pyx_lineno = __pyx_t_16; __pyx_clineno = __pyx_t_17; __pyx_filename = __pyx_t_18;
      goto __pyx_L1_error;
    }
    __pyx_L5:;
  }

  /* "pcontainers/expiry_dict_impl.pxi":226
 *             return False
 * 
 *     def update(self, e=None, **kwds):             # <<<<<<<<<<<<<<
 *         future = self.index_dict.value_chain.dumps(bytes(c_time(NULL) + self.default_expiry))
 *         cdef scoped_ptr[cppIterator] index_it
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("pcontainers._pdict.expiry_dict.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_future);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/logging_impl.pxi":2
 * 
 * cpdef set_logger(int level=logging.DEBUG):             # <<<<<<<<<<<<<<
 *     cdef PlogSeverity plog_level = PlogDebug
 *     if level == logging.DEBUG:
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_1set_logger(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_set_logger(CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_set_logger *__pyx_optional_args) {
  int __pyx_v_level = __pyx_k__13;
  enum plog::Severity __pyx_v_plog_level;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_logger", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_level = __pyx_optional_args->level;
    }
  }

  /* "pcontainers/logging_impl.pxi":3
 * 
 * cpdef set_logger(int level=logging.DEBUG):
 *     cdef PlogSeverity plog_level = PlogDebug             # <<<<<<<<<<<<<<
 *     if level == logging.DEBUG:
 *         plog_level = PlogDebug
 */
  __pyx_v_plog_level = plog::debug;

  /* "pcontainers/logging_impl.pxi":4
 * cpdef set_logger(int level=logging.DEBUG):
 *     cdef PlogSeverity plog_level = PlogDebug
 *     if level == logging.DEBUG:             # <<<<<<<<<<<<<<
 *         plog_level = PlogDebug
 *     elif level == logging.INFO:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_level); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_logging); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_DEBUG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "pcontainers/logging_impl.pxi":5
 *     cdef PlogSeverity plog_level = PlogDebug
 *     if level == logging.DEBUG:
 *         plog_level = PlogDebug             # <<<<<<<<<<<<<<
 *     elif level == logging.INFO:
 *         plog_level = PlogInfo
 */
    __pyx_v_plog_level = plog::debug;

    /* "pcontainers/logging_impl.pxi":4
 * cpdef set_logger(int level=logging.DEBUG):
 *     cdef PlogSeverity plog_level = PlogDebug
 *     if level == logging.DEBUG:             # <<<<<<<<<<<<<<
 *         plog_level = PlogDebug
 *     elif level == logging.INFO:
 */
    goto __pyx_L3;
  }

  /* "pcontainers/logging_impl.pxi":6
 *     if level == logging.DEBUG:
 *         plog_level = PlogDebug
 *     elif level == logging.INFO:             # <<<<<<<<<<<<<<
 *         plog_level = PlogInfo
 *     elif level == logging.WARNING:
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_level); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_logging); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_INFO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "pcontainers/logging_impl.pxi":7
 *         plog_level = PlogDebug
 *     elif level == logging.INFO:
 *         plog_level = PlogInfo             # <<<<<<<<<<<<<<
 *     elif level == logging.WARNING:
 *         plog_level = PlogWarning
 */
    __pyx_v_plog_level = plog::info;

    /* "pcontainers/logging_impl.pxi":6
 *     if level == logging.DEBUG:
 *         plog_level = PlogDebug
 *     elif level == logging.INFO:             # <<<<<<<<<<<<<<
 *         plog_level = PlogInfo
 *     elif level == logging.WARNING:
 */
    goto __pyx_L3;
  }

  /* "pcontainers/logging_impl.pxi":8
 *     elif level == logging.INFO:
 *         plog_level = PlogInfo
 *     elif level == logging.WARNING:             # <<<<<<<<<<<<<<
 *         plog_level = PlogWarning
 *     elif level == logging.ERROR:
 */
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_level); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_logging); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_WARNING); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "pcontainers/logging_impl.pxi":9
 *         plog_level = PlogInfo
 *     elif level == logging.WARNING:
 *         plog_level = PlogWarning             # <<<<<<<<<<<<<<
 *     elif level == logging.ERROR:
 *         plog_level = PlogError
 */
    __pyx_v_plog_level = plog::warning;

    /* "pcontainers/logging_impl.pxi":8
 *     elif level == logging.INFO:
 *         plog_level = PlogInfo
 *     elif level == logging.WARNING:             # <<<<<<<<<<<<<<
 *         plog_level = PlogWarning
 *     elif level == logging.ERROR:
 */
    goto __pyx_L3;
  }

  /* "pcontainers/logging_impl.pxi":10
 *     elif level == logging.WARNING:
 *         plog_level = PlogWarning
 *     elif level == logging.ERROR:             # <<<<<<<<<<<<<<
 *         plog_level = PlogError
 *     elif level == logging.CRITICAL:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_level); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_logging); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_ERROR); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "pcontainers/logging_impl.pxi":11
 *         plog_level = PlogWarning
 *     elif level == logging.ERROR:
 *         plog_level = PlogError             # <<<<<<<<<<<<<<
 *     elif level == logging.CRITICAL:
 *         plog_level = PlogFatal
 */
    __pyx_v_plog_level = plog::error;

    /* "pcontainers/logging_impl.pxi":10
 *     elif level == logging.WARNING:
 *         plog_level = PlogWarning
 *     elif level == logging.ERROR:             # <<<<<<<<<<<<<<
 *         plog_level = PlogError
 *     elif level == logging.CRITICAL:
 */
    goto __pyx_L3;
  }

  /* "pcontainers/logging_impl.pxi":12
 *     elif level == logging.ERROR:
 *         plog_level = PlogError
 *     elif level == logging.CRITICAL:             # <<<<<<<<<<<<<<
 *         plog_level = PlogFatal
 *     elif level == logging.NOTSET:
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_level); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_logging); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_CRITICAL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "pcontainers/logging_impl.pxi":13
 *         plog_level = PlogError
 *     elif level == logging.CRITICAL:
 *         plog_level = PlogFatal             # <<<<<<<<<<<<<<
 *     elif level == logging.NOTSET:
 *         plog_level = PlogNone
 */
    __pyx_v_plog_level = plog::fatal;

    /* "pcontainers/logging_impl.pxi":12
 *     elif level == logging.ERROR:
 *         plog_level = PlogError
 *     elif level == logging.CRITICAL:             # <<<<<<<<<<<<<<
 *         plog_level = PlogFatal
 *     elif level == logging.NOTSET:
 */
    goto __pyx_L3;
  }

  /* "pcontainers/logging_impl.pxi":14
 *     elif level == logging.CRITICAL:
 *         plog_level = PlogFatal
 *     elif level == logging.NOTSET:             # <<<<<<<<<<<<<<
 *         plog_level = PlogNone
 *     set_console_logger(plog_level)
 */
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_level); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_logging); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_NOTSET); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "pcontainers/logging_impl.pxi":15
 *         plog_level = PlogFatal
 *     elif level == logging.NOTSET:
 *         plog_level = PlogNone             # <<<<<<<<<<<<<<
 *     set_console_logger(plog_level)
 * 
 */
    __pyx_v_plog_level = plog::none;

    /* "pcontainers/logging_impl.pxi":14
 *     elif level == logging.CRITICAL:
 *         plog_level = PlogFatal
 *     elif level == logging.NOTSET:             # <<<<<<<<<<<<<<
 *         plog_level = PlogNone
 *     set_console_logger(plog_level)
 */
  }
  __pyx_L3:;

  /* "pcontainers/logging_impl.pxi":16
 *     elif level == logging.NOTSET:
 *         plog_level = PlogNone
 *     set_console_logger(plog_level)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  utils::Logger::set_console_logger(__pyx_v_plog_level);

  /* "pcontainers/logging_impl.pxi":2
 * 
 * cpdef set_logger(int level=logging.DEBUG):             # <<<<<<<<<<<<<<
 *     cdef PlogSeverity plog_level = PlogDebug
 *     if level == logging.DEBUG:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.set_logger", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_1set_logger(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_1set_logger(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_level;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_logger (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_level,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_level);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_logger") < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_level = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_level == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_level = __pyx_k__13;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_logger", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.set_logger", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_set_logger(__pyx_self, __pyx_v_level);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_set_logger(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_level) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11pcontainers_6_pdict_set_logger __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_logger", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.level = __pyx_v_level;
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_set_logger(0, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.set_logger", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/logging_impl.pxi":19
 * 
 * 
 * cpdef set_python_logger(name_or_logger_obj):             # <<<<<<<<<<<<<<
 *     if isinstance(name_or_logger_obj, unicode):
 *         name_or_logger_obj = make_utf8(name_or_logger_obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_3set_python_logger(PyObject *__pyx_self, PyObject *__pyx_v_name_or_logger_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_set_python_logger(PyObject *__pyx_v_name_or_logger_obj, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_python_logger", 0);
  __Pyx_INCREF(__pyx_v_name_or_logger_obj);

  /* "pcontainers/logging_impl.pxi":20
 * 
 * cpdef set_python_logger(name_or_logger_obj):
 *     if isinstance(name_or_logger_obj, unicode):             # <<<<<<<<<<<<<<
 *         name_or_logger_obj = make_utf8(name_or_logger_obj)
 *     if isinstance(name_or_logger_obj, bytes):
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_name_or_logger_obj); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/logging_impl.pxi":21
 * cpdef set_python_logger(name_or_logger_obj):
 *     if isinstance(name_or_logger_obj, unicode):
 *         name_or_logger_obj = make_utf8(name_or_logger_obj)             # <<<<<<<<<<<<<<
 *     if isinstance(name_or_logger_obj, bytes):
 *         set_py_logger(tocbstring(name_or_logger_obj))
 */
    __pyx_t_3 = __pyx_f_11pcontainers_6_pdict_make_utf8(__pyx_v_name_or_logger_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_name_or_logger_obj, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pcontainers/logging_impl.pxi":20
 * 
 * cpdef set_python_logger(name_or_logger_obj):
 *     if isinstance(name_or_logger_obj, unicode):             # <<<<<<<<<<<<<<
 *         name_or_logger_obj = make_utf8(name_or_logger_obj)
 *     if isinstance(name_or_logger_obj, bytes):
 */
  }

  /* "pcontainers/logging_impl.pxi":22
 *     if isinstance(name_or_logger_obj, unicode):
 *         name_or_logger_obj = make_utf8(name_or_logger_obj)
 *     if isinstance(name_or_logger_obj, bytes):             # <<<<<<<<<<<<<<
 *         set_py_logger(tocbstring(name_or_logger_obj))
 *     else:
 */
  __pyx_t_2 = PyBytes_Check(__pyx_v_name_or_logger_obj); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pcontainers/logging_impl.pxi":23
 *         name_or_logger_obj = make_utf8(name_or_logger_obj)
 *     if isinstance(name_or_logger_obj, bytes):
 *         set_py_logger(tocbstring(name_or_logger_obj))             # <<<<<<<<<<<<<<
 *     else:
 *         set_py_logger(name_or_logger_obj)
 */
    if (!(likely(PyBytes_CheckExact(__pyx_v_name_or_logger_obj))||((__pyx_v_name_or_logger_obj) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_name_or_logger_obj)->tp_name), 0))) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    try {
      utils::PyLogger::set_py_logger(__pyx_f_11pcontainers_6_pdict_tocbstring(((PyObject*)__pyx_v_name_or_logger_obj)));
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[5]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "pcontainers/logging_impl.pxi":22
 *     if isinstance(name_or_logger_obj, unicode):
 *         name_or_logger_obj = make_utf8(name_or_logger_obj)
 *     if isinstance(name_or_logger_obj, bytes):             # <<<<<<<<<<<<<<
 *         set_py_logger(tocbstring(name_or_logger_obj))
 *     else:
 */
    goto __pyx_L4;
  }

  /* "pcontainers/logging_impl.pxi":25
 *         set_py_logger(tocbstring(name_or_logger_obj))
 *     else:
 *         set_py_logger(name_or_logger_obj)             # <<<<<<<<<<<<<<
 */
  /*else*/ {
    try {
      utils::PyLogger::set_py_logger(__pyx_v_name_or_logger_obj);
    } catch(...) {
      __pyx_f_11pcontainers_14_py_exceptions_custom_handler(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      {__pyx_filename = __pyx_f[5]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  __pyx_L4:;

  /* "pcontainers/logging_impl.pxi":19
 * 
 * 
 * cpdef set_python_logger(name_or_logger_obj):             # <<<<<<<<<<<<<<
 *     if isinstance(name_or_logger_obj, unicode):
 *         name_or_logger_obj = make_utf8(name_or_logger_obj)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.set_python_logger", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_name_or_logger_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_3set_python_logger(PyObject *__pyx_self, PyObject *__pyx_v_name_or_logger_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_3set_python_logger(PyObject *__pyx_self, PyObject *__pyx_v_name_or_logger_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_python_logger (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_2set_python_logger(__pyx_self, ((PyObject *)__pyx_v_name_or_logger_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_2set_python_logger(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_name_or_logger_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_python_logger", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_set_python_logger(__pyx_v_name_or_logger_obj, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.set_python_logger", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":4
 * 
 * cdef class Filter(object):
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 *     cpdef loads(self, obj):
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6Filter_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6Filter_dumps(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Filter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6Filter_1dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":5
 * cdef class Filter(object):
 *     cpdef dumps(self, obj):
 *         raise NotImplementedError()             # <<<<<<<<<<<<<<
 *     cpdef loads(self, obj):
 *         raise NotImplementedError()
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[2]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/filters_impl.pxi":4
 * 
 * cdef class Filter(object):
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 *     cpdef loads(self, obj):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.Filter.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6Filter_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6Filter_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6Filter_dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6Filter_dumps(struct __pyx_obj_11pcontainers_6_pdict_Filter *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6Filter_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.Filter.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":6
 *     cpdef dumps(self, obj):
 *         raise NotImplementedError()
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_6Filter_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_6Filter_loads(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_Filter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6Filter_3loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":7
 *         raise NotImplementedError()
 *     cpdef loads(self, obj):
 *         raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 * # noinspection PyAbstractClass
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[2]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/filters_impl.pxi":6
 *     cpdef dumps(self, obj):
 *         raise NotImplementedError()
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.Filter.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_6Filter_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_6Filter_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6Filter_2loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_6Filter_2loads(struct __pyx_obj_11pcontainers_6_pdict_Filter *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_6Filter_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.Filter.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":15
 * 
 * cdef class NoneSerializer(Serializer):
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14NoneSerializer_dumps(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_1dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":16
 * cdef class NoneSerializer(Serializer):
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":17
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return obj
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":16
 * cdef class NoneSerializer(Serializer):
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  }

  /* "pcontainers/filters_impl.pxi":18
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":19
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 *         return obj             # <<<<<<<<<<<<<<
 * 
 *     cpdef loads(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":15
 * 
 * cdef class NoneSerializer(Serializer):
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.NoneSerializer.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_14NoneSerializer_dumps(((struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_14NoneSerializer_dumps(struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_14NoneSerializer_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.NoneSerializer.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":21
 *         return obj
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, MBufferIO):
 *             return obj.tobytes()
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14NoneSerializer_loads(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_3loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":22
 * 
 *     cpdef loads(self, obj):
 *         if isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             return obj.tobytes()
 *         return obj
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":23
 *     cpdef loads(self, obj):
 *         if isinstance(obj, MBufferIO):
 *             return obj.tobytes()             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_tobytes); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pcontainers/filters_impl.pxi":22
 * 
 *     cpdef loads(self, obj):
 *         if isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             return obj.tobytes()
 *         return obj
 */
  }

  /* "pcontainers/filters_impl.pxi":24
 *         if isinstance(obj, MBufferIO):
 *             return obj.tobytes()
 *         return obj             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":21
 *         return obj
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if isinstance(obj, MBufferIO):
 *             return obj.tobytes()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.NoneSerializer.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_14NoneSerializer_2loads(((struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_14NoneSerializer_2loads(struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_14NoneSerializer_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.NoneSerializer.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":28
 * 
 * cdef class PickleSerializer(Serializer):
 *     def __init__(self, protocol=2):             # <<<<<<<<<<<<<<
 *         if self.pickle_module is None:
 *             try:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_16PickleSerializer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_16PickleSerializer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_protocol = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_protocol,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_int_2);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_protocol);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_protocol = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.PickleSerializer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_16PickleSerializer___init__(((struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *)__pyx_v_self), __pyx_v_protocol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_16PickleSerializer___init__(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_protocol) {
  PyObject *__pyx_v_pickle = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/filters_impl.pxi":29
 * cdef class PickleSerializer(Serializer):
 *     def __init__(self, protocol=2):
 *         if self.pickle_module is None:             # <<<<<<<<<<<<<<
 *             try:
 *                 # noinspection PyPep8Naming
 */
  __pyx_t_1 = (__pyx_v_self->pickle_module == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/filters_impl.pxi":30
 *     def __init__(self, protocol=2):
 *         if self.pickle_module is None:
 *             try:             # <<<<<<<<<<<<<<
 *                 # noinspection PyPep8Naming
 *                 import cPickle as pickle
 */
    {
      __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_5);
      /*try:*/ {

        /* "pcontainers/filters_impl.pxi":32
 *             try:
 *                 # noinspection PyPep8Naming
 *                 import cPickle as pickle             # <<<<<<<<<<<<<<
 *             except ImportError:
 *                 import pickle
 */
        __pyx_t_6 = __Pyx_Import(__pyx_n_s_cPickle, 0, -1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_v_pickle = __pyx_t_6;
        __pyx_t_6 = 0;

        /* "pcontainers/filters_impl.pxi":30
 *     def __init__(self, protocol=2):
 *         if self.pickle_module is None:
 *             try:             # <<<<<<<<<<<<<<
 *                 # noinspection PyPep8Naming
 *                 import cPickle as pickle
 */
      }
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L11_try_end;
      __pyx_L4_error:;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "pcontainers/filters_impl.pxi":33
 *                 # noinspection PyPep8Naming
 *                 import cPickle as pickle
 *             except ImportError:             # <<<<<<<<<<<<<<
 *                 import pickle
 *             self.pickle_module = pickle
 */
      __pyx_t_7 = PyErr_ExceptionMatches(__pyx_builtin_ImportError);
      if (__pyx_t_7) {
        __Pyx_AddTraceback("pcontainers._pdict.PickleSerializer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_8, &__pyx_t_9) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GOTREF(__pyx_t_9);

        /* "pcontainers/filters_impl.pxi":34
 *                 import cPickle as pickle
 *             except ImportError:
 *                 import pickle             # <<<<<<<<<<<<<<
 *             self.pickle_module = pickle
 *         self.protocol = protocol
 */
        __pyx_t_10 = __Pyx_Import(__pyx_n_s_pickle, 0, -1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_XDECREF_SET(__pyx_v_pickle, __pyx_t_10);
        __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L5_exception_handled;
      }
      goto __pyx_L6_except_error;
      __pyx_L6_except_error:;

      /* "pcontainers/filters_impl.pxi":30
 *     def __init__(self, protocol=2):
 *         if self.pickle_module is None:
 *             try:             # <<<<<<<<<<<<<<
 *                 # noinspection PyPep8Naming
 *                 import cPickle as pickle
 */
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      goto __pyx_L1_error;
      __pyx_L5_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      __pyx_L11_try_end:;
    }

    /* "pcontainers/filters_impl.pxi":35
 *             except ImportError:
 *                 import pickle
 *             self.pickle_module = pickle             # <<<<<<<<<<<<<<
 *         self.protocol = protocol
 * 
 */
    __Pyx_INCREF(__pyx_v_pickle);
    __Pyx_GIVEREF(__pyx_v_pickle);
    __Pyx_GOTREF(__pyx_v_self->pickle_module);
    __Pyx_DECREF(__pyx_v_self->pickle_module);
    __pyx_v_self->pickle_module = __pyx_v_pickle;

    /* "pcontainers/filters_impl.pxi":29
 * cdef class PickleSerializer(Serializer):
 *     def __init__(self, protocol=2):
 *         if self.pickle_module is None:             # <<<<<<<<<<<<<<
 *             try:
 *                 # noinspection PyPep8Naming
 */
  }

  /* "pcontainers/filters_impl.pxi":36
 *                 import pickle
 *             self.pickle_module = pickle
 *         self.protocol = protocol             # <<<<<<<<<<<<<<
 * 
 *     cpdef dumps(self, obj):
 */
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_v_protocol); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->protocol = __pyx_t_7;

  /* "pcontainers/filters_impl.pxi":28
 * 
 * cdef class PickleSerializer(Serializer):
 *     def __init__(self, protocol=2):             # <<<<<<<<<<<<<<
 *         if self.pickle_module is None:
 *             try:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pcontainers._pdict.PickleSerializer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pickle);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":38
 *         self.protocol = protocol
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         buf = MBufferIO()
 *         self.pickle_module.dump(obj, buf, protocol=self.protocol)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_16PickleSerializer_dumps(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_buf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_3dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":39
 * 
 *     cpdef dumps(self, obj):
 *         buf = MBufferIO()             # <<<<<<<<<<<<<<
 *         self.pickle_module.dump(obj, buf, protocol=self.protocol)
 *         buf.seek(0)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_buf = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":40
 *     cpdef dumps(self, obj):
 *         buf = MBufferIO()
 *         self.pickle_module.dump(obj, buf, protocol=self.protocol)             # <<<<<<<<<<<<<<
 *         buf.seek(0)
 *         return buf
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pickle_module, __pyx_n_s_dump); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_obj);
  __Pyx_INCREF(__pyx_v_buf);
  __Pyx_GIVEREF(__pyx_v_buf);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_buf);
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->protocol); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_protocol, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pcontainers/filters_impl.pxi":41
 *         buf = MBufferIO()
 *         self.pickle_module.dump(obj, buf, protocol=self.protocol)
 *         buf.seek(0)             # <<<<<<<<<<<<<<
 *         return buf
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_seek); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":42
 *         self.pickle_module.dump(obj, buf, protocol=self.protocol)
 *         buf.seek(0)
 *         return buf             # <<<<<<<<<<<<<<
 * 
 *     cpdef loads(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_buf);
  __pyx_r = __pyx_v_buf;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":38
 *         self.protocol = protocol
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         buf = MBufferIO()
 *         self.pickle_module.dump(obj, buf, protocol=self.protocol)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PickleSerializer.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_buf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_16PickleSerializer_2dumps(((struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_16PickleSerializer_2dumps(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_16PickleSerializer_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PickleSerializer.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":44
 *         return buf
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_16PickleSerializer_loads(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_5loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":45
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":46
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return self.pickle_module.load(obj)
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":45
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  }

  /* "pcontainers/filters_impl.pxi":47
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return self.pickle_module.load(obj)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":48
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 *         return self.pickle_module.load(obj)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pickle_module, __pyx_n_s_load); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_v_obj);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":44
 *         return buf
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.PickleSerializer.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_16PickleSerializer_4loads(((struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_16PickleSerializer_4loads(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_16PickleSerializer_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.PickleSerializer.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":52
 * 
 * cdef class MessagePackSerializer(Serializer):
 *     def __init__(self, unicode_errors='strict', use_single_float=False, use_list=True, default=None, ext_hook=None):             # <<<<<<<<<<<<<<
 *         if self.messagepack_module is None:
 *             import msgpack
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_unicode_errors = 0;
  PyObject *__pyx_v_use_single_float = 0;
  PyObject *__pyx_v_use_list = 0;
  PyObject *__pyx_v_default = 0;
  PyObject *__pyx_v_ext_hook = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_unicode_errors,&__pyx_n_s_use_single_float,&__pyx_n_s_use_list,&__pyx_n_s_default,&__pyx_n_s_ext_hook,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)__pyx_n_s_strict);
    values[1] = ((PyObject *)Py_False);
    values[2] = ((PyObject *)Py_True);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unicode_errors);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_use_single_float);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_use_list);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ext_hook);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_unicode_errors = values[0];
    __pyx_v_use_single_float = values[1];
    __pyx_v_use_list = values[2];
    __pyx_v_default = values[3];
    __pyx_v_ext_hook = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.MessagePackSerializer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer___init__(((struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *)__pyx_v_self), __pyx_v_unicode_errors, __pyx_v_use_single_float, __pyx_v_use_list, __pyx_v_default, __pyx_v_ext_hook);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer___init__(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_unicode_errors, PyObject *__pyx_v_use_single_float, PyObject *__pyx_v_use_list, PyObject *__pyx_v_default, PyObject *__pyx_v_ext_hook) {
  PyObject *__pyx_v_msgpack = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/filters_impl.pxi":53
 * cdef class MessagePackSerializer(Serializer):
 *     def __init__(self, unicode_errors='strict', use_single_float=False, use_list=True, default=None, ext_hook=None):
 *         if self.messagepack_module is None:             # <<<<<<<<<<<<<<
 *             import msgpack
 *             self.messagepack_module = msgpack
 */
  __pyx_t_1 = (__pyx_v_self->messagepack_module == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/filters_impl.pxi":54
 *     def __init__(self, unicode_errors='strict', use_single_float=False, use_list=True, default=None, ext_hook=None):
 *         if self.messagepack_module is None:
 *             import msgpack             # <<<<<<<<<<<<<<
 *             self.messagepack_module = msgpack
 * 
 */
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_msgpack, 0, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_msgpack = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pcontainers/filters_impl.pxi":55
 *         if self.messagepack_module is None:
 *             import msgpack
 *             self.messagepack_module = msgpack             # <<<<<<<<<<<<<<
 * 
 *         self.mpack_args = {
 */
    __Pyx_INCREF(__pyx_v_msgpack);
    __Pyx_GIVEREF(__pyx_v_msgpack);
    __Pyx_GOTREF(__pyx_v_self->messagepack_module);
    __Pyx_DECREF(__pyx_v_self->messagepack_module);
    __pyx_v_self->messagepack_module = __pyx_v_msgpack;

    /* "pcontainers/filters_impl.pxi":53
 * cdef class MessagePackSerializer(Serializer):
 *     def __init__(self, unicode_errors='strict', use_single_float=False, use_list=True, default=None, ext_hook=None):
 *         if self.messagepack_module is None:             # <<<<<<<<<<<<<<
 *             import msgpack
 *             self.messagepack_module = msgpack
 */
  }

  /* "pcontainers/filters_impl.pxi":58
 * 
 *         self.mpack_args = {
 *             'unicode_errors': unicode_errors, 'use_single_float': use_single_float,             # <<<<<<<<<<<<<<
 *             'encoding': 'utf-8', 'use_bin_type': True, 'default': default
 *         }
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_unicode_errors, __pyx_v_unicode_errors) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_use_single_float, __pyx_v_use_single_float) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_encoding, __pyx_kp_s_utf_8) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/filters_impl.pxi":59
 *         self.mpack_args = {
 *             'unicode_errors': unicode_errors, 'use_single_float': use_single_float,
 *             'encoding': 'utf-8', 'use_bin_type': True, 'default': default             # <<<<<<<<<<<<<<
 *         }
 *         self.use_list = bool(use_list)
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_use_bin_type, Py_True) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/filters_impl.pxi":60
 *             'unicode_errors': unicode_errors, 'use_single_float': use_single_float,
 *             'encoding': 'utf-8', 'use_bin_type': True, 'default': default
 *         }             # <<<<<<<<<<<<<<
 *         self.use_list = bool(use_list)
 *         self.ext_hook = ext_hook if ext_hook else self.messagepack_module.ExtType
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_default, __pyx_v_default) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/filters_impl.pxi":57
 *             self.messagepack_module = msgpack
 * 
 *         self.mpack_args = {             # <<<<<<<<<<<<<<
 *             'unicode_errors': unicode_errors, 'use_single_float': use_single_float,
 *             'encoding': 'utf-8', 'use_bin_type': True, 'default': default
 */
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->mpack_args);
  __Pyx_DECREF(__pyx_v_self->mpack_args);
  __pyx_v_self->mpack_args = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":61
 *             'encoding': 'utf-8', 'use_bin_type': True, 'default': default
 *         }
 *         self.use_list = bool(use_list)             # <<<<<<<<<<<<<<
 *         self.ext_hook = ext_hook if ext_hook else self.messagepack_module.ExtType
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_use_list); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyBool_FromLong((!(!__pyx_t_2))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->use_list);
  __Pyx_DECREF(__pyx_v_self->use_list);
  __pyx_v_self->use_list = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":62
 *         }
 *         self.use_list = bool(use_list)
 *         self.ext_hook = ext_hook if ext_hook else self.messagepack_module.ExtType             # <<<<<<<<<<<<<<
 * 
 *     cpdef dumps(self, obj):
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_ext_hook); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {
    __Pyx_INCREF(__pyx_v_ext_hook);
    __pyx_t_3 = __pyx_v_ext_hook;
  } else {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->messagepack_module, __pyx_n_s_ExtType); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
    __pyx_t_4 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->ext_hook);
  __Pyx_DECREF(__pyx_v_self->ext_hook);
  __pyx_v_self->ext_hook = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":52
 * 
 * cdef class MessagePackSerializer(Serializer):
 *     def __init__(self, unicode_errors='strict', use_single_float=False, use_list=True, default=None, ext_hook=None):             # <<<<<<<<<<<<<<
 *         if self.messagepack_module is None:
 *             import msgpack
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.MessagePackSerializer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_msgpack);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":64
 *         self.ext_hook = ext_hook if ext_hook else self.messagepack_module.ExtType
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         buf = MBufferIO()
 *         self.messagepack_module.pack(obj, buf, **self.mpack_args)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_21MessagePackSerializer_dumps(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_buf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_3dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":65
 * 
 *     cpdef dumps(self, obj):
 *         buf = MBufferIO()             # <<<<<<<<<<<<<<
 *         self.messagepack_module.pack(obj, buf, **self.mpack_args)
 *         buf.seek(0)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_buf = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":66
 *     cpdef dumps(self, obj):
 *         buf = MBufferIO()
 *         self.messagepack_module.pack(obj, buf, **self.mpack_args)             # <<<<<<<<<<<<<<
 *         buf.seek(0)
 *         return buf
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->messagepack_module, __pyx_n_s_pack); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_obj);
  __Pyx_INCREF(__pyx_v_buf);
  __Pyx_GIVEREF(__pyx_v_buf);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_buf);
  if (unlikely(__pyx_v_self->mpack_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
    {__pyx_filename = __pyx_f[2]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_v_self->mpack_args); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":67
 *         buf = MBufferIO()
 *         self.messagepack_module.pack(obj, buf, **self.mpack_args)
 *         buf.seek(0)             # <<<<<<<<<<<<<<
 *         return buf
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_seek); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":68
 *         self.messagepack_module.pack(obj, buf, **self.mpack_args)
 *         buf.seek(0)
 *         return buf             # <<<<<<<<<<<<<<
 * 
 *     cpdef loads(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_buf);
  __pyx_r = __pyx_v_buf;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":64
 *         self.ext_hook = ext_hook if ext_hook else self.messagepack_module.ExtType
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         buf = MBufferIO()
 *         self.messagepack_module.pack(obj, buf, **self.mpack_args)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.MessagePackSerializer.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_buf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer_2dumps(((struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer_2dumps(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_21MessagePackSerializer_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.MessagePackSerializer.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":70
 *         return buf
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_21MessagePackSerializer_loads(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_5loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":71
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":72
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return self.messagepack_module.unpack(
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":71
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  }

  /* "pcontainers/filters_impl.pxi":73
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return self.messagepack_module.unpack(
 *             obj, use_list=self.use_list, encoding="utf-8", unicode_errors=self.mpack_args['unicode_errors'],
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":74
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 *         return self.messagepack_module.unpack(             # <<<<<<<<<<<<<<
 *             obj, use_list=self.use_list, encoding="utf-8", unicode_errors=self.mpack_args['unicode_errors'],
 *             ext_hook=self.ext_hook
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->messagepack_module, __pyx_n_s_unpack); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pcontainers/filters_impl.pxi":75
 *         obj.seek(0)
 *         return self.messagepack_module.unpack(
 *             obj, use_list=self.use_list, encoding="utf-8", unicode_errors=self.mpack_args['unicode_errors'],             # <<<<<<<<<<<<<<
 *             ext_hook=self.ext_hook
 *         )
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_obj);
  __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_use_list, __pyx_v_self->use_list) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_encoding, __pyx_kp_s_utf_8) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(__pyx_v_self->mpack_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    {__pyx_filename = __pyx_f[2]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_self->mpack_args, __pyx_n_s_unicode_errors); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_unicode_errors, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":76
 *         return self.messagepack_module.unpack(
 *             obj, use_list=self.use_list, encoding="utf-8", unicode_errors=self.mpack_args['unicode_errors'],
 *             ext_hook=self.ext_hook             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_ext_hook, __pyx_v_self->ext_hook) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/filters_impl.pxi":74
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 *         return self.messagepack_module.unpack(             # <<<<<<<<<<<<<<
 *             obj, use_list=self.use_list, encoding="utf-8", unicode_errors=self.mpack_args['unicode_errors'],
 *             ext_hook=self.ext_hook
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":70
 *         return buf
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.MessagePackSerializer.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer_4loads(((struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_21MessagePackSerializer_4loads(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_21MessagePackSerializer_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.MessagePackSerializer.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":81
 * cdef class JsonSerializer(Serializer):
 * 
 *     def __init__(self, default=None):             # <<<<<<<<<<<<<<
 *         if self.json_module is None:
 *             try:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_14JsonSerializer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_14JsonSerializer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_default = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_default,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_default = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.JsonSerializer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_14JsonSerializer___init__(((struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *)__pyx_v_self), __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_14JsonSerializer___init__(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_default) {
  PyObject *__pyx_v_json = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/filters_impl.pxi":82
 * 
 *     def __init__(self, default=None):
 *         if self.json_module is None:             # <<<<<<<<<<<<<<
 *             try:
 *                 # noinspection PyPackageRequirements
 */
  __pyx_t_1 = (__pyx_v_self->json_module == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/filters_impl.pxi":83
 *     def __init__(self, default=None):
 *         if self.json_module is None:
 *             try:             # <<<<<<<<<<<<<<
 *                 # noinspection PyPackageRequirements
 *                 import simplejson as json
 */
    {
      __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_5);
      /*try:*/ {

        /* "pcontainers/filters_impl.pxi":85
 *             try:
 *                 # noinspection PyPackageRequirements
 *                 import simplejson as json             # <<<<<<<<<<<<<<
 *             except ImportError:
 *                 import json
 */
        __pyx_t_6 = __Pyx_Import(__pyx_n_s_simplejson, 0, -1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_v_json = __pyx_t_6;
        __pyx_t_6 = 0;

        /* "pcontainers/filters_impl.pxi":83
 *     def __init__(self, default=None):
 *         if self.json_module is None:
 *             try:             # <<<<<<<<<<<<<<
 *                 # noinspection PyPackageRequirements
 *                 import simplejson as json
 */
      }
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L11_try_end;
      __pyx_L4_error:;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "pcontainers/filters_impl.pxi":86
 *                 # noinspection PyPackageRequirements
 *                 import simplejson as json
 *             except ImportError:             # <<<<<<<<<<<<<<
 *                 import json
 *             self.json_module = json
 */
      __pyx_t_7 = PyErr_ExceptionMatches(__pyx_builtin_ImportError);
      if (__pyx_t_7) {
        __Pyx_AddTraceback("pcontainers._pdict.JsonSerializer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_8, &__pyx_t_9) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GOTREF(__pyx_t_9);

        /* "pcontainers/filters_impl.pxi":87
 *                 import simplejson as json
 *             except ImportError:
 *                 import json             # <<<<<<<<<<<<<<
 *             self.json_module = json
 *             self.default = default
 */
        __pyx_t_10 = __Pyx_Import(__pyx_n_s_json, 0, -1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L6_except_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_XDECREF_SET(__pyx_v_json, __pyx_t_10);
        __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L5_exception_handled;
      }
      goto __pyx_L6_except_error;
      __pyx_L6_except_error:;

      /* "pcontainers/filters_impl.pxi":83
 *     def __init__(self, default=None):
 *         if self.json_module is None:
 *             try:             # <<<<<<<<<<<<<<
 *                 # noinspection PyPackageRequirements
 *                 import simplejson as json
 */
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      goto __pyx_L1_error;
      __pyx_L5_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      __pyx_L11_try_end:;
    }

    /* "pcontainers/filters_impl.pxi":88
 *             except ImportError:
 *                 import json
 *             self.json_module = json             # <<<<<<<<<<<<<<
 *             self.default = default
 * 
 */
    __Pyx_INCREF(__pyx_v_json);
    __Pyx_GIVEREF(__pyx_v_json);
    __Pyx_GOTREF(__pyx_v_self->json_module);
    __Pyx_DECREF(__pyx_v_self->json_module);
    __pyx_v_self->json_module = __pyx_v_json;

    /* "pcontainers/filters_impl.pxi":89
 *                 import json
 *             self.json_module = json
 *             self.default = default             # <<<<<<<<<<<<<<
 * 
 *     cpdef dumps(self, obj):
 */
    __Pyx_INCREF(__pyx_v_default);
    __Pyx_GIVEREF(__pyx_v_default);
    __Pyx_GOTREF(__pyx_v_self->__pyx_default);
    __Pyx_DECREF(__pyx_v_self->__pyx_default);
    __pyx_v_self->__pyx_default = __pyx_v_default;

    /* "pcontainers/filters_impl.pxi":82
 * 
 *     def __init__(self, default=None):
 *         if self.json_module is None:             # <<<<<<<<<<<<<<
 *             try:
 *                 # noinspection PyPackageRequirements
 */
  }

  /* "pcontainers/filters_impl.pxi":81
 * cdef class JsonSerializer(Serializer):
 * 
 *     def __init__(self, default=None):             # <<<<<<<<<<<<<<
 *         if self.json_module is None:
 *             try:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pcontainers._pdict.JsonSerializer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_json);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":91
 *             self.default = default
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         buf = MBufferIO()
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14JsonSerializer_dumps(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_buf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_3dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":92
 * 
 *     cpdef dumps(self, obj):
 *         buf = MBufferIO()             # <<<<<<<<<<<<<<
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,
 *                               separators=(',', ':'), encoding='utf-8', default=self.default)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_buf = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":93
 *     cpdef dumps(self, obj):
 *         buf = MBufferIO()
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,             # <<<<<<<<<<<<<<
 *                               separators=(',', ':'), encoding='utf-8', default=self.default)
 *         buf.seek(0)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->json_module, __pyx_n_s_dump); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_obj);
  __Pyx_INCREF(__pyx_v_buf);
  __Pyx_GIVEREF(__pyx_v_buf);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_buf);
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_skipkeys, Py_False) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_ensure_ascii, Py_True) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_check_circular, Py_True) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_allow_nan, Py_True) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_indent, Py_None) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/filters_impl.pxi":94
 *         buf = MBufferIO()
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,
 *                               separators=(',', ':'), encoding='utf-8', default=self.default)             # <<<<<<<<<<<<<<
 *         buf.seek(0)
 *         return buf
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_separators, __pyx_tuple__21) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_encoding, __pyx_kp_s_utf_8) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_default, __pyx_v_self->__pyx_default) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/filters_impl.pxi":93
 *     cpdef dumps(self, obj):
 *         buf = MBufferIO()
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,             # <<<<<<<<<<<<<<
 *                               separators=(',', ':'), encoding='utf-8', default=self.default)
 *         buf.seek(0)
 */
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pcontainers/filters_impl.pxi":95
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,
 *                               separators=(',', ':'), encoding='utf-8', default=self.default)
 *         buf.seek(0)             # <<<<<<<<<<<<<<
 *         return buf
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_buf, __pyx_n_s_seek); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":96
 *                               separators=(',', ':'), encoding='utf-8', default=self.default)
 *         buf.seek(0)
 *         return buf             # <<<<<<<<<<<<<<
 * 
 *     cpdef loads(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_buf);
  __pyx_r = __pyx_v_buf;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":91
 *             self.default = default
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         buf = MBufferIO()
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.JsonSerializer.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_buf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_14JsonSerializer_2dumps(((struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_14JsonSerializer_2dumps(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_14JsonSerializer_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.JsonSerializer.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":98
 *         return buf
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14JsonSerializer_loads(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_5loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":99
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":100
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return self.json_module.load(obj, encoding='utf-8')
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":99
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  }

  /* "pcontainers/filters_impl.pxi":101
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return self.json_module.load(obj, encoding='utf-8')
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":102
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 *         return self.json_module.load(obj, encoding='utf-8')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->json_module, __pyx_n_s_load); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_obj);
  __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_encoding, __pyx_kp_s_utf_8) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":98
 *         return buf
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.JsonSerializer.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_14JsonSerializer_4loads(((struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_14JsonSerializer_4loads(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_14JsonSerializer_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.JsonSerializer.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":107
 * # noinspection PyAbstractClass
 * cdef class Signer(Filter):
 *     def __init__(self, bytes secret=b''):             # <<<<<<<<<<<<<<
 *         self.secret = secret
 * 
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_6Signer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_6Signer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_secret = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_secret,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject*)__pyx_kp_b__5);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_secret);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_secret = ((PyObject*)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.Signer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_secret), (&PyBytes_Type), 1, "secret", 1))) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6Signer___init__(((struct __pyx_obj_11pcontainers_6_pdict_Signer *)__pyx_v_self), __pyx_v_secret);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_6Signer___init__(struct __pyx_obj_11pcontainers_6_pdict_Signer *__pyx_v_self, PyObject *__pyx_v_secret) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/filters_impl.pxi":108
 * cdef class Signer(Filter):
 *     def __init__(self, bytes secret=b''):
 *         self.secret = secret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_INCREF(__pyx_v_secret);
  __Pyx_GIVEREF(__pyx_v_secret);
  __Pyx_GOTREF(__pyx_v_self->secret);
  __Pyx_DECREF(__pyx_v_self->secret);
  __pyx_v_self->secret = __pyx_v_secret;

  /* "pcontainers/filters_impl.pxi":107
 * # noinspection PyAbstractClass
 * cdef class Signer(Filter):
 *     def __init__(self, bytes secret=b''):             # <<<<<<<<<<<<<<
 *         self.secret = secret
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":112
 * 
 * cdef class NoneSigner(Signer):
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_10NoneSigner_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_10NoneSigner_dumps(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_10NoneSigner_1dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":113
 * cdef class NoneSigner(Signer):
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":114
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return obj
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":113
 * cdef class NoneSigner(Signer):
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  }

  /* "pcontainers/filters_impl.pxi":115
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 *     cpdef loads(self, obj):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":116
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 *         return obj             # <<<<<<<<<<<<<<
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":112
 * 
 * cdef class NoneSigner(Signer):
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.NoneSigner.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_10NoneSigner_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_10NoneSigner_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_10NoneSigner_dumps(((struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_10NoneSigner_dumps(struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_10NoneSigner_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.NoneSigner.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":117
 *         obj.seek(0)
 *         return obj
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_10NoneSigner_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_10NoneSigner_loads(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_10NoneSigner_3loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":118
 *         return obj
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":119
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return obj
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":118
 *         return obj
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 */
  }

  /* "pcontainers/filters_impl.pxi":120
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":121
 *             obj = MBufferIO(obj)
 *         obj.seek(0)
 *         return obj             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":117
 *         obj.seek(0)
 *         return obj
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.NoneSigner.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_10NoneSigner_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_10NoneSigner_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_10NoneSigner_2loads(((struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_10NoneSigner_2loads(struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_10NoneSigner_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.NoneSigner.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":125
 * 
 * cdef class HMACSigner(Signer):
 *     def __init__(self, secret):             # <<<<<<<<<<<<<<
 *         super(HMACSigner, self).__init__(secret)
 *         if self.hmac_module is None:
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_10HMACSigner_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_10HMACSigner_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_secret = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_secret,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_secret)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_secret = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.HMACSigner.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_10HMACSigner___init__(((struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *)__pyx_v_self), __pyx_v_secret);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_10HMACSigner___init__(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_secret) {
  PyObject *__pyx_v_hmac = NULL;
  PyObject *__pyx_v_hashlib = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/filters_impl.pxi":126
 * cdef class HMACSigner(Signer):
 *     def __init__(self, secret):
 *         super(HMACSigner, self).__init__(secret)             # <<<<<<<<<<<<<<
 *         if self.hmac_module is None:
 *             import hmac
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_HMACSigner));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_HMACSigner));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_HMACSigner));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_secret); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_secret);
    __Pyx_GIVEREF(__pyx_v_secret);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_secret);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":127
 *     def __init__(self, secret):
 *         super(HMACSigner, self).__init__(secret)
 *         if self.hmac_module is None:             # <<<<<<<<<<<<<<
 *             import hmac
 *             self.hmac_module = hmac
 */
  __pyx_t_5 = (__pyx_v_self->hmac_module == Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "pcontainers/filters_impl.pxi":128
 *         super(HMACSigner, self).__init__(secret)
 *         if self.hmac_module is None:
 *             import hmac             # <<<<<<<<<<<<<<
 *             self.hmac_module = hmac
 *         if self.hashlib_module is None:
 */
    __pyx_t_1 = __Pyx_Import(__pyx_n_s_hmac, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_hmac = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":129
 *         if self.hmac_module is None:
 *             import hmac
 *             self.hmac_module = hmac             # <<<<<<<<<<<<<<
 *         if self.hashlib_module is None:
 *             import hashlib
 */
    __Pyx_INCREF(__pyx_v_hmac);
    __Pyx_GIVEREF(__pyx_v_hmac);
    __Pyx_GOTREF(__pyx_v_self->hmac_module);
    __Pyx_DECREF(__pyx_v_self->hmac_module);
    __pyx_v_self->hmac_module = __pyx_v_hmac;

    /* "pcontainers/filters_impl.pxi":127
 *     def __init__(self, secret):
 *         super(HMACSigner, self).__init__(secret)
 *         if self.hmac_module is None:             # <<<<<<<<<<<<<<
 *             import hmac
 *             self.hmac_module = hmac
 */
  }

  /* "pcontainers/filters_impl.pxi":130
 *             import hmac
 *             self.hmac_module = hmac
 *         if self.hashlib_module is None:             # <<<<<<<<<<<<<<
 *             import hashlib
 *             self.hashlib_module = hashlib
 */
  __pyx_t_6 = (__pyx_v_self->hashlib_module == Py_None);
  __pyx_t_5 = (__pyx_t_6 != 0);
  if (__pyx_t_5) {

    /* "pcontainers/filters_impl.pxi":131
 *             self.hmac_module = hmac
 *         if self.hashlib_module is None:
 *             import hashlib             # <<<<<<<<<<<<<<
 *             self.hashlib_module = hashlib
 * 
 */
    __pyx_t_1 = __Pyx_Import(__pyx_n_s_hashlib, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_hashlib = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":132
 *         if self.hashlib_module is None:
 *             import hashlib
 *             self.hashlib_module = hashlib             # <<<<<<<<<<<<<<
 * 
 *     cpdef dumps(self, obj):
 */
    __Pyx_INCREF(__pyx_v_hashlib);
    __Pyx_GIVEREF(__pyx_v_hashlib);
    __Pyx_GOTREF(__pyx_v_self->hashlib_module);
    __Pyx_DECREF(__pyx_v_self->hashlib_module);
    __pyx_v_self->hashlib_module = __pyx_v_hashlib;

    /* "pcontainers/filters_impl.pxi":130
 *             import hmac
 *             self.hmac_module = hmac
 *         if self.hashlib_module is None:             # <<<<<<<<<<<<<<
 *             import hashlib
 *             self.hashlib_module = hashlib
 */
  }

  /* "pcontainers/filters_impl.pxi":125
 * 
 * cdef class HMACSigner(Signer):
 *     def __init__(self, secret):             # <<<<<<<<<<<<<<
 *         super(HMACSigner, self).__init__(secret)
 *         if self.hmac_module is None:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pcontainers._pdict.HMACSigner.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_hmac);
  __Pyx_XDECREF(__pyx_v_hashlib);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":134
 *             self.hashlib_module = hashlib
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_10HMACSigner_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_10HMACSigner_dumps(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_10HMACSigner_3dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":135
 * 
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         if self.secret:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":136
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         if self.secret:
 *             h = self.hmac_module.new(self.secret, obj, self.hashlib_module.sha256)
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":135
 * 
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         if self.secret:
 */
  }

  /* "pcontainers/filters_impl.pxi":137
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         if self.secret:             # <<<<<<<<<<<<<<
 *             h = self.hmac_module.new(self.secret, obj, self.hashlib_module.sha256)
 *             obj.seek(0, 2)  # pos at end
 */
  __pyx_t_7 = (__pyx_v_self->__pyx_base.secret != Py_None) && (PyBytes_GET_SIZE(__pyx_v_self->__pyx_base.secret) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":138
 *             obj = MBufferIO(obj)
 *         if self.secret:
 *             h = self.hmac_module.new(self.secret, obj, self.hashlib_module.sha256)             # <<<<<<<<<<<<<<
 *             obj.seek(0, 2)  # pos at end
 *             obj.write(h.digest())
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->hmac_module, __pyx_n_s_new); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->hashlib_module, __pyx_n_s_sha256); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_8 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(__pyx_v_self->__pyx_base.secret);
    __Pyx_GIVEREF(__pyx_v_self->__pyx_base.secret);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_8, __pyx_v_self->__pyx_base.secret);
    __Pyx_INCREF(__pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_8, __pyx_v_obj);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_8, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_h = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":139
 *         if self.secret:
 *             h = self.hmac_module.new(self.secret, obj, self.hashlib_module.sha256)
 *             obj.seek(0, 2)  # pos at end             # <<<<<<<<<<<<<<
 *             obj.write(h.digest())
 *         obj.seek(0)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "pcontainers/filters_impl.pxi":140
 *             h = self.hmac_module.new(self.secret, obj, self.hashlib_module.sha256)
 *             obj.seek(0, 2)  # pos at end
 *             obj.write(h.digest())             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return obj
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_h, __pyx_n_s_digest); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "pcontainers/filters_impl.pxi":137
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         if self.secret:             # <<<<<<<<<<<<<<
 *             h = self.hmac_module.new(self.secret, obj, self.hashlib_module.sha256)
 *             obj.seek(0, 2)  # pos at end
 */
  }

  /* "pcontainers/filters_impl.pxi":141
 *             obj.seek(0, 2)  # pos at end
 *             obj.write(h.digest())
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":142
 *             obj.write(h.digest())
 *         obj.seek(0)
 *         return obj             # <<<<<<<<<<<<<<
 * 
 *     cpdef loads(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":134
 *             self.hashlib_module = hashlib
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.HMACSigner.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_h);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_10HMACSigner_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_10HMACSigner_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_10HMACSigner_2dumps(((struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_10HMACSigner_2dumps(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_10HMACSigner_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.HMACSigner.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":144
 *         return obj
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_10HMACSigner_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_10HMACSigner_loads(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_digest = NULL;
  PyObject *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_10HMACSigner_5loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":145
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         if self.secret:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":146
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         if self.secret:
 *             digest = obj[-32:].tobytes()    # read last 32 bytes
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":145
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         if self.secret:
 */
  }

  /* "pcontainers/filters_impl.pxi":147
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         if self.secret:             # <<<<<<<<<<<<<<
 *             digest = obj[-32:].tobytes()    # read last 32 bytes
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash
 */
  __pyx_t_7 = (__pyx_v_self->__pyx_base.secret != Py_None) && (PyBytes_GET_SIZE(__pyx_v_self->__pyx_base.secret) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":148
 *             obj = MBufferIO(obj)
 *         if self.secret:
 *             digest = obj[-32:].tobytes()    # read last 32 bytes             # <<<<<<<<<<<<<<
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash
 *             if not self.hmac_module.compare_digest(digest, h):
 */
    __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_obj, -32L, 0, NULL, NULL, &__pyx_slice__28, 1, 0, 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_tobytes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_2) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_digest = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":149
 *         if self.secret:
 *             digest = obj[-32:].tobytes()    # read last 32 bytes
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash             # <<<<<<<<<<<<<<
 *             if not self.hmac_module.compare_digest(digest, h):
 *                 raise ValueError("HMAC check failed : data has been tampered ?")
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->hmac_module, __pyx_n_s_new); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_obj, 0, -32L, NULL, NULL, &__pyx_slice__29, 1, 1, 1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->hashlib_module, __pyx_n_s_sha256); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_9 = 1;
      }
    }
    __pyx_t_10 = PyTuple_New(3+__pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    if (__pyx_t_8) {
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_8); __pyx_t_8 = NULL;
    }
    __Pyx_INCREF(__pyx_v_self->__pyx_base.secret);
    __Pyx_GIVEREF(__pyx_v_self->__pyx_base.secret);
    PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_9, __pyx_v_self->__pyx_base.secret);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_9, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_10, 2+__pyx_t_9, __pyx_t_4);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_10, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_digest); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_h = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":150
 *             digest = obj[-32:].tobytes()    # read last 32 bytes
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash
 *             if not self.hmac_module.compare_digest(digest, h):             # <<<<<<<<<<<<<<
 *                 raise ValueError("HMAC check failed : data has been tampered ?")
 *             return obj[0:-32]
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->hmac_module, __pyx_n_s_compare_digest); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = NULL;
    __pyx_t_9 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_9 = 1;
      }
    }
    __pyx_t_10 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_v_digest);
    __Pyx_GIVEREF(__pyx_v_digest);
    PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_9, __pyx_v_digest);
    __Pyx_INCREF(__pyx_v_h);
    __Pyx_GIVEREF(__pyx_v_h);
    PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_9, __pyx_v_h);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_10, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = ((!__pyx_t_7) != 0);
    if (__pyx_t_6) {

      /* "pcontainers/filters_impl.pxi":151
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash
 *             if not self.hmac_module.compare_digest(digest, h):
 *                 raise ValueError("HMAC check failed : data has been tampered ?")             # <<<<<<<<<<<<<<
 *             return obj[0:-32]
 *         obj.seek(0)
 */
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[2]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "pcontainers/filters_impl.pxi":150
 *             digest = obj[-32:].tobytes()    # read last 32 bytes
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash
 *             if not self.hmac_module.compare_digest(digest, h):             # <<<<<<<<<<<<<<
 *                 raise ValueError("HMAC check failed : data has been tampered ?")
 *             return obj[0:-32]
 */
    }

    /* "pcontainers/filters_impl.pxi":152
 *             if not self.hmac_module.compare_digest(digest, h):
 *                 raise ValueError("HMAC check failed : data has been tampered ?")
 *             return obj[0:-32]             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return obj
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_v_obj, 0, -32L, NULL, NULL, &__pyx_slice__31, 1, 1, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "pcontainers/filters_impl.pxi":147
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         if self.secret:             # <<<<<<<<<<<<<<
 *             digest = obj[-32:].tobytes()    # read last 32 bytes
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash
 */
  }

  /* "pcontainers/filters_impl.pxi":153
 *                 raise ValueError("HMAC check failed : data has been tampered ?")
 *             return obj[0:-32]
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_seek); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":154
 *             return obj[0:-32]
 *         obj.seek(0)
 *         return obj             # <<<<<<<<<<<<<<
 * 
 * # noinspection PyAbstractClass
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":144
 *         return obj
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("pcontainers._pdict.HMACSigner.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_digest);
  __Pyx_XDECREF(__pyx_v_h);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_10HMACSigner_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_10HMACSigner_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_10HMACSigner_4loads(((struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_10HMACSigner_4loads(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_10HMACSigner_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.HMACSigner.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":162
 * 
 * cdef class NoneCompresser(Compresser):
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         return obj
 *     cpdef loads(self, obj):
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14NoneCompresser_dumps(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_1dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":163
 * cdef class NoneCompresser(Compresser):
 *     cpdef dumps(self, obj):
 *         return obj             # <<<<<<<<<<<<<<
 *     cpdef loads(self, obj):
 *         return obj
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":162
 * 
 * cdef class NoneCompresser(Compresser):
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         return obj
 *     cpdef loads(self, obj):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.NoneCompresser.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_1dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_14NoneCompresser_dumps(((struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_14NoneCompresser_dumps(struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_14NoneCompresser_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.NoneCompresser.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":164
 *     cpdef dumps(self, obj):
 *         return obj
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_14NoneCompresser_loads(CYTHON_UNUSED struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_3loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":165
 *         return obj
 *     cpdef loads(self, obj):
 *         return obj             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":164
 *     cpdef dumps(self, obj):
 *         return obj
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.NoneCompresser.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_3loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_14NoneCompresser_2loads(((struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_14NoneCompresser_2loads(struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_14NoneCompresser_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.NoneCompresser.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":169
 * 
 * cdef class SnappyCompresser(Compresser):
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         if self.snappyx_module is None:
 *             # noinspection PyPackageRequirements
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_16SnappyCompresser___init__(((struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_16SnappyCompresser___init__(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self) {
  PyObject *__pyx_v_snappyx = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/filters_impl.pxi":170
 * cdef class SnappyCompresser(Compresser):
 *     def __init__(self):
 *         if self.snappyx_module is None:             # <<<<<<<<<<<<<<
 *             # noinspection PyPackageRequirements
 *             import snappyx
 */
  __pyx_t_1 = (__pyx_v_self->snappyx_module == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/filters_impl.pxi":172
 *         if self.snappyx_module is None:
 *             # noinspection PyPackageRequirements
 *             import snappyx             # <<<<<<<<<<<<<<
 *             self.snappyx_module = snappyx
 *     cpdef dumps(self, obj):
 */
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_snappyx, 0, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_snappyx = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pcontainers/filters_impl.pxi":173
 *             # noinspection PyPackageRequirements
 *             import snappyx
 *             self.snappyx_module = snappyx             # <<<<<<<<<<<<<<
 *     cpdef dumps(self, obj):
 *         return MBufferIO(self.snappyx_module.compress(obj))
 */
    __Pyx_INCREF(__pyx_v_snappyx);
    __Pyx_GIVEREF(__pyx_v_snappyx);
    __Pyx_GOTREF(__pyx_v_self->snappyx_module);
    __Pyx_DECREF(__pyx_v_self->snappyx_module);
    __pyx_v_self->snappyx_module = __pyx_v_snappyx;

    /* "pcontainers/filters_impl.pxi":170
 * cdef class SnappyCompresser(Compresser):
 *     def __init__(self):
 *         if self.snappyx_module is None:             # <<<<<<<<<<<<<<
 *             # noinspection PyPackageRequirements
 *             import snappyx
 */
  }

  /* "pcontainers/filters_impl.pxi":169
 * 
 * cdef class SnappyCompresser(Compresser):
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         if self.snappyx_module is None:
 *             # noinspection PyPackageRequirements
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.SnappyCompresser.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_snappyx);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":174
 *             import snappyx
 *             self.snappyx_module = snappyx
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         return MBufferIO(self.snappyx_module.compress(obj))
 *     cpdef loads(self, obj):
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_16SnappyCompresser_dumps(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_3dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":175
 *             self.snappyx_module = snappyx
 *     cpdef dumps(self, obj):
 *         return MBufferIO(self.snappyx_module.compress(obj))             # <<<<<<<<<<<<<<
 *     cpdef loads(self, obj):
 *         return MBufferIO(self.snappyx_module.decompress(obj))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->snappyx_module, __pyx_n_s_compress); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_INCREF(__pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_obj);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":174
 *             import snappyx
 *             self.snappyx_module = snappyx
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         return MBufferIO(self.snappyx_module.compress(obj))
 *     cpdef loads(self, obj):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.SnappyCompresser.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_16SnappyCompresser_2dumps(((struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_16SnappyCompresser_2dumps(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_16SnappyCompresser_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.SnappyCompresser.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":176
 *     cpdef dumps(self, obj):
 *         return MBufferIO(self.snappyx_module.compress(obj))
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         return MBufferIO(self.snappyx_module.decompress(obj))
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_16SnappyCompresser_loads(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_5loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":177
 *         return MBufferIO(self.snappyx_module.compress(obj))
 *     cpdef loads(self, obj):
 *         return MBufferIO(self.snappyx_module.decompress(obj))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->snappyx_module, __pyx_n_s_decompress); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_obj); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_INCREF(__pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_obj);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":176
 *     cpdef dumps(self, obj):
 *         return MBufferIO(self.snappyx_module.compress(obj))
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         return MBufferIO(self.snappyx_module.decompress(obj))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.SnappyCompresser.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_16SnappyCompresser_4loads(((struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_16SnappyCompresser_4loads(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_16SnappyCompresser_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.SnappyCompresser.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":181
 * 
 * cdef class LZ4Compresser(Compresser):
 *     def __init__(self, level=None, block_size_id=None, block_mode_linked=True, checksum=True):             # <<<<<<<<<<<<<<
 *         if self.lz4_module is None:
 *             import lz4framed
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_level = 0;
  PyObject *__pyx_v_block_size_id = 0;
  PyObject *__pyx_v_block_mode_linked = 0;
  PyObject *__pyx_v_checksum = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_level,&__pyx_n_s_block_size_id,&__pyx_n_s_block_mode_linked,&__pyx_n_s_checksum,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_True);
    values[3] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_level);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_block_size_id);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_block_mode_linked);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_checksum);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_level = values[0];
    __pyx_v_block_size_id = values[1];
    __pyx_v_block_mode_linked = values[2];
    __pyx_v_checksum = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.LZ4Compresser.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_13LZ4Compresser___init__(((struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *)__pyx_v_self), __pyx_v_level, __pyx_v_block_size_id, __pyx_v_block_mode_linked, __pyx_v_checksum);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_13LZ4Compresser___init__(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_level, PyObject *__pyx_v_block_size_id, PyObject *__pyx_v_block_mode_linked, PyObject *__pyx_v_checksum) {
  PyObject *__pyx_v_lz4framed = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/filters_impl.pxi":182
 * cdef class LZ4Compresser(Compresser):
 *     def __init__(self, level=None, block_size_id=None, block_mode_linked=True, checksum=True):
 *         if self.lz4_module is None:             # <<<<<<<<<<<<<<
 *             import lz4framed
 *             self.lz4_module = lz4framed
 */
  __pyx_t_1 = (__pyx_v_self->lz4_module == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/filters_impl.pxi":183
 *     def __init__(self, level=None, block_size_id=None, block_mode_linked=True, checksum=True):
 *         if self.lz4_module is None:
 *             import lz4framed             # <<<<<<<<<<<<<<
 *             self.lz4_module = lz4framed
 *             self.blocksize_default = lz4framed.LZ4F_BLOCKSIZE_DEFAULT
 */
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_lz4framed, 0, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_lz4framed = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "pcontainers/filters_impl.pxi":184
 *         if self.lz4_module is None:
 *             import lz4framed
 *             self.lz4_module = lz4framed             # <<<<<<<<<<<<<<
 *             self.blocksize_default = lz4framed.LZ4F_BLOCKSIZE_DEFAULT
 *             self.compression_min = lz4framed.LZ4F_COMPRESSION_MIN
 */
    __Pyx_INCREF(__pyx_v_lz4framed);
    __Pyx_GIVEREF(__pyx_v_lz4framed);
    __Pyx_GOTREF(__pyx_v_self->lz4_module);
    __Pyx_DECREF(__pyx_v_self->lz4_module);
    __pyx_v_self->lz4_module = __pyx_v_lz4framed;

    /* "pcontainers/filters_impl.pxi":185
 *             import lz4framed
 *             self.lz4_module = lz4framed
 *             self.blocksize_default = lz4framed.LZ4F_BLOCKSIZE_DEFAULT             # <<<<<<<<<<<<<<
 *             self.compression_min = lz4framed.LZ4F_COMPRESSION_MIN
 *         self.level = level if level is not None else self.compression_min
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_lz4framed, __pyx_n_s_LZ4F_BLOCKSIZE_DEFAULT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_self->blocksize_default = __pyx_t_4;

    /* "pcontainers/filters_impl.pxi":186
 *             self.lz4_module = lz4framed
 *             self.blocksize_default = lz4framed.LZ4F_BLOCKSIZE_DEFAULT
 *             self.compression_min = lz4framed.LZ4F_COMPRESSION_MIN             # <<<<<<<<<<<<<<
 *         self.level = level if level is not None else self.compression_min
 *         self.block_size_id = block_size_id if block_size_id is not None else self.blocksize_default
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_lz4framed, __pyx_n_s_LZ4F_COMPRESSION_MIN); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_self->compression_min = __pyx_t_4;

    /* "pcontainers/filters_impl.pxi":182
 * cdef class LZ4Compresser(Compresser):
 *     def __init__(self, level=None, block_size_id=None, block_mode_linked=True, checksum=True):
 *         if self.lz4_module is None:             # <<<<<<<<<<<<<<
 *             import lz4framed
 *             self.lz4_module = lz4framed
 */
  }

  /* "pcontainers/filters_impl.pxi":187
 *             self.blocksize_default = lz4framed.LZ4F_BLOCKSIZE_DEFAULT
 *             self.compression_min = lz4framed.LZ4F_COMPRESSION_MIN
 *         self.level = level if level is not None else self.compression_min             # <<<<<<<<<<<<<<
 *         self.block_size_id = block_size_id if block_size_id is not None else self.blocksize_default
 *         self.block_mode_linked = bool(block_mode_linked)
 */
  __pyx_t_2 = (__pyx_v_level != Py_None);
  if ((__pyx_t_2 != 0)) {
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_level); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = __pyx_t_5;
  } else {
    __pyx_t_4 = __pyx_v_self->compression_min;
  }
  __pyx_v_self->level = __pyx_t_4;

  /* "pcontainers/filters_impl.pxi":188
 *             self.compression_min = lz4framed.LZ4F_COMPRESSION_MIN
 *         self.level = level if level is not None else self.compression_min
 *         self.block_size_id = block_size_id if block_size_id is not None else self.blocksize_default             # <<<<<<<<<<<<<<
 *         self.block_mode_linked = bool(block_mode_linked)
 *         self.checksum = bool(checksum)
 */
  __pyx_t_2 = (__pyx_v_block_size_id != Py_None);
  if ((__pyx_t_2 != 0)) {
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_block_size_id); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = __pyx_t_5;
  } else {
    __pyx_t_4 = __pyx_v_self->blocksize_default;
  }
  __pyx_v_self->block_size_id = __pyx_t_4;

  /* "pcontainers/filters_impl.pxi":189
 *         self.level = level if level is not None else self.compression_min
 *         self.block_size_id = block_size_id if block_size_id is not None else self.blocksize_default
 *         self.block_mode_linked = bool(block_mode_linked)             # <<<<<<<<<<<<<<
 *         self.checksum = bool(checksum)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_block_mode_linked); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyBool_FromLong((!(!__pyx_t_2))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->block_mode_linked);
  __Pyx_DECREF(__pyx_v_self->block_mode_linked);
  __pyx_v_self->block_mode_linked = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":190
 *         self.block_size_id = block_size_id if block_size_id is not None else self.blocksize_default
 *         self.block_mode_linked = bool(block_mode_linked)
 *         self.checksum = bool(checksum)             # <<<<<<<<<<<<<<
 * 
 *     cpdef dumps(self, obj):
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_checksum); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyBool_FromLong((!(!__pyx_t_2))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->checksum);
  __Pyx_DECREF(__pyx_v_self->checksum);
  __pyx_v_self->checksum = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":181
 * 
 * cdef class LZ4Compresser(Compresser):
 *     def __init__(self, level=None, block_size_id=None, block_mode_linked=True, checksum=True):             # <<<<<<<<<<<<<<
 *         if self.lz4_module is None:
 *             import lz4framed
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.LZ4Compresser.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_lz4framed);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":192
 *         self.checksum = bool(checksum)
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_13LZ4Compresser_dumps(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_compressed = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_3dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":193
 * 
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         compressed = MBufferIO()
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":194
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         compressed = MBufferIO()
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":193
 * 
 *     cpdef dumps(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         compressed = MBufferIO()
 */
  }

  /* "pcontainers/filters_impl.pxi":195
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         compressed = MBufferIO()             # <<<<<<<<<<<<<<
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_compressed = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":196
 *             obj = MBufferIO(obj)
 *         compressed = MBufferIO()
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,             # <<<<<<<<<<<<<<
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 *             try:
 */
  /*with:*/ {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->lz4_module, __pyx_n_s_Compressor); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_compressed);
    __Pyx_GIVEREF(__pyx_v_compressed);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_compressed);
    __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->block_size_id); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_block_size_id, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_block_mode_linked, __pyx_v_self->block_mode_linked) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "pcontainers/filters_impl.pxi":197
 *         compressed = MBufferIO()
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:             # <<<<<<<<<<<<<<
 *             try:
 *                 while True:
 */
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_checksum, __pyx_v_self->checksum) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_autoflush, Py_True) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->level); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_level, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pcontainers/filters_impl.pxi":196
 *             obj = MBufferIO(obj)
 *         compressed = MBufferIO()
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,             # <<<<<<<<<<<<<<
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 *             try:
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_8 = __Pyx_PyObject_LookupSpecial(__pyx_t_3, __pyx_n_s_exit); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_2 = __Pyx_PyObject_LookupSpecial(__pyx_t_3, __pyx_n_s_enter); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_1) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    }
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __pyx_t_5;
    __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_11);
        /*try:*/ {
          __pyx_v_c = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "pcontainers/filters_impl.pxi":198
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 *             try:             # <<<<<<<<<<<<<<
 *                 while True:
 *                     c.update(obj.read(65536))
 */
          {
            __Pyx_ExceptionSave(&__pyx_t_12, &__pyx_t_13, &__pyx_t_14);
            __Pyx_XGOTREF(__pyx_t_12);
            __Pyx_XGOTREF(__pyx_t_13);
            __Pyx_XGOTREF(__pyx_t_14);
            /*try:*/ {

              /* "pcontainers/filters_impl.pxi":199
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 *             try:
 *                 while True:             # <<<<<<<<<<<<<<
 *                     c.update(obj.read(65536))
 *             except self.lz4_module.Lz4FramedNoDataError:
 */
              while (1) {

                /* "pcontainers/filters_impl.pxi":200
 *             try:
 *                 while True:
 *                     c.update(obj.read(65536))             # <<<<<<<<<<<<<<
 *             except self.lz4_module.Lz4FramedNoDataError:
 *                 pass
 */
                __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_update); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L16_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_obj, __pyx_n_s_read); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L16_error;}
                __Pyx_GOTREF(__pyx_t_5);
                __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L16_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                __pyx_t_5 = NULL;
                if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
                  __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                  if (likely(__pyx_t_5)) {
                    PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                    __Pyx_INCREF(__pyx_t_5);
                    __Pyx_INCREF(function);
                    __Pyx_DECREF_SET(__pyx_t_3, function);
                  }
                }
                if (!__pyx_t_5) {
                  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L16_error;}
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  __Pyx_GOTREF(__pyx_t_2);
                } else {
                  __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L16_error;}
                  __Pyx_GOTREF(__pyx_t_4);
                  __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
                  __Pyx_GIVEREF(__pyx_t_1);
                  PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_1);
                  __pyx_t_1 = 0;
                  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L16_error;}
                  __Pyx_GOTREF(__pyx_t_2);
                  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                }
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              }

              /* "pcontainers/filters_impl.pxi":198
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 *             try:             # <<<<<<<<<<<<<<
 *                 while True:
 *                     c.update(obj.read(65536))
 */
            }
            __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            goto __pyx_L23_try_end;
            __pyx_L16_error:;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "pcontainers/filters_impl.pxi":201
 *                 while True:
 *                     c.update(obj.read(65536))
 *             except self.lz4_module.Lz4FramedNoDataError:             # <<<<<<<<<<<<<<
 *                 pass
 *         compressed.seek(0)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->lz4_module, __pyx_n_s_Lz4FramedNoDataError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L18_except_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_15 = PyErr_ExceptionMatches(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_15) {
              PyErr_Restore(0,0,0);
              goto __pyx_L17_exception_handled;
            }
            goto __pyx_L18_except_error;
            __pyx_L18_except_error:;

            /* "pcontainers/filters_impl.pxi":198
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 *             try:             # <<<<<<<<<<<<<<
 *                 while True:
 *                     c.update(obj.read(65536))
 */
            __Pyx_XGIVEREF(__pyx_t_12);
            __Pyx_XGIVEREF(__pyx_t_13);
            __Pyx_XGIVEREF(__pyx_t_14);
            __Pyx_ExceptionReset(__pyx_t_12, __pyx_t_13, __pyx_t_14);
            goto __pyx_L8_error;
            __pyx_L17_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_12);
            __Pyx_XGIVEREF(__pyx_t_13);
            __Pyx_XGIVEREF(__pyx_t_14);
            __Pyx_ExceptionReset(__pyx_t_12, __pyx_t_13, __pyx_t_14);
            __pyx_L23_try_end:;
          }

          /* "pcontainers/filters_impl.pxi":196
 *             obj = MBufferIO(obj)
 *         compressed = MBufferIO()
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,             # <<<<<<<<<<<<<<
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 *             try:
 */
        }
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        goto __pyx_L15_try_end;
        __pyx_L8_error:;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("pcontainers._pdict.LZ4Compresser.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_1 = PyTuple_Pack(3, __pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_1, NULL);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (__pyx_t_7 < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __pyx_t_6 = ((!(__pyx_t_7 != 0)) != 0);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_XGIVEREF(__pyx_t_4);
            __Pyx_ErrRestore(__pyx_t_2, __pyx_t_3, __pyx_t_4);
            __pyx_t_2 = 0; __pyx_t_3 = 0; __pyx_t_4 = 0; 
            {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          goto __pyx_L9_exception_handled;
        }
        __pyx_L10_except_error:;
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        goto __pyx_L1_error;
        __pyx_L9_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        __pyx_L15_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_8) {
          __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__34, NULL);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        }
        goto __pyx_L7;
      }
      __pyx_L7:;
    }
    goto __pyx_L29;
    __pyx_L4_error:;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    goto __pyx_L1_error;
    __pyx_L29:;
  }

  /* "pcontainers/filters_impl.pxi":203
 *             except self.lz4_module.Lz4FramedNoDataError:
 *                 pass
 *         compressed.seek(0)             # <<<<<<<<<<<<<<
 *         return compressed
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_compressed, __pyx_n_s_seek); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/filters_impl.pxi":204
 *                 pass
 *         compressed.seek(0)
 *         return compressed             # <<<<<<<<<<<<<<
 * 
 *     cpdef loads(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_compressed);
  __pyx_r = __pyx_v_compressed;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":192
 *         self.checksum = bool(checksum)
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.LZ4Compresser.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_compressed);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_13LZ4Compresser_2dumps(((struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_13LZ4Compresser_2dumps(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_13LZ4Compresser_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LZ4Compresser.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":206
 *         return compressed
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_13LZ4Compresser_loads(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_decompressed = NULL;
  PyObject *__pyx_v_chunk = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_INCREF(__pyx_v_obj);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_5loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":207
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         decompressed = MBufferIO()
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_obj, __pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
  if (__pyx_t_7) {

    /* "pcontainers/filters_impl.pxi":208
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)             # <<<<<<<<<<<<<<
 *         decompressed = MBufferIO()
 *         for chunk in self.lz4_module.Decompressor(obj):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_obj);
      __Pyx_GIVEREF(__pyx_v_obj);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":207
 * 
 *     cpdef loads(self, obj):
 *         if not isinstance(obj, MBufferIO):             # <<<<<<<<<<<<<<
 *             obj = MBufferIO(obj)
 *         decompressed = MBufferIO()
 */
  }

  /* "pcontainers/filters_impl.pxi":209
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         decompressed = MBufferIO()             # <<<<<<<<<<<<<<
 *         for chunk in self.lz4_module.Decompressor(obj):
 *            decompressed.write(chunk)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_decompressed = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":210
 *             obj = MBufferIO(obj)
 *         decompressed = MBufferIO()
 *         for chunk in self.lz4_module.Decompressor(obj):             # <<<<<<<<<<<<<<
 *            decompressed.write(chunk)
 *         decompressed.seek(0)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->lz4_module, __pyx_n_s_Decompressor); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_v_obj);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
  } else {
    __pyx_t_8 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_9)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_9(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[2]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_chunk, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":211
 *         decompressed = MBufferIO()
 *         for chunk in self.lz4_module.Decompressor(obj):
 *            decompressed.write(chunk)             # <<<<<<<<<<<<<<
 *         decompressed.seek(0)
 *         return decompressed
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_decompressed, __pyx_n_s_write); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_chunk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_v_chunk);
      __Pyx_GIVEREF(__pyx_v_chunk);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_chunk);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pcontainers/filters_impl.pxi":210
 *             obj = MBufferIO(obj)
 *         decompressed = MBufferIO()
 *         for chunk in self.lz4_module.Decompressor(obj):             # <<<<<<<<<<<<<<
 *            decompressed.write(chunk)
 *         decompressed.seek(0)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/filters_impl.pxi":212
 *         for chunk in self.lz4_module.Decompressor(obj):
 *            decompressed.write(chunk)
 *         decompressed.seek(0)             # <<<<<<<<<<<<<<
 *         return decompressed
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_decompressed, __pyx_n_s_seek); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":213
 *            decompressed.write(chunk)
 *         decompressed.seek(0)
 *         return decompressed             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_decompressed);
  __pyx_r = __pyx_v_decompressed;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":206
 *         return compressed
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.LZ4Compresser.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_decompressed);
  __Pyx_XDECREF(__pyx_v_chunk);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_13LZ4Compresser_4loads(((struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_13LZ4Compresser_4loads(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_13LZ4Compresser_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.LZ4Compresser.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":217
 * 
 * cdef class Chain(Filter):
 *     def __init__(self, Serializer serializer=None, Signer signer=None, Compresser compresser=None):             # <<<<<<<<<<<<<<
 *         self.serializer = serializer if serializer else NoneSerializer()
 *         self.signer = signer if signer else NoneSigner()
 */

/* Python wrapper */
static int __pyx_pw_11pcontainers_6_pdict_5Chain_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11pcontainers_6_pdict_5Chain_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11pcontainers_6_pdict_Serializer *__pyx_v_serializer = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Signer *__pyx_v_signer = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Compresser *__pyx_v_compresser = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_serializer,&__pyx_n_s_signer,&__pyx_n_s_compresser,0};
    PyObject* values[3] = {0,0,0};
    values[0] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Serializer *)Py_None);
    values[1] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Signer *)Py_None);
    values[2] = (PyObject *)((struct __pyx_obj_11pcontainers_6_pdict_Compresser *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_serializer);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_signer);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_compresser);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_serializer = ((struct __pyx_obj_11pcontainers_6_pdict_Serializer *)values[0]);
    __pyx_v_signer = ((struct __pyx_obj_11pcontainers_6_pdict_Signer *)values[1]);
    __pyx_v_compresser = ((struct __pyx_obj_11pcontainers_6_pdict_Compresser *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict.Chain.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_serializer), __pyx_ptype_11pcontainers_6_pdict_Serializer, 1, "serializer", 0))) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_signer), __pyx_ptype_11pcontainers_6_pdict_Signer, 1, "signer", 0))) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_compresser), __pyx_ptype_11pcontainers_6_pdict_Compresser, 1, "compresser", 0))) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5Chain___init__(((struct __pyx_obj_11pcontainers_6_pdict_Chain *)__pyx_v_self), __pyx_v_serializer, __pyx_v_signer, __pyx_v_compresser);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11pcontainers_6_pdict_5Chain___init__(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, struct __pyx_obj_11pcontainers_6_pdict_Serializer *__pyx_v_serializer, struct __pyx_obj_11pcontainers_6_pdict_Signer *__pyx_v_signer, struct __pyx_obj_11pcontainers_6_pdict_Compresser *__pyx_v_compresser) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pcontainers/filters_impl.pxi":218
 * cdef class Chain(Filter):
 *     def __init__(self, Serializer serializer=None, Signer signer=None, Compresser compresser=None):
 *         self.serializer = serializer if serializer else NoneSerializer()             # <<<<<<<<<<<<<<
 *         self.signer = signer if signer else NoneSigner()
 *         self.compresser = compresser if compresser else NoneCompresser()
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_serializer)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {
    __Pyx_INCREF(((PyObject *)__pyx_v_serializer));
    __pyx_t_1 = ((PyObject *)__pyx_v_serializer);
  } else {
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_NoneSerializer), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->serializer);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->serializer));
  __pyx_v_self->serializer = ((struct __pyx_obj_11pcontainers_6_pdict_Serializer *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":219
 *     def __init__(self, Serializer serializer=None, Signer signer=None, Compresser compresser=None):
 *         self.serializer = serializer if serializer else NoneSerializer()
 *         self.signer = signer if signer else NoneSigner()             # <<<<<<<<<<<<<<
 *         self.compresser = compresser if compresser else NoneCompresser()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_signer)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {
    __Pyx_INCREF(((PyObject *)__pyx_v_signer));
    __pyx_t_1 = ((PyObject *)__pyx_v_signer);
  } else {
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_NoneSigner), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->signer);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->signer));
  __pyx_v_self->signer = ((struct __pyx_obj_11pcontainers_6_pdict_Signer *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":220
 *         self.serializer = serializer if serializer else NoneSerializer()
 *         self.signer = signer if signer else NoneSigner()
 *         self.compresser = compresser if compresser else NoneCompresser()             # <<<<<<<<<<<<<<
 * 
 *     cpdef dumps(self, obj):
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_compresser)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {
    __Pyx_INCREF(((PyObject *)__pyx_v_compresser));
    __pyx_t_1 = ((PyObject *)__pyx_v_compresser);
  } else {
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_NoneCompresser), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->compresser);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->compresser));
  __pyx_v_self->compresser = ((struct __pyx_obj_11pcontainers_6_pdict_Compresser *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pcontainers/filters_impl.pxi":217
 * 
 * cdef class Chain(Filter):
 *     def __init__(self, Serializer serializer=None, Signer signer=None, Compresser compresser=None):             # <<<<<<<<<<<<<<
 *         self.serializer = serializer if serializer else NoneSerializer()
 *         self.signer = signer if signer else NoneSigner()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pcontainers._pdict.Chain.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":222
 *         self.compresser = compresser if compresser else NoneCompresser()
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         return self.signer.dumps(self.compresser.dumps(self.serializer.dumps(obj)))
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5Chain_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5Chain_dumps(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dumps); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5Chain_3dumps)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":223
 * 
 *     cpdef dumps(self, obj):
 *         return self.signer.dumps(self.compresser.dumps(self.serializer.dumps(obj)))             # <<<<<<<<<<<<<<
 * 
 *     cpdef loads(self, obj):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer *)__pyx_v_self->serializer->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->serializer), __pyx_v_obj, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Compresser *)__pyx_v_self->compresser->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->compresser), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Signer *)__pyx_v_self->signer->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->signer), __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":222
 *         self.compresser = compresser if compresser else NoneCompresser()
 * 
 *     cpdef dumps(self, obj):             # <<<<<<<<<<<<<<
 *         return self.signer.dumps(self.compresser.dumps(self.serializer.dumps(obj)))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.Chain.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5Chain_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5Chain_3dumps(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dumps (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5Chain_2dumps(((struct __pyx_obj_11pcontainers_6_pdict_Chain *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5Chain_2dumps(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dumps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5Chain_dumps(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.Chain.dumps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/filters_impl.pxi":225
 *         return self.signer.dumps(self.compresser.dumps(self.serializer.dumps(obj)))
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         return self.serializer.loads(self.compresser.loads(self.signer.loads(obj)))
 * 
 */

static PyObject *__pyx_pw_11pcontainers_6_pdict_5Chain_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_f_11pcontainers_6_pdict_5Chain_loads(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_loads); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5Chain_5loads)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_obj); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_obj);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pcontainers/filters_impl.pxi":226
 * 
 *     cpdef loads(self, obj):
 *         return self.serializer.loads(self.compresser.loads(self.signer.loads(obj)))             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Signer *)__pyx_v_self->signer->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->signer), __pyx_v_obj, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Compresser *)__pyx_v_self->compresser->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->compresser), __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer *)__pyx_v_self->serializer->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_v_self->serializer), __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/filters_impl.pxi":225
 *         return self.signer.dumps(self.compresser.dumps(self.serializer.dumps(obj)))
 * 
 *     cpdef loads(self, obj):             # <<<<<<<<<<<<<<
 *         return self.serializer.loads(self.compresser.loads(self.signer.loads(obj)))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.Chain.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5Chain_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj); /*proto*/
static PyObject *__pyx_pw_11pcontainers_6_pdict_5Chain_5loads(PyObject *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("loads (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_5Chain_4loads(((struct __pyx_obj_11pcontainers_6_pdict_Chain *)__pyx_v_self), ((PyObject *)__pyx_v_obj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_5Chain_4loads(struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("loads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11pcontainers_6_pdict_5Chain_loads(__pyx_v_self, __pyx_v_obj, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.Chain.loads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":31
 * 
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x):
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_5_adapt_unary_functor(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11pcontainers_6_pdict_5_adapt_unary_functor = {"_adapt_unary_functor", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5_adapt_unary_functor, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11pcontainers_6_pdict_5_adapt_unary_functor(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_unary_funct = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_adapt_unary_functor (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_unary_funct,&__pyx_n_s_value_chain,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unary_funct)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_adapt_unary_functor", 1, 2, 2, 1); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_adapt_unary_functor") < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_unary_funct = values[0];
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_adapt_unary_functor", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict._adapt_unary_functor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_4_adapt_unary_functor(__pyx_self, __pyx_v_unary_funct, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":32
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):
 *     def functor(x):             # <<<<<<<<<<<<<<
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 *     return functor
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_20_adapt_unary_functor_1functor(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyMethodDef __pyx_mdef_11pcontainers_6_pdict_20_adapt_unary_functor_1functor = {"functor", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_20_adapt_unary_functor_1functor, METH_O, 0};
static PyObject *__pyx_pw_11pcontainers_6_pdict_20_adapt_unary_functor_1functor(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("functor (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_20_adapt_unary_functor_functor(__pyx_self, ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_20_adapt_unary_functor_functor(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *__pyx_cur_scope;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("functor", 0);
  __pyx_outer_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "pcontainers/_pdict.pyx":33
 * def _adapt_unary_functor(unary_funct, Chain value_chain):
 *     def functor(x):
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()             # <<<<<<<<<<<<<<
 *     return functor
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_v_value_chain)) { __Pyx_RaiseClosureNameError("value_chain"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  if (unlikely(!__pyx_cur_scope->__pyx_v_unary_funct)) { __Pyx_RaiseClosureNameError("unary_funct"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  if (unlikely(!__pyx_cur_scope->__pyx_v_value_chain)) { __Pyx_RaiseClosureNameError("value_chain"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_value_chain), __pyx_v_x, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_unary_funct);
  __pyx_t_4 = __pyx_cur_scope->__pyx_v_unary_funct; __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_value_chain), __pyx_t_2, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_tobytes); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pyx":32
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):
 *     def functor(x):             # <<<<<<<<<<<<<<
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 *     return functor
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict._adapt_unary_functor.functor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":31
 * 
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x):
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_4_adapt_unary_functor(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_unary_funct, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *__pyx_cur_scope;
  PyObject *__pyx_v_functor = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_adapt_unary_functor", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_unary_funct = __pyx_v_unary_funct;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_unary_funct);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_unary_funct);
  __pyx_cur_scope->__pyx_v_value_chain = __pyx_v_value_chain;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_value_chain);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_value_chain);

  /* "pcontainers/_pdict.pyx":32
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):
 *     def functor(x):             # <<<<<<<<<<<<<<
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 *     return functor
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_11pcontainers_6_pdict_20_adapt_unary_functor_1functor, 0, __pyx_n_s_adapt_unary_functor_locals_func, ((PyObject*)__pyx_cur_scope), __pyx_n_s_pcontainers__pdict, __pyx_d, ((PyObject *)__pyx_codeobj__38)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_functor = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/_pdict.pyx":34
 *     def functor(x):
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 *     return functor             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_functor);
  __pyx_r = __pyx_v_functor;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pyx":31
 * 
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x):
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict._adapt_unary_functor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_functor);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":37
 * 
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x, y):
 *         return value_chain.dumps(
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_7_adapt_binary_functor(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11pcontainers_6_pdict_7_adapt_binary_functor = {"_adapt_binary_functor", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_7_adapt_binary_functor, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11pcontainers_6_pdict_7_adapt_binary_functor(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_binary_funct = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_adapt_binary_functor (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_binary_funct,&__pyx_n_s_key_chain,&__pyx_n_s_value_chain,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_binary_funct)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key_chain)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_adapt_binary_functor", 1, 3, 3, 1); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_adapt_binary_functor", 1, 3, 3, 2); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_adapt_binary_functor") < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_binary_funct = values[0];
    __pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[1]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_adapt_binary_functor", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict._adapt_binary_functor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "key_chain", 0))) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_6_adapt_binary_functor(__pyx_self, __pyx_v_binary_funct, __pyx_v_key_chain, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":38
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):
 *     def functor(x, y):             # <<<<<<<<<<<<<<
 *         return value_chain.dumps(
 *             binary_funct(
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_21_adapt_binary_functor_1functor(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11pcontainers_6_pdict_21_adapt_binary_functor_1functor = {"functor", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_21_adapt_binary_functor_1functor, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11pcontainers_6_pdict_21_adapt_binary_functor_1functor(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("functor (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("functor", 1, 2, 2, 1); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "functor") < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("functor", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict._adapt_binary_functor.functor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_21_adapt_binary_functor_functor(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_21_adapt_binary_functor_functor(PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *__pyx_cur_scope;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("functor", 0);
  __pyx_outer_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "pcontainers/_pdict.pyx":39
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):
 *     def functor(x, y):
 *         return value_chain.dumps(             # <<<<<<<<<<<<<<
 *             binary_funct(
 *                 key_chain.loads(x),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "pcontainers/_pdict.pyx":44
 *                 key_chain.loads(y)
 *             )
 *         ).tobytes()             # <<<<<<<<<<<<<<
 *     return functor
 * 
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_value_chain)) { __Pyx_RaiseClosureNameError("value_chain"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }

  /* "pcontainers/_pdict.pyx":40
 *     def functor(x, y):
 *         return value_chain.dumps(
 *             binary_funct(             # <<<<<<<<<<<<<<
 *                 key_chain.loads(x),
 *                 key_chain.loads(y)
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_binary_funct)) { __Pyx_RaiseClosureNameError("binary_funct"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }

  /* "pcontainers/_pdict.pyx":41
 *         return value_chain.dumps(
 *             binary_funct(
 *                 key_chain.loads(x),             # <<<<<<<<<<<<<<
 *                 key_chain.loads(y)
 *             )
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_key_chain)) { __Pyx_RaiseClosureNameError("key_chain"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_key_chain), __pyx_v_x, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "pcontainers/_pdict.pyx":42
 *             binary_funct(
 *                 key_chain.loads(x),
 *                 key_chain.loads(y)             # <<<<<<<<<<<<<<
 *             )
 *         ).tobytes()
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_key_chain)) { __Pyx_RaiseClosureNameError("key_chain"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_4 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_key_chain), __pyx_v_y, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_binary_funct);
  __pyx_t_5 = __pyx_cur_scope->__pyx_v_binary_funct; __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "pcontainers/_pdict.pyx":39
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):
 *     def functor(x, y):
 *         return value_chain.dumps(             # <<<<<<<<<<<<<<
 *             binary_funct(
 *                 key_chain.loads(x),
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_value_chain->__pyx_base.__pyx_vtab)->__pyx_base.dumps(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_value_chain), __pyx_t_2, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pcontainers/_pdict.pyx":44
 *                 key_chain.loads(y)
 *             )
 *         ).tobytes()             # <<<<<<<<<<<<<<
 *     return functor
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_tobytes); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pyx":38
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):
 *     def functor(x, y):             # <<<<<<<<<<<<<<
 *         return value_chain.dumps(
 *             binary_funct(
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pcontainers._pdict._adapt_binary_functor.functor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":37
 * 
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x, y):
 *         return value_chain.dumps(
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_6_adapt_binary_functor(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_binary_funct, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *__pyx_cur_scope;
  PyObject *__pyx_v_functor = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_adapt_binary_functor", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_binary_funct = __pyx_v_binary_funct;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_binary_funct);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_binary_funct);
  __pyx_cur_scope->__pyx_v_key_chain = __pyx_v_key_chain;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_key_chain);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_key_chain);
  __pyx_cur_scope->__pyx_v_value_chain = __pyx_v_value_chain;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_value_chain);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_value_chain);

  /* "pcontainers/_pdict.pyx":38
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):
 *     def functor(x, y):             # <<<<<<<<<<<<<<
 *         return value_chain.dumps(
 *             binary_funct(
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_11pcontainers_6_pdict_21_adapt_binary_functor_1functor, 0, __pyx_n_s_adapt_binary_functor_locals_fun, ((PyObject*)__pyx_cur_scope), __pyx_n_s_pcontainers__pdict, __pyx_d, ((PyObject *)__pyx_codeobj__40)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_functor = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/_pdict.pyx":45
 *             )
 *         ).tobytes()
 *     return functor             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_functor);
  __pyx_r = __pyx_v_functor;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pyx":37
 * 
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x, y):
 *         return value_chain.dumps(
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict._adapt_binary_functor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_functor);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":48
 * 
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x):
 *         return bool(unary_pred(value_chain.loads(x)))
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_9_adapt_unary_predicate(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11pcontainers_6_pdict_9_adapt_unary_predicate = {"_adapt_unary_predicate", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9_adapt_unary_predicate, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11pcontainers_6_pdict_9_adapt_unary_predicate(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_unary_pred = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_adapt_unary_predicate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_unary_pred,&__pyx_n_s_value_chain,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unary_pred)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_adapt_unary_predicate", 1, 2, 2, 1); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_adapt_unary_predicate") < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_unary_pred = values[0];
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_adapt_unary_predicate", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict._adapt_unary_predicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_8_adapt_unary_predicate(__pyx_self, __pyx_v_unary_pred, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":49
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):
 *     def predicate(x):             # <<<<<<<<<<<<<<
 *         return bool(unary_pred(value_chain.loads(x)))
 *     return predicate
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_22_adapt_unary_predicate_1predicate(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyMethodDef __pyx_mdef_11pcontainers_6_pdict_22_adapt_unary_predicate_1predicate = {"predicate", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_22_adapt_unary_predicate_1predicate, METH_O, 0};
static PyObject *__pyx_pw_11pcontainers_6_pdict_22_adapt_unary_predicate_1predicate(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("predicate (wrapper)", 0);
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_22_adapt_unary_predicate_predicate(__pyx_self, ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_22_adapt_unary_predicate_predicate(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *__pyx_cur_scope;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("predicate", 0);
  __pyx_outer_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "pcontainers/_pdict.pyx":50
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):
 *     def predicate(x):
 *         return bool(unary_pred(value_chain.loads(x)))             # <<<<<<<<<<<<<<
 *     return predicate
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_v_unary_pred)) { __Pyx_RaiseClosureNameError("unary_pred"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  if (unlikely(!__pyx_cur_scope->__pyx_v_value_chain)) { __Pyx_RaiseClosureNameError("value_chain"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_value_chain), __pyx_v_x, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_unary_pred);
  __pyx_t_3 = __pyx_cur_scope->__pyx_v_unary_pred; __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyBool_FromLong((!(!__pyx_t_6))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pyx":49
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):
 *     def predicate(x):             # <<<<<<<<<<<<<<
 *         return bool(unary_pred(value_chain.loads(x)))
 *     return predicate
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict._adapt_unary_predicate.predicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":48
 * 
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x):
 *         return bool(unary_pred(value_chain.loads(x)))
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_8_adapt_unary_predicate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_unary_pred, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *__pyx_cur_scope;
  PyObject *__pyx_v_predicate = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_adapt_unary_predicate", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_unary_pred = __pyx_v_unary_pred;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_unary_pred);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_unary_pred);
  __pyx_cur_scope->__pyx_v_value_chain = __pyx_v_value_chain;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_value_chain);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_value_chain);

  /* "pcontainers/_pdict.pyx":49
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):
 *     def predicate(x):             # <<<<<<<<<<<<<<
 *         return bool(unary_pred(value_chain.loads(x)))
 *     return predicate
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_11pcontainers_6_pdict_22_adapt_unary_predicate_1predicate, 0, __pyx_n_s_adapt_unary_predicate_locals_pr, ((PyObject*)__pyx_cur_scope), __pyx_n_s_pcontainers__pdict, __pyx_d, ((PyObject *)__pyx_codeobj__42)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_predicate = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/_pdict.pyx":51
 *     def predicate(x):
 *         return bool(unary_pred(value_chain.loads(x)))
 *     return predicate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_predicate);
  __pyx_r = __pyx_v_predicate;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pyx":48
 * 
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x):
 *         return bool(unary_pred(value_chain.loads(x)))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict._adapt_unary_predicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_predicate);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":54
 * 
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x, y):
 *         return bool(
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_11_adapt_binary_predicate(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11pcontainers_6_pdict_11_adapt_binary_predicate = {"_adapt_binary_predicate", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11_adapt_binary_predicate, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11pcontainers_6_pdict_11_adapt_binary_predicate(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_binary_pred = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain = 0;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_adapt_binary_predicate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_binary_pred,&__pyx_n_s_key_chain,&__pyx_n_s_value_chain,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_binary_pred)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_key_chain)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_adapt_binary_predicate", 1, 3, 3, 1); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value_chain)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_adapt_binary_predicate", 1, 3, 3, 2); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_adapt_binary_predicate") < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_binary_pred = values[0];
    __pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[1]);
    __pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_adapt_binary_predicate", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict._adapt_binary_predicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "key_chain", 0))) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value_chain), __pyx_ptype_11pcontainers_6_pdict_Chain, 1, "value_chain", 0))) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_10_adapt_binary_predicate(__pyx_self, __pyx_v_binary_pred, __pyx_v_key_chain, __pyx_v_value_chain);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":55
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):
 *     def predicate(x, y):             # <<<<<<<<<<<<<<
 *         return bool(
 *             binary_pred(
 */

/* Python wrapper */
static PyObject *__pyx_pw_11pcontainers_6_pdict_23_adapt_binary_predicate_1predicate(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11pcontainers_6_pdict_23_adapt_binary_predicate_1predicate = {"predicate", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_23_adapt_binary_predicate_1predicate, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11pcontainers_6_pdict_23_adapt_binary_predicate_1predicate(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("predicate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("predicate", 1, 2, 2, 1); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "predicate") < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("predicate", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pcontainers._pdict._adapt_binary_predicate.predicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11pcontainers_6_pdict_23_adapt_binary_predicate_predicate(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11pcontainers_6_pdict_23_adapt_binary_predicate_predicate(PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *__pyx_cur_scope;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("predicate", 0);
  __pyx_outer_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "pcontainers/_pdict.pyx":56
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):
 *     def predicate(x, y):
 *         return bool(             # <<<<<<<<<<<<<<
 *             binary_pred(
 *                 key_chain.loads(x),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "pcontainers/_pdict.pyx":57
 *     def predicate(x, y):
 *         return bool(
 *             binary_pred(             # <<<<<<<<<<<<<<
 *                 key_chain.loads(x),
 *                 value_chain.loads(y)
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_binary_pred)) { __Pyx_RaiseClosureNameError("binary_pred"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }

  /* "pcontainers/_pdict.pyx":58
 *         return bool(
 *             binary_pred(
 *                 key_chain.loads(x),             # <<<<<<<<<<<<<<
 *                 value_chain.loads(y)
 *             )
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_key_chain)) { __Pyx_RaiseClosureNameError("key_chain"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_2 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_key_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_key_chain), __pyx_v_x, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "pcontainers/_pdict.pyx":59
 *             binary_pred(
 *                 key_chain.loads(x),
 *                 value_chain.loads(y)             # <<<<<<<<<<<<<<
 *             )
 *         )
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_value_chain)) { __Pyx_RaiseClosureNameError("value_chain"); {__pyx_filename = __pyx_f[6]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_3 = ((struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain *)__pyx_cur_scope->__pyx_v_value_chain->__pyx_base.__pyx_vtab)->__pyx_base.loads(((struct __pyx_obj_11pcontainers_6_pdict_Filter *)__pyx_cur_scope->__pyx_v_value_chain), __pyx_v_y, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_binary_pred);
  __pyx_t_4 = __pyx_cur_scope->__pyx_v_binary_pred; __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/_pdict.pyx":57
 *     def predicate(x, y):
 *         return bool(
 *             binary_pred(             # <<<<<<<<<<<<<<
 *                 key_chain.loads(x),
 *                 value_chain.loads(y)
 */
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pcontainers/_pdict.pyx":56
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):
 *     def predicate(x, y):
 *         return bool(             # <<<<<<<<<<<<<<
 *             binary_pred(
 *                 key_chain.loads(x),
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong((!(!__pyx_t_8))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pyx":55
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):
 *     def predicate(x, y):             # <<<<<<<<<<<<<<
 *         return bool(
 *             binary_pred(
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pcontainers._pdict._adapt_binary_predicate.predicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pyx":54
 * 
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x, y):
 *         return bool(
 */

static PyObject *__pyx_pf_11pcontainers_6_pdict_10_adapt_binary_predicate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_binary_pred, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_key_chain, struct __pyx_obj_11pcontainers_6_pdict_Chain *__pyx_v_value_chain) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *__pyx_cur_scope;
  PyObject *__pyx_v_predicate = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_adapt_binary_predicate", 0);
  __pyx_cur_scope = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *)__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate(__pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_binary_pred = __pyx_v_binary_pred;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_binary_pred);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_binary_pred);
  __pyx_cur_scope->__pyx_v_key_chain = __pyx_v_key_chain;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_key_chain);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_key_chain);
  __pyx_cur_scope->__pyx_v_value_chain = __pyx_v_value_chain;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_value_chain);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_value_chain);

  /* "pcontainers/_pdict.pyx":55
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):
 *     def predicate(x, y):             # <<<<<<<<<<<<<<
 *         return bool(
 *             binary_pred(
 */
  __pyx_t_1 = __Pyx_CyFunction_NewEx(&__pyx_mdef_11pcontainers_6_pdict_23_adapt_binary_predicate_1predicate, 0, __pyx_n_s_adapt_binary_predicate_locals_p, ((PyObject*)__pyx_cur_scope), __pyx_n_s_pcontainers__pdict, __pyx_d, ((PyObject *)__pyx_codeobj__44)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_predicate = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pcontainers/_pdict.pyx":62
 *             )
 *         )
 *     return predicate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_predicate);
  __pyx_r = __pyx_v_predicate;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pyx":54
 * 
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x, y):
 *         return bool(
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict._adapt_binary_predicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_predicate);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pxd":36
 * include "cbstring.pxi"
 * 
 * cdef inline topy(const CBString& s):             # <<<<<<<<<<<<<<
 *     return PyBytes_FromStringAndSize(<char*> s.data, s.slen)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_11pcontainers_6_pdict_topy(Bstrlib::CBString const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("topy", 0);

  /* "pcontainers/_pdict.pxd":37
 * 
 * cdef inline topy(const CBString& s):
 *     return PyBytes_FromStringAndSize(<char*> s.data, s.slen)             # <<<<<<<<<<<<<<
 * 
 * cdef inline CBString tocbstring(bytes s):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromStringAndSize(((char *)__pyx_v_s.data), __pyx_v_s.slen); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pcontainers/_pdict.pxd":36
 * include "cbstring.pxi"
 * 
 * cdef inline topy(const CBString& s):             # <<<<<<<<<<<<<<
 *     return PyBytes_FromStringAndSize(<char*> s.data, s.slen)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pcontainers._pdict.topy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/_pdict.pxd":39
 *     return PyBytes_FromStringAndSize(<char*> s.data, s.slen)
 * 
 * cdef inline CBString tocbstring(bytes s):             # <<<<<<<<<<<<<<
 *     return CBString(<char*> s, len(s))
 * 
 */

static CYTHON_INLINE Bstrlib::CBString __pyx_f_11pcontainers_6_pdict_tocbstring(PyObject *__pyx_v_s) {
  Bstrlib::CBString __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tocbstring", 0);

  /* "pcontainers/_pdict.pxd":40
 * 
 * cdef inline CBString tocbstring(bytes s):
 *     return CBString(<char*> s, len(s))             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "lmdb.h" nogil:
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_v_s); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(__pyx_v_s == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[7]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = PyBytes_GET_SIZE(__pyx_v_s); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = Bstrlib::CBString(((char *)__pyx_t_1), __pyx_t_2);
  goto __pyx_L0;

  /* "pcontainers/_pdict.pxd":39
 *     return PyBytes_FromStringAndSize(<char*> s.data, s.slen)
 * 
 * cdef inline CBString tocbstring(bytes s):             # <<<<<<<<<<<<<<
 *     return CBString(<char*> s, len(s))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("pcontainers._pdict.tocbstring", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/helpers.pxi":2
 * 
 * cdef inline unicode make_unicode(s):             # <<<<<<<<<<<<<<
 *     if s is None:
 *         return u''
 */

static CYTHON_INLINE PyObject *__pyx_f_11pcontainers_6_pdict_make_unicode(PyObject *__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("make_unicode", 0);
  __Pyx_INCREF(__pyx_v_s);

  /* "pcontainers/helpers.pxi":3
 * 
 * cdef inline unicode make_unicode(s):
 *     if s is None:             # <<<<<<<<<<<<<<
 *         return u''
 *     if PyUnicode_Check(s):
 */
  __pyx_t_1 = (__pyx_v_s == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":4
 * cdef inline unicode make_unicode(s):
 *     if s is None:
 *         return u''             # <<<<<<<<<<<<<<
 *     if PyUnicode_Check(s):
 *         return s
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_u__5);
    __pyx_r = __pyx_kp_u__5;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":3
 * 
 * cdef inline unicode make_unicode(s):
 *     if s is None:             # <<<<<<<<<<<<<<
 *         return u''
 *     if PyUnicode_Check(s):
 */
  }

  /* "pcontainers/helpers.pxi":5
 *     if s is None:
 *         return u''
 *     if PyUnicode_Check(s):             # <<<<<<<<<<<<<<
 *         return s
 *     if PyBytes_Check(s):
 */
  __pyx_t_2 = (PyUnicode_Check(__pyx_v_s) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":6
 *         return u''
 *     if PyUnicode_Check(s):
 *         return s             # <<<<<<<<<<<<<<
 *     if PyBytes_Check(s):
 *         return s.decode('utf-8')
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(PyUnicode_CheckExact(__pyx_v_s))||((__pyx_v_s) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_s)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_s);
    __pyx_r = ((PyObject*)__pyx_v_s);
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":5
 *     if s is None:
 *         return u''
 *     if PyUnicode_Check(s):             # <<<<<<<<<<<<<<
 *         return s
 *     if PyBytes_Check(s):
 */
  }

  /* "pcontainers/helpers.pxi":7
 *     if PyUnicode_Check(s):
 *         return s
 *     if PyBytes_Check(s):             # <<<<<<<<<<<<<<
 *         return s.decode('utf-8')
 *     if hasattr(s, '__unicode__'):
 */
  __pyx_t_2 = (PyBytes_Check(__pyx_v_s) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":8
 *         return s
 *     if PyBytes_Check(s):
 *         return s.decode('utf-8')             # <<<<<<<<<<<<<<
 *     if hasattr(s, '__unicode__'):
 *         return s.__unicode__()
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(PyUnicode_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_4)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_r = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":7
 *     if PyUnicode_Check(s):
 *         return s
 *     if PyBytes_Check(s):             # <<<<<<<<<<<<<<
 *         return s.decode('utf-8')
 *     if hasattr(s, '__unicode__'):
 */
  }

  /* "pcontainers/helpers.pxi":9
 *     if PyBytes_Check(s):
 *         return s.decode('utf-8')
 *     if hasattr(s, '__unicode__'):             # <<<<<<<<<<<<<<
 *         return s.__unicode__()
 *     if hasattr(s, '__bytes__'):
 */
  __pyx_t_2 = PyObject_HasAttr(__pyx_v_s, __pyx_n_s_unicode); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pcontainers/helpers.pxi":10
 *         return s.decode('utf-8')
 *     if hasattr(s, '__unicode__'):
 *         return s.__unicode__()             # <<<<<<<<<<<<<<
 *     if hasattr(s, '__bytes__'):
 *         return s.__bytes__().decode('utf-8')
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_unicode); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(PyUnicode_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_4)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_r = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":9
 *     if PyBytes_Check(s):
 *         return s.decode('utf-8')
 *     if hasattr(s, '__unicode__'):             # <<<<<<<<<<<<<<
 *         return s.__unicode__()
 *     if hasattr(s, '__bytes__'):
 */
  }

  /* "pcontainers/helpers.pxi":11
 *     if hasattr(s, '__unicode__'):
 *         return s.__unicode__()
 *     if hasattr(s, '__bytes__'):             # <<<<<<<<<<<<<<
 *         return s.__bytes__().decode('utf-8')
 *     s = str(s)
 */
  __pyx_t_1 = PyObject_HasAttr(__pyx_v_s, __pyx_n_s_bytes); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":12
 *         return s.__unicode__()
 *     if hasattr(s, '__bytes__'):
 *         return s.__bytes__().decode('utf-8')             # <<<<<<<<<<<<<<
 *     s = str(s)
 *     if PyUnicode_Check(s):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_bytes); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(PyUnicode_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_4)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_r = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":11
 *     if hasattr(s, '__unicode__'):
 *         return s.__unicode__()
 *     if hasattr(s, '__bytes__'):             # <<<<<<<<<<<<<<
 *         return s.__bytes__().decode('utf-8')
 *     s = str(s)
 */
  }

  /* "pcontainers/helpers.pxi":13
 *     if hasattr(s, '__bytes__'):
 *         return s.__bytes__().decode('utf-8')
 *     s = str(s)             # <<<<<<<<<<<<<<
 *     if PyUnicode_Check(s):
 *         return s
 */
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_s);
  __Pyx_GIVEREF(__pyx_v_s);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_s);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "pcontainers/helpers.pxi":14
 *         return s.__bytes__().decode('utf-8')
 *     s = str(s)
 *     if PyUnicode_Check(s):             # <<<<<<<<<<<<<<
 *         return s
 *     return s.decode('utf-8')
 */
  __pyx_t_2 = (PyUnicode_Check(__pyx_v_s) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":15
 *     s = str(s)
 *     if PyUnicode_Check(s):
 *         return s             # <<<<<<<<<<<<<<
 *     return s.decode('utf-8')
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(PyUnicode_CheckExact(__pyx_v_s))||((__pyx_v_s) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_s)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_s);
    __pyx_r = ((PyObject*)__pyx_v_s);
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":14
 *         return s.__bytes__().decode('utf-8')
 *     s = str(s)
 *     if PyUnicode_Check(s):             # <<<<<<<<<<<<<<
 *         return s
 *     return s.decode('utf-8')
 */
  }

  /* "pcontainers/helpers.pxi":16
 *     if PyUnicode_Check(s):
 *         return s
 *     return s.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(PyUnicode_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_4)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "pcontainers/helpers.pxi":2
 * 
 * cdef inline unicode make_unicode(s):             # <<<<<<<<<<<<<<
 *     if s is None:
 *         return u''
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.make_unicode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/helpers.pxi":19
 * 
 * 
 * cdef inline bytes make_utf8(s):             # <<<<<<<<<<<<<<
 *     if s is None:
 *         return b''
 */

static CYTHON_INLINE PyObject *__pyx_f_11pcontainers_6_pdict_make_utf8(PyObject *__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("make_utf8", 0);
  __Pyx_INCREF(__pyx_v_s);

  /* "pcontainers/helpers.pxi":20
 * 
 * cdef inline bytes make_utf8(s):
 *     if s is None:             # <<<<<<<<<<<<<<
 *         return b''
 *     if PyBytes_Check(s):
 */
  __pyx_t_1 = (__pyx_v_s == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":21
 * cdef inline bytes make_utf8(s):
 *     if s is None:
 *         return b''             # <<<<<<<<<<<<<<
 *     if PyBytes_Check(s):
 *         return s
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_b__5);
    __pyx_r = __pyx_kp_b__5;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":20
 * 
 * cdef inline bytes make_utf8(s):
 *     if s is None:             # <<<<<<<<<<<<<<
 *         return b''
 *     if PyBytes_Check(s):
 */
  }

  /* "pcontainers/helpers.pxi":22
 *     if s is None:
 *         return b''
 *     if PyBytes_Check(s):             # <<<<<<<<<<<<<<
 *         return s
 *     if PyUnicode_Check(s):
 */
  __pyx_t_2 = (PyBytes_Check(__pyx_v_s) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":23
 *         return b''
 *     if PyBytes_Check(s):
 *         return s             # <<<<<<<<<<<<<<
 *     if PyUnicode_Check(s):
 *         return PyUnicode_AsUTF8String(s)
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(PyBytes_CheckExact(__pyx_v_s))||((__pyx_v_s) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_s)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_s);
    __pyx_r = ((PyObject*)__pyx_v_s);
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":22
 *     if s is None:
 *         return b''
 *     if PyBytes_Check(s):             # <<<<<<<<<<<<<<
 *         return s
 *     if PyUnicode_Check(s):
 */
  }

  /* "pcontainers/helpers.pxi":24
 *     if PyBytes_Check(s):
 *         return s
 *     if PyUnicode_Check(s):             # <<<<<<<<<<<<<<
 *         return PyUnicode_AsUTF8String(s)
 *     if hasattr(s, '__bytes__'):
 */
  __pyx_t_2 = (PyUnicode_Check(__pyx_v_s) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":25
 *         return s
 *     if PyUnicode_Check(s):
 *         return PyUnicode_AsUTF8String(s)             # <<<<<<<<<<<<<<
 *     if hasattr(s, '__bytes__'):
 *         return s.__bytes__()
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyUnicode_AsUTF8String(__pyx_v_s); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":24
 *     if PyBytes_Check(s):
 *         return s
 *     if PyUnicode_Check(s):             # <<<<<<<<<<<<<<
 *         return PyUnicode_AsUTF8String(s)
 *     if hasattr(s, '__bytes__'):
 */
  }

  /* "pcontainers/helpers.pxi":26
 *     if PyUnicode_Check(s):
 *         return PyUnicode_AsUTF8String(s)
 *     if hasattr(s, '__bytes__'):             # <<<<<<<<<<<<<<
 *         return s.__bytes__()
 *     if hasattr(s, '__unicode__'):
 */
  __pyx_t_2 = PyObject_HasAttr(__pyx_v_s, __pyx_n_s_bytes); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pcontainers/helpers.pxi":27
 *         return PyUnicode_AsUTF8String(s)
 *     if hasattr(s, '__bytes__'):
 *         return s.__bytes__()             # <<<<<<<<<<<<<<
 *     if hasattr(s, '__unicode__'):
 *         return PyUnicode_AsUTF8String(s.__unicode__())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_bytes); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(PyBytes_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":26
 *     if PyUnicode_Check(s):
 *         return PyUnicode_AsUTF8String(s)
 *     if hasattr(s, '__bytes__'):             # <<<<<<<<<<<<<<
 *         return s.__bytes__()
 *     if hasattr(s, '__unicode__'):
 */
  }

  /* "pcontainers/helpers.pxi":28
 *     if hasattr(s, '__bytes__'):
 *         return s.__bytes__()
 *     if hasattr(s, '__unicode__'):             # <<<<<<<<<<<<<<
 *         return PyUnicode_AsUTF8String(s.__unicode__())
 *     s = str(s)
 */
  __pyx_t_1 = PyObject_HasAttr(__pyx_v_s, __pyx_n_s_unicode); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":29
 *         return s.__bytes__()
 *     if hasattr(s, '__unicode__'):
 *         return PyUnicode_AsUTF8String(s.__unicode__())             # <<<<<<<<<<<<<<
 *     s = str(s)
 *     if PyUnicode_Check(s):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_unicode); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyUnicode_AsUTF8String(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":28
 *     if hasattr(s, '__bytes__'):
 *         return s.__bytes__()
 *     if hasattr(s, '__unicode__'):             # <<<<<<<<<<<<<<
 *         return PyUnicode_AsUTF8String(s.__unicode__())
 *     s = str(s)
 */
  }

  /* "pcontainers/helpers.pxi":30
 *     if hasattr(s, '__unicode__'):
 *         return PyUnicode_AsUTF8String(s.__unicode__())
 *     s = str(s)             # <<<<<<<<<<<<<<
 *     if PyUnicode_Check(s):
 *         return PyUnicode_AsUTF8String(s)
 */
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_s);
  __Pyx_GIVEREF(__pyx_v_s);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_s);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "pcontainers/helpers.pxi":31
 *         return PyUnicode_AsUTF8String(s.__unicode__())
 *     s = str(s)
 *     if PyUnicode_Check(s):             # <<<<<<<<<<<<<<
 *         return PyUnicode_AsUTF8String(s)
 *     return s
 */
  __pyx_t_2 = (PyUnicode_Check(__pyx_v_s) != 0);
  if (__pyx_t_2) {

    /* "pcontainers/helpers.pxi":32
 *     s = str(s)
 *     if PyUnicode_Check(s):
 *         return PyUnicode_AsUTF8String(s)             # <<<<<<<<<<<<<<
 *     return s
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyUnicode_AsUTF8String(__pyx_v_s); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "pcontainers/helpers.pxi":31
 *         return PyUnicode_AsUTF8String(s.__unicode__())
 *     s = str(s)
 *     if PyUnicode_Check(s):             # <<<<<<<<<<<<<<
 *         return PyUnicode_AsUTF8String(s)
 *     return s
 */
  }

  /* "pcontainers/helpers.pxi":33
 *     if PyUnicode_Check(s):
 *         return PyUnicode_AsUTF8String(s)
 *     return s             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (!(likely(PyBytes_CheckExact(__pyx_v_s))||((__pyx_v_s) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_s)->tp_name), 0))) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_s);
  __pyx_r = ((PyObject*)__pyx_v_s);
  goto __pyx_L0;

  /* "pcontainers/helpers.pxi":19
 * 
 * 
 * cdef inline bytes make_utf8(s):             # <<<<<<<<<<<<<<
 *     if s is None:
 *         return b''
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pcontainers._pdict.make_utf8", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pcontainers/helpers.pxi":36
 * 
 * 
 * cdef inline void* copy_mdb_val(MDB_val v) nogil:             # <<<<<<<<<<<<<<
 *     ptr = malloc(v.mv_size)
 *     memcpy(ptr, v.mv_data, v.mv_size)
 */

static CYTHON_INLINE void *__pyx_f_11pcontainers_6_pdict_copy_mdb_val(MDB_val __pyx_v_v) {
  void *__pyx_v_ptr;
  void *__pyx_r;

  /* "pcontainers/helpers.pxi":37
 * 
 * cdef inline void* copy_mdb_val(MDB_val v) nogil:
 *     ptr = malloc(v.mv_size)             # <<<<<<<<<<<<<<
 *     memcpy(ptr, v.mv_data, v.mv_size)
 *     return ptr
 */
  __pyx_v_ptr = malloc(__pyx_v_v.mv_size);

  /* "pcontainers/helpers.pxi":38
 * cdef inline void* copy_mdb_val(MDB_val v) nogil:
 *     ptr = malloc(v.mv_size)
 *     memcpy(ptr, v.mv_data, v.mv_size)             # <<<<<<<<<<<<<<
 *     return ptr
 * 
 */
  memcpy(__pyx_v_ptr, __pyx_v_v.mv_data, __pyx_v_v.mv_size);

  /* "pcontainers/helpers.pxi":39
 *     ptr = malloc(v.mv_size)
 *     memcpy(ptr, v.mv_data, v.mv_size)
 *     return ptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_ptr;
  goto __pyx_L0;

  /* "pcontainers/helpers.pxi":36
 * 
 * 
 * cdef inline void* copy_mdb_val(MDB_val v) nogil:             # <<<<<<<<<<<<<<
 *     ptr = malloc(v.mv_size)
 *     memcpy(ptr, v.mv_data, v.mv_size)
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "pcontainers/helpers.pxi":42
 * 
 * 
 * cdef inline make_mbufferio(void* ptr, size_t size):             # <<<<<<<<<<<<<<
 *     cdef Py_buffer* view = <Py_buffer*> PyMem_Malloc(sizeof(Py_buffer))
 *     PyBuffer_FillInfo(view, None, ptr, size, 1, PyBUF_SIMPLE)
 */

static CYTHON_INLINE PyObject *__pyx_f_11pcontainers_6_pdict_make_mbufferio(void *__pyx_v_ptr, size_t __pyx_v_size) {
  Py_buffer *__pyx_v_view;
  PyObject *__pyx_v_memory_view = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("make_mbufferio", 0);

  /* "pcontainers/helpers.pxi":43
 * 
 * cdef inline make_mbufferio(void* ptr, size_t size):
 *     cdef Py_buffer* view = <Py_buffer*> PyMem_Malloc(sizeof(Py_buffer))             # <<<<<<<<<<<<<<
 *     PyBuffer_FillInfo(view, None, ptr, size, 1, PyBUF_SIMPLE)
 *     memory_view = PyMemoryView_FromBuffer(view)         # the new mview object now owns the view buffer, no need to free view
 */
  __pyx_v_view = ((Py_buffer *)PyMem_Malloc((sizeof(Py_buffer))));

  /* "pcontainers/helpers.pxi":44
 * cdef inline make_mbufferio(void* ptr, size_t size):
 *     cdef Py_buffer* view = <Py_buffer*> PyMem_Malloc(sizeof(Py_buffer))
 *     PyBuffer_FillInfo(view, None, ptr, size, 1, PyBUF_SIMPLE)             # <<<<<<<<<<<<<<
 *     memory_view = PyMemoryView_FromBuffer(view)         # the new mview object now owns the view buffer, no need to free view
 *     return MBufferIO.from_mview(memory_view, True)      # the release and free operations will be taken cared by MBufferIO
 */
  __pyx_t_1 = PyBuffer_FillInfo(__pyx_v_view, Py_None, __pyx_v_ptr, __pyx_v_size, 1, PyBUF_SIMPLE); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/helpers.pxi":45
 *     cdef Py_buffer* view = <Py_buffer*> PyMem_Malloc(sizeof(Py_buffer))
 *     PyBuffer_FillInfo(view, None, ptr, size, 1, PyBUF_SIMPLE)
 *     memory_view = PyMemoryView_FromBuffer(view)         # the new mview object now owns the view buffer, no need to free view             # <<<<<<<<<<<<<<
 *     return MBufferIO.from_mview(memory_view, True)      # the release and free operations will be taken cared by MBufferIO
 * 
 */
  __pyx_t_2 = PyMemoryView_FromBuffer(__pyx_v_view); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_memory_view = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pcontainers/helpers.pxi":46
 *     PyBuffer_FillInfo(view, None, ptr, size, 1, PyBUF_SIMPLE)
 *     memory_view = PyMemoryView_FromBuffer(view)         # the new mview object now owns the view buffer, no need to free view
 *     return MBufferIO.from_mview(memory_view, True)      # the release and free operations will be taken cared by MBufferIO             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_from_mview); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_memory_view);
  __Pyx_GIVEREF(__pyx_v_memory_view);
  PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_memory_view);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, Py_True);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pcontainers/helpers.pxi":42
 * 
 * 
 * cdef inline make_mbufferio(void* ptr, size_t size):             # <<<<<<<<<<<<<<
 *     cdef Py_buffer* view = <Py_buffer*> PyMem_Malloc(sizeof(Py_buffer))
 *     PyBuffer_FillInfo(view, None, ptr, size, 1, PyBUF_SIMPLE)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pcontainers._pdict.make_mbufferio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_memory_view);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict __pyx_vtable_11pcontainers_6_pdict_PRawDict;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PRawDict(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_PRawDict *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)o);
  p->__pyx_vtab = __pyx_vtabptr_11pcontainers_6_pdict_PRawDict;
  if (unlikely(__pyx_pw_11pcontainers_6_pdict_8PRawDict_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_PRawDict(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_11pcontainers_6_pdict_8PRawDict_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_11pcontainers_6_pdict_PRawDict(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_11pcontainers_6_pdict_PRawDict(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_8PRawDict_21__setitem__(o, i, v);
  }
  else {
    return __pyx_pw_11pcontainers_6_pdict_8PRawDict_23__delitem__(o, i);
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_8PRawDict_dirname(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_8PRawDict_7dirname_1__get__(o);
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_8PRawDict_dbname(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_8PRawDict_6dbname_1__get__(o);
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_PRawDict[] = {
  {"make_temp", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_9make_temp, METH_VARARGS|METH_KEYWORDS, 0},
  {"__reduce__", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_11__reduce__, METH_NOARGS, 0},
  {"get", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_17get, METH_VARARGS|METH_KEYWORDS, 0},
  {"setdefault", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_19setdefault, METH_VARARGS|METH_KEYWORDS, 0},
  {"erase", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_25erase, METH_VARARGS|METH_KEYWORDS, 0},
  {"noiterkeys", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_27noiterkeys, METH_NOARGS, 0},
  {"noitervalues", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_29noitervalues, METH_NOARGS, 0},
  {"noiteritems", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_31noiteritems, METH_NOARGS, 0},
  {"pop", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_33pop, METH_VARARGS|METH_KEYWORDS, 0},
  {"popitem", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_35popitem, METH_NOARGS, 0},
  {"keys", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_39keys, METH_VARARGS|METH_KEYWORDS, 0},
  {"iterkeys", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_42iterkeys, METH_VARARGS|METH_KEYWORDS, 0},
  {"values", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_44values, METH_VARARGS|METH_KEYWORDS, 0},
  {"itervalues", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_47itervalues, METH_VARARGS|METH_KEYWORDS, 0},
  {"items", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_49items, METH_VARARGS|METH_KEYWORDS, 0},
  {"iteritems", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_52iteritems, METH_VARARGS|METH_KEYWORDS, 0},
  {"clear", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_58clear, METH_NOARGS, 0},
  {"has_key", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_62has_key, METH_O, 0},
  {"update", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_64update, METH_VARARGS|METH_KEYWORDS, 0},
  {"fromkeys", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_66fromkeys, METH_VARARGS|METH_KEYWORDS, 0},
  {"transform_values", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_68transform_values, METH_O, 0},
  {"remove_if", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_70remove_if, METH_O, 0},
  {"copy_to", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_72copy_to, METH_VARARGS|METH_KEYWORDS, 0},
  {"move_to", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_74move_to, METH_VARARGS|METH_KEYWORDS, 0},
  {"remove_duplicates", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_8PRawDict_76remove_duplicates, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11pcontainers_6_pdict_PRawDict[] = {
  {(char *)"dirname", __pyx_getprop_11pcontainers_6_pdict_8PRawDict_dirname, 0, 0, 0},
  {(char *)"dbname", __pyx_getprop_11pcontainers_6_pdict_8PRawDict_dbname, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_PRawDict = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_54__nonzero__, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_PRawDict = {
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_56__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_11pcontainers_6_pdict_PRawDict, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_60__contains__, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_PRawDict = {
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_56__len__, /*mp_length*/
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_15__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_11pcontainers_6_pdict_PRawDict, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_PRawDict = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.PRawDict", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_PRawDict), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_PRawDict, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_7__repr__, /*tp_repr*/
  &__pyx_tp_as_number_PRawDict, /*tp_as_number*/
  &__pyx_tp_as_sequence_PRawDict, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_PRawDict, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_13__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_37__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_PRawDict, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11pcontainers_6_pdict_PRawDict, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_PRawDict, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PDict __pyx_vtable_11pcontainers_6_pdict_PDict;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PDict(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_PDict *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_PRawDict(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawDict*)__pyx_vtabptr_11pcontainers_6_pdict_PDict;
  p->key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  p->value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_11pcontainers_6_pdict_5PDict_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_PDict(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_PDict *p = (struct __pyx_obj_11pcontainers_6_pdict_PDict *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_11pcontainers_6_pdict_5PDict_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->key_chain);
  Py_CLEAR(p->value_chain);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_PRawDict(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_PDict(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_PDict *p = (struct __pyx_obj_11pcontainers_6_pdict_PDict *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_PRawDict)) ? ((__pyx_ptype_11pcontainers_6_pdict_PRawDict->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_PRawDict->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_PDict)); if (e) return e;
  if (p->key_chain) {
    e = (*v)(((PyObject*)p->key_chain), a); if (e) return e;
  }
  if (p->value_chain) {
    e = (*v)(((PyObject*)p->value_chain), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_PDict(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_PDict *p = (struct __pyx_obj_11pcontainers_6_pdict_PDict *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_PRawDict)) { if (__pyx_ptype_11pcontainers_6_pdict_PRawDict->tp_clear) __pyx_ptype_11pcontainers_6_pdict_PRawDict->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_PDict);
  tmp = ((PyObject*)p->key_chain);
  p->key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->value_chain);
  p->value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_11pcontainers_6_pdict_PDict(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_11pcontainers_6_pdict_PDict(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_5PDict_17__setitem__(o, i, v);
  }
  else {
    return __pyx_pw_11pcontainers_6_pdict_5PDict_19__delitem__(o, i);
  }
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_PDict[] = {
  {"__reduce__", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_9__reduce__, METH_NOARGS, 0},
  {"get", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_13get, METH_VARARGS|METH_KEYWORDS, 0},
  {"setdefault", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_15setdefault, METH_VARARGS|METH_KEYWORDS, 0},
  {"erase", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_21erase, METH_VARARGS|METH_KEYWORDS, 0},
  {"noiterkeys", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_23noiterkeys, METH_NOARGS, 0},
  {"noitervalues", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_25noitervalues, METH_NOARGS, 0},
  {"noiteritems", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_27noiteritems, METH_NOARGS, 0},
  {"pop", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_29pop, METH_VARARGS|METH_KEYWORDS, 0},
  {"popitem", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_31popitem, METH_NOARGS, 0},
  {"keys", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_35keys, METH_VARARGS|METH_KEYWORDS, 0},
  {"values", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_38values, METH_VARARGS|METH_KEYWORDS, 0},
  {"items", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_41items, METH_VARARGS|METH_KEYWORDS, 0},
  {"update", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_46update, METH_VARARGS|METH_KEYWORDS, 0},
  {"fromkeys", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_48fromkeys, METH_VARARGS|METH_KEYWORDS, 0},
  {"transform_values", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_50transform_values, METH_O, 0},
  {"remove_if", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_52remove_if, METH_O, 0},
  {"copy_to", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_54copy_to, METH_VARARGS|METH_KEYWORDS, 0},
  {"move_to", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_56move_to, METH_VARARGS|METH_KEYWORDS, 0},
  {"remove_duplicates", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5PDict_58remove_duplicates, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_PDict = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_56__len__, /*sq_length*/
  #else
  0, /*sq_length*/
  #endif
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_11pcontainers_6_pdict_PDict, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  __pyx_pw_11pcontainers_6_pdict_5PDict_44__contains__, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_PDict = {
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_11pcontainers_6_pdict_8PRawDict_56__len__, /*mp_length*/
  #else
  0, /*mp_length*/
  #endif
  __pyx_pw_11pcontainers_6_pdict_5PDict_11__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_11pcontainers_6_pdict_PDict, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_PDict = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.PDict", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_PDict), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_PDict, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_11pcontainers_6_pdict_5PDict_7__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_PDict, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_PDict, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_PDict, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_PDict, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_11pcontainers_6_pdict_5PDict_33__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_PDict, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_5PDict_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_PDict, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue __pyx_vtable_11pcontainers_6_pdict_PRawQueue;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PRawQueue(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *)o);
  p->__pyx_vtab = __pyx_vtabptr_11pcontainers_6_pdict_PRawQueue;
  if (unlikely(__pyx_pw_11pcontainers_6_pdict_9PRawQueue_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_PRawQueue(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_11pcontainers_6_pdict_9PRawQueue_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_9PRawQueue_dirname(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_9PRawQueue_7dirname_1__get__(o);
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_9PRawQueue_dbname(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_9PRawQueue_6dbname_1__get__(o);
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_PRawQueue[] = {
  {"empty", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_9empty, METH_NOARGS, 0},
  {"qsize", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_11qsize, METH_NOARGS, 0},
  {"full", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_13full, METH_NOARGS, 0},
  {"clear", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_15clear, METH_NOARGS, 0},
  {"push_front", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_17push_front, METH_O, 0},
  {"push_back", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_19push_back, METH_O, 0},
  {"put", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_21put, METH_VARARGS|METH_KEYWORDS, 0},
  {"put_nowait", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_23put_nowait, METH_O, 0},
  {"pop_back", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_25pop_back, METH_NOARGS, 0},
  {"pop_front", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_27pop_front, METH_NOARGS, 0},
  {"pop_all", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_29pop_all, METH_NOARGS, 0},
  {"get", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_31get, METH_VARARGS|METH_KEYWORDS, 0},
  {"get_nowait", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_33get_nowait, METH_NOARGS, 0},
  {"push_front_many", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_35push_front_many, METH_O, 0},
  {"push_back_many", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_37push_back_many, METH_O, 0},
  {"push_many", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_39push_many, METH_O, 0},
  {"transform_values", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_41transform_values, METH_O, 0},
  {"remove_if", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_43remove_if, METH_O, 0},
  {"move_to", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_45move_to, METH_VARARGS|METH_KEYWORDS, 0},
  {"remove_duplicates", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_9PRawQueue_47remove_duplicates, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11pcontainers_6_pdict_PRawQueue[] = {
  {(char *)"dirname", __pyx_getprop_11pcontainers_6_pdict_9PRawQueue_dirname, 0, 0, 0},
  {(char *)"dbname", __pyx_getprop_11pcontainers_6_pdict_9PRawQueue_dbname, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_PRawQueue = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.PRawQueue", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_PRawQueue, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_11pcontainers_6_pdict_9PRawQueue_7__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_PRawQueue, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11pcontainers_6_pdict_PRawQueue, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_9PRawQueue_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_PRawQueue, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PQueue __pyx_vtable_11pcontainers_6_pdict_PQueue;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PQueue(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_PQueue *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_PRawQueue(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_PRawQueue*)__pyx_vtabptr_11pcontainers_6_pdict_PQueue;
  p->secret_key = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_11pcontainers_6_pdict_6PQueue_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_PQueue(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_PQueue *p = (struct __pyx_obj_11pcontainers_6_pdict_PQueue *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->secret_key);
  Py_CLEAR(p->value_chain);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_PRawQueue(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_PQueue(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_PQueue *p = (struct __pyx_obj_11pcontainers_6_pdict_PQueue *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_PRawQueue)) ? ((__pyx_ptype_11pcontainers_6_pdict_PRawQueue->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_PRawQueue->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_PQueue)); if (e) return e;
  if (p->value_chain) {
    e = (*v)(((PyObject*)p->value_chain), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_PQueue(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_PQueue *p = (struct __pyx_obj_11pcontainers_6_pdict_PQueue *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_PRawQueue)) { if (__pyx_ptype_11pcontainers_6_pdict_PRawQueue->tp_clear) __pyx_ptype_11pcontainers_6_pdict_PRawQueue->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_PQueue);
  tmp = ((PyObject*)p->value_chain);
  p->value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_PQueue[] = {
  {"push_front", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_7push_front, METH_O, 0},
  {"push_back", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_9push_back, METH_O, 0},
  {"pop_back", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_11pop_back, METH_NOARGS, 0},
  {"pop_front", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_13pop_front, METH_NOARGS, 0},
  {"pop_all", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_15pop_all, METH_NOARGS, 0},
  {"push_front_many", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_17push_front_many, METH_O, 0},
  {"push_back_many", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_19push_back_many, METH_O, 0},
  {"transform_values", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_21transform_values, METH_O, 0},
  {"remove_if", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_23remove_if, METH_O, 0},
  {"move_to", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6PQueue_25move_to, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_PQueue = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.PQueue", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_PQueue), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_PQueue, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_11pcontainers_6_pdict_6PQueue_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_PQueue, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_PQueue, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_PQueue, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_6PQueue_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_PQueue, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_expiry_dict __pyx_vtable_11pcontainers_6_pdict_expiry_dict;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_expiry_dict(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)o);
  p->__pyx_vtab = __pyx_vtabptr_11pcontainers_6_pdict_expiry_dict;
  p->values_dict = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)Py_None); Py_INCREF(Py_None);
  p->index_dict = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)Py_None); Py_INCREF(Py_None);
  p->stopping = Py_None; Py_INCREF(Py_None);
  p->pruning_thread = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_expiry_dict(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *p = (struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->values_dict);
  Py_CLEAR(p->index_dict);
  Py_CLEAR(p->stopping);
  Py_CLEAR(p->pruning_thread);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_expiry_dict(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *p = (struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)o;
  if (p->values_dict) {
    e = (*v)(((PyObject*)p->values_dict), a); if (e) return e;
  }
  if (p->index_dict) {
    e = (*v)(((PyObject*)p->index_dict), a); if (e) return e;
  }
  if (p->stopping) {
    e = (*v)(p->stopping, a); if (e) return e;
  }
  if (p->pruning_thread) {
    e = (*v)(p->pruning_thread, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_expiry_dict(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *p = (struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)o;
  tmp = ((PyObject*)p->values_dict);
  p->values_dict = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->index_dict);
  p->index_dict = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->stopping);
  p->stopping = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->pruning_thread);
  p->pruning_thread = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_11pcontainers_6_pdict_expiry_dict(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_11pcontainers_6_pdict_expiry_dict(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11expiry_dict_15__setitem__(o, i, v);
  }
  else {
    return __pyx_pw_11pcontainers_6_pdict_11expiry_dict_19__delitem__(o, i);
  }
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_expiry_dict[] = {
  {"__enter__", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_3__enter__, METH_NOARGS, 0},
  {"__exit__", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_5__exit__, METH_VARARGS|METH_KEYWORDS, 0},
  {"pruning_thread_fun", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_7pruning_thread_fun, METH_NOARGS, 0},
  {"prune_expired", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_9prune_expired, METH_NOARGS, 0},
  {"get", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_13get, METH_VARARGS|METH_KEYWORDS, 0},
  {"set", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_17set, METH_VARARGS|METH_KEYWORDS, 0},
  {"pop", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_21pop, METH_VARARGS|METH_KEYWORDS, 0},
  {"popitem", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_23popitem, METH_NOARGS, 0},
  {"keys", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_28keys, METH_NOARGS, 0},
  {"values", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_30values, METH_NOARGS, 0},
  {"items", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_33items, METH_NOARGS, 0},
  {"update", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_11expiry_dict_38update, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_expiry_dict = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_11pcontainers_6_pdict_expiry_dict, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  __pyx_pw_11pcontainers_6_pdict_11expiry_dict_36__contains__, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_expiry_dict = {
  0, /*mp_length*/
  __pyx_pw_11pcontainers_6_pdict_11expiry_dict_11__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_11pcontainers_6_pdict_expiry_dict, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_expiry_dict = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.expiry_dict", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_expiry_dict, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_expiry_dict, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_expiry_dict, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_expiry_dict, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_expiry_dict, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_11pcontainers_6_pdict_11expiry_dict_25__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_expiry_dict, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_11expiry_dict_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_expiry_dict, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_LmdbOptions(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)o);
  new((void*)&(p->opts)) lmdb::lmdb_options();
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_LmdbOptions(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *p = (struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->opts);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_fixed_map(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_fixed_map(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9fixed_map_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_subdir(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_subdir(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9no_subdir_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_read_only(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9read_only_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_read_only(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9read_only_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_write_map(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9write_map_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_write_map(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9write_map_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_meta_sync(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_meta_sync(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_12no_meta_sync_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_sync(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_sync_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_sync(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_sync_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_map_async(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9map_async_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_map_async(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_9map_async_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_tls(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_6no_tls_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_tls(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_6no_tls_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_lock(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_lock_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_lock(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7no_lock_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_read_ahead(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_read_ahead(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_13no_read_ahead_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_mem_init(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_mem_init(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11no_mem_init_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_map_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_8map_size_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_map_size(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_8map_size_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_max_readers(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11max_readers_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_max_readers(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_11max_readers_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_max_dbs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_1__get__(o);
}

static int __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_max_dbs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_7max_dbs_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_LmdbOptions[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11pcontainers_6_pdict_LmdbOptions[] = {
  {(char *)"fixed_map", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_fixed_map, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_fixed_map, 0, 0},
  {(char *)"no_subdir", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_subdir, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_subdir, 0, 0},
  {(char *)"read_only", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_read_only, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_read_only, 0, 0},
  {(char *)"write_map", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_write_map, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_write_map, 0, 0},
  {(char *)"no_meta_sync", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_meta_sync, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_meta_sync, 0, 0},
  {(char *)"no_sync", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_sync, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_sync, 0, 0},
  {(char *)"map_async", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_map_async, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_map_async, 0, 0},
  {(char *)"no_tls", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_tls, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_tls, 0, 0},
  {(char *)"no_lock", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_lock, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_lock, 0, 0},
  {(char *)"no_read_ahead", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_read_ahead, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_read_ahead, 0, 0},
  {(char *)"no_mem_init", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_no_mem_init, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_no_mem_init, 0, 0},
  {(char *)"map_size", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_map_size, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_map_size, 0, 0},
  {(char *)"max_readers", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_max_readers, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_max_readers, 0, 0},
  {(char *)"max_dbs", __pyx_getprop_11pcontainers_6_pdict_11LmdbOptions_max_dbs, __pyx_setprop_11pcontainers_6_pdict_11LmdbOptions_max_dbs, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_LmdbOptions = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.LmdbOptions", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_LmdbOptions), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_LmdbOptions, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_LmdbOptions, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11pcontainers_6_pdict_LmdbOptions, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_11LmdbOptions_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_LmdbOptions, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter __pyx_vtable_11pcontainers_6_pdict_Filter;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Filter(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_Filter *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_Filter *)o);
  p->__pyx_vtab = __pyx_vtabptr_11pcontainers_6_pdict_Filter;
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_Filter(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_Filter[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6Filter_1dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_6Filter_3loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_Filter = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.Filter", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_Filter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_Filter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_Filter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Serializer __pyx_vtable_11pcontainers_6_pdict_Serializer;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Serializer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_Serializer *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Filter(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_Serializer *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_Serializer;
  return o;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict_Serializer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.Serializer", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_Serializer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_Serializer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneSerializer __pyx_vtable_11pcontainers_6_pdict_NoneSerializer;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_NoneSerializer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Serializer(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_NoneSerializer;
  return o;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_NoneSerializer[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_1dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14NoneSerializer_3loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_NoneSerializer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.NoneSerializer", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_NoneSerializer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_NoneSerializer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_NoneSerializer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_PickleSerializer __pyx_vtable_11pcontainers_6_pdict_PickleSerializer;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_PickleSerializer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Serializer(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_PickleSerializer;
  p->pickle_module = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_PickleSerializer(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->pickle_module);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_PickleSerializer(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_Serializer)) ? ((__pyx_ptype_11pcontainers_6_pdict_Serializer->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_Serializer->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_PickleSerializer)); if (e) return e;
  if (p->pickle_module) {
    e = (*v)(p->pickle_module, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_PickleSerializer(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_Serializer)) { if (__pyx_ptype_11pcontainers_6_pdict_Serializer->tp_clear) __pyx_ptype_11pcontainers_6_pdict_Serializer->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_PickleSerializer);
  tmp = ((PyObject*)p->pickle_module);
  p->pickle_module = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_PickleSerializer[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_3dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_16PickleSerializer_5loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_PickleSerializer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.PickleSerializer", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_PickleSerializer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_PickleSerializer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_PickleSerializer, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_PickleSerializer, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_PickleSerializer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_16PickleSerializer_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_PickleSerializer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_MessagePackSerializer __pyx_vtable_11pcontainers_6_pdict_MessagePackSerializer;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_MessagePackSerializer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Serializer(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_MessagePackSerializer;
  p->messagepack_module = Py_None; Py_INCREF(Py_None);
  p->mpack_args = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->use_list = Py_None; Py_INCREF(Py_None);
  p->ext_hook = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_MessagePackSerializer(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->messagepack_module);
  Py_CLEAR(p->mpack_args);
  Py_CLEAR(p->use_list);
  Py_CLEAR(p->ext_hook);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_MessagePackSerializer(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_Serializer)) ? ((__pyx_ptype_11pcontainers_6_pdict_Serializer->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_Serializer->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_MessagePackSerializer)); if (e) return e;
  if (p->messagepack_module) {
    e = (*v)(p->messagepack_module, a); if (e) return e;
  }
  if (p->mpack_args) {
    e = (*v)(p->mpack_args, a); if (e) return e;
  }
  if (p->use_list) {
    e = (*v)(p->use_list, a); if (e) return e;
  }
  if (p->ext_hook) {
    e = (*v)(p->ext_hook, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_MessagePackSerializer(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_Serializer)) { if (__pyx_ptype_11pcontainers_6_pdict_Serializer->tp_clear) __pyx_ptype_11pcontainers_6_pdict_Serializer->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_MessagePackSerializer);
  tmp = ((PyObject*)p->messagepack_module);
  p->messagepack_module = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->mpack_args);
  p->mpack_args = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->use_list);
  p->use_list = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->ext_hook);
  p->ext_hook = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_MessagePackSerializer[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_3dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_5loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_MessagePackSerializer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.MessagePackSerializer", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_MessagePackSerializer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_MessagePackSerializer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_MessagePackSerializer, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_MessagePackSerializer, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_MessagePackSerializer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_21MessagePackSerializer_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_MessagePackSerializer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_JsonSerializer __pyx_vtable_11pcontainers_6_pdict_JsonSerializer;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_JsonSerializer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Serializer(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_JsonSerializer;
  p->json_module = Py_None; Py_INCREF(Py_None);
  p->__pyx_default = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_JsonSerializer(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->json_module);
  Py_CLEAR(p->__pyx_default);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_JsonSerializer(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_Serializer)) ? ((__pyx_ptype_11pcontainers_6_pdict_Serializer->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_Serializer->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_JsonSerializer)); if (e) return e;
  if (p->json_module) {
    e = (*v)(p->json_module, a); if (e) return e;
  }
  if (p->__pyx_default) {
    e = (*v)(p->__pyx_default, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_JsonSerializer(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *p = (struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_Serializer)) { if (__pyx_ptype_11pcontainers_6_pdict_Serializer->tp_clear) __pyx_ptype_11pcontainers_6_pdict_Serializer->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_JsonSerializer);
  tmp = ((PyObject*)p->json_module);
  p->json_module = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_default);
  p->__pyx_default = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_JsonSerializer[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_3dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14JsonSerializer_5loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_JsonSerializer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.JsonSerializer", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_JsonSerializer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_JsonSerializer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_JsonSerializer, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_JsonSerializer, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_JsonSerializer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_14JsonSerializer_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_JsonSerializer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Signer __pyx_vtable_11pcontainers_6_pdict_Signer;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Signer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_Signer *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Filter(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_Signer *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_Signer;
  p->secret = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_Signer(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_Signer *p = (struct __pyx_obj_11pcontainers_6_pdict_Signer *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  Py_CLEAR(p->secret);
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter(o);
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_Signer[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_Signer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.Signer", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_Signer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_Signer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_Signer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_6Signer_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_Signer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneSigner __pyx_vtable_11pcontainers_6_pdict_NoneSigner;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_NoneSigner(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Signer(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_NoneSigner *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_NoneSigner;
  return o;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_NoneSigner[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_10NoneSigner_1dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_10NoneSigner_3loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_NoneSigner = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.NoneSigner", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_NoneSigner), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_Signer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_NoneSigner, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_11pcontainers_6_pdict_6Signer_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_NoneSigner, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_HMACSigner __pyx_vtable_11pcontainers_6_pdict_HMACSigner;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_HMACSigner(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Signer(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_HMACSigner;
  p->hmac_module = Py_None; Py_INCREF(Py_None);
  p->hashlib_module = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_HMACSigner(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *p = (struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->hmac_module);
  Py_CLEAR(p->hashlib_module);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_Signer(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_HMACSigner(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *p = (struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_Signer)) ? ((__pyx_ptype_11pcontainers_6_pdict_Signer->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_Signer->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_HMACSigner)); if (e) return e;
  if (p->hmac_module) {
    e = (*v)(p->hmac_module, a); if (e) return e;
  }
  if (p->hashlib_module) {
    e = (*v)(p->hashlib_module, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_HMACSigner(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *p = (struct __pyx_obj_11pcontainers_6_pdict_HMACSigner *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_Signer)) { if (__pyx_ptype_11pcontainers_6_pdict_Signer->tp_clear) __pyx_ptype_11pcontainers_6_pdict_Signer->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_HMACSigner);
  tmp = ((PyObject*)p->hmac_module);
  p->hmac_module = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->hashlib_module);
  p->hashlib_module = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_HMACSigner[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_10HMACSigner_3dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_10HMACSigner_5loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_HMACSigner = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.HMACSigner", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_HMACSigner), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_HMACSigner, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_HMACSigner, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_HMACSigner, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_HMACSigner, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_10HMACSigner_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_HMACSigner, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Compresser __pyx_vtable_11pcontainers_6_pdict_Compresser;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Compresser(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_Compresser *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Filter(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_Compresser *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_Compresser;
  return o;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict_Compresser = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.Compresser", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_Compresser), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_Compresser, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_NoneCompresser __pyx_vtable_11pcontainers_6_pdict_NoneCompresser;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_NoneCompresser(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Compresser(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_NoneCompresser;
  return o;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_NoneCompresser[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_1dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_14NoneCompresser_3loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_NoneCompresser = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.NoneCompresser", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_NoneCompresser), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_NoneCompresser, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_NoneCompresser, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_SnappyCompresser __pyx_vtable_11pcontainers_6_pdict_SnappyCompresser;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_SnappyCompresser(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Compresser(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_SnappyCompresser;
  p->snappyx_module = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_SnappyCompresser(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *p = (struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->snappyx_module);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_SnappyCompresser(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *p = (struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_Compresser)) ? ((__pyx_ptype_11pcontainers_6_pdict_Compresser->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_Compresser->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_SnappyCompresser)); if (e) return e;
  if (p->snappyx_module) {
    e = (*v)(p->snappyx_module, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_SnappyCompresser(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *p = (struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_Compresser)) { if (__pyx_ptype_11pcontainers_6_pdict_Compresser->tp_clear) __pyx_ptype_11pcontainers_6_pdict_Compresser->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_SnappyCompresser);
  tmp = ((PyObject*)p->snappyx_module);
  p->snappyx_module = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_SnappyCompresser[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_3dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_5loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_SnappyCompresser = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.SnappyCompresser", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_SnappyCompresser), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_SnappyCompresser, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_SnappyCompresser, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_SnappyCompresser, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_SnappyCompresser, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_16SnappyCompresser_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_SnappyCompresser, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_LZ4Compresser __pyx_vtable_11pcontainers_6_pdict_LZ4Compresser;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_LZ4Compresser(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Compresser(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_LZ4Compresser;
  p->lz4_module = Py_None; Py_INCREF(Py_None);
  p->block_mode_linked = Py_None; Py_INCREF(Py_None);
  p->checksum = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_LZ4Compresser(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *p = (struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->lz4_module);
  Py_CLEAR(p->block_mode_linked);
  Py_CLEAR(p->checksum);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_LZ4Compresser(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *p = (struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_Compresser)) ? ((__pyx_ptype_11pcontainers_6_pdict_Compresser->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_Compresser->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_LZ4Compresser)); if (e) return e;
  if (p->lz4_module) {
    e = (*v)(p->lz4_module, a); if (e) return e;
  }
  if (p->block_mode_linked) {
    e = (*v)(p->block_mode_linked, a); if (e) return e;
  }
  if (p->checksum) {
    e = (*v)(p->checksum, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_LZ4Compresser(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *p = (struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_Compresser)) { if (__pyx_ptype_11pcontainers_6_pdict_Compresser->tp_clear) __pyx_ptype_11pcontainers_6_pdict_Compresser->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_LZ4Compresser);
  tmp = ((PyObject*)p->lz4_module);
  p->lz4_module = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->block_mode_linked);
  p->block_mode_linked = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->checksum);
  p->checksum = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_LZ4Compresser[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_3dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_5loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_LZ4Compresser = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.LZ4Compresser", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_LZ4Compresser), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_LZ4Compresser, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_LZ4Compresser, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_LZ4Compresser, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_LZ4Compresser, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_13LZ4Compresser_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_LZ4Compresser, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_11pcontainers_6_pdict_Chain __pyx_vtable_11pcontainers_6_pdict_Chain;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict_Chain(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict_Chain *p;
  PyObject *o = __pyx_tp_new_11pcontainers_6_pdict_Filter(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11pcontainers_6_pdict_Filter*)__pyx_vtabptr_11pcontainers_6_pdict_Chain;
  p->serializer = ((struct __pyx_obj_11pcontainers_6_pdict_Serializer *)Py_None); Py_INCREF(Py_None);
  p->signer = ((struct __pyx_obj_11pcontainers_6_pdict_Signer *)Py_None); Py_INCREF(Py_None);
  p->compresser = ((struct __pyx_obj_11pcontainers_6_pdict_Compresser *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict_Chain(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict_Chain *p = (struct __pyx_obj_11pcontainers_6_pdict_Chain *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->serializer);
  Py_CLEAR(p->signer);
  Py_CLEAR(p->compresser);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11pcontainers_6_pdict_Filter(o);
}

static int __pyx_tp_traverse_11pcontainers_6_pdict_Chain(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *p = (struct __pyx_obj_11pcontainers_6_pdict_Chain *)o;
  e = ((likely(__pyx_ptype_11pcontainers_6_pdict_Filter)) ? ((__pyx_ptype_11pcontainers_6_pdict_Filter->tp_traverse) ? __pyx_ptype_11pcontainers_6_pdict_Filter->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11pcontainers_6_pdict_Chain)); if (e) return e;
  if (p->serializer) {
    e = (*v)(((PyObject*)p->serializer), a); if (e) return e;
  }
  if (p->signer) {
    e = (*v)(((PyObject*)p->signer), a); if (e) return e;
  }
  if (p->compresser) {
    e = (*v)(((PyObject*)p->compresser), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict_Chain(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict_Chain *p = (struct __pyx_obj_11pcontainers_6_pdict_Chain *)o;
  if (likely(__pyx_ptype_11pcontainers_6_pdict_Filter)) { if (__pyx_ptype_11pcontainers_6_pdict_Filter->tp_clear) __pyx_ptype_11pcontainers_6_pdict_Filter->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11pcontainers_6_pdict_Chain);
  tmp = ((PyObject*)p->serializer);
  p->serializer = ((struct __pyx_obj_11pcontainers_6_pdict_Serializer *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->signer);
  p->signer = ((struct __pyx_obj_11pcontainers_6_pdict_Signer *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->compresser);
  p->compresser = ((struct __pyx_obj_11pcontainers_6_pdict_Compresser *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11pcontainers_6_pdict_Chain[] = {
  {"dumps", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5Chain_3dumps, METH_O, 0},
  {"loads", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_5Chain_5loads, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11pcontainers_6_pdict_Chain = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.Chain", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict_Chain), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict_Chain, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict_Chain, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict_Chain, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11pcontainers_6_pdict_Chain, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11pcontainers_6_pdict_5Chain_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict_Chain, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct__keys[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct__keys = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct__keys(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *p;
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct__keys > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct__keys[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct__keys];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *)o);
  new((void*)&(p->__pyx_v_it)) quiet::PersistentDict::const_iterator();
  new((void*)&(p->__pyx_v_view)) utils::PyBufferWrap();
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct__keys(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *)o;
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->__pyx_v_it);
  __Pyx_call_destructor(p->__pyx_v_view);
  Py_CLEAR(p->__pyx_v_obj);
  Py_CLEAR(p->__pyx_v_reverse);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct__keys < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct__keys[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct__keys++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct__keys(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *)o;
  if (p->__pyx_v_reverse) {
    e = (*v)(p->__pyx_v_reverse, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct__keys(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys *)o;
  tmp = ((PyObject*)p->__pyx_v_reverse);
  p->__pyx_v_reverse = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct__keys = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct__keys", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct__keys), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct__keys, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct__keys, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct__keys, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct__keys, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_1_values[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_1_values = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_1_values(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *p;
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_1_values > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_1_values[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_1_values];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *)o);
  new((void*)&(p->__pyx_v_it)) quiet::PersistentDict::const_iterator();
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_1_values(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *)o;
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->__pyx_v_it);
  Py_CLEAR(p->__pyx_v_reverse);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_1_values < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_1_values[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_1_values++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_1_values(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *)o;
  if (p->__pyx_v_reverse) {
    e = (*v)(p->__pyx_v_reverse, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_1_values(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values *)o;
  tmp = ((PyObject*)p->__pyx_v_reverse);
  p->__pyx_v_reverse = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_1_values = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_1_values", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_1_values), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_1_values, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_1_values, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_1_values, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_1_values, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_2_items[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_2_items = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_2_items(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *p;
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_2_items > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_2_items[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_2_items];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *)o);
  new((void*)&(p->__pyx_v_it)) quiet::PersistentDict::const_iterator();
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_2_items(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *)o;
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->__pyx_v_it);
  Py_CLEAR(p->__pyx_v_reverse);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_2_items < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_2_items[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_2_items++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_2_items(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *)o;
  if (p->__pyx_v_reverse) {
    e = (*v)(p->__pyx_v_reverse, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_2_items(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items *)o;
  tmp = ((PyObject*)p->__pyx_v_reverse);
  p->__pyx_v_reverse = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_PRawDict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_2_items = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_2_items", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_2_items), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_2_items, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_2_items, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_2_items, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_2_items, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_S);
  Py_CLEAR(p->__pyx_v_v);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *)o;
  if (p->__pyx_v_S) {
    e = (*v)(p->__pyx_v_S, a); if (e) return e;
  }
  if (p->__pyx_v_v) {
    e = (*v)(p->__pyx_v_v, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *)o;
  tmp = ((PyObject*)p->__pyx_v_S);
  p->__pyx_v_S = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_v);
  p->__pyx_v_v = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_3_fromkeys", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_key);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_key) {
    e = (*v)(p->__pyx_v_key, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_key);
  p->__pyx_v_key = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_4_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_5_keys[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_5_keys = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_5_keys(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *p;
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_5_keys > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_5_keys[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_5_keys];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *)o);
  new((void*)&(p->__pyx_v_it)) quiet::PersistentDict::const_iterator();
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_5_keys(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *)o;
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->__pyx_v_it);
  Py_CLEAR(p->__pyx_v_reverse);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_5_keys < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_5_keys[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_5_keys++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_5_keys(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *)o;
  if (p->__pyx_v_reverse) {
    e = (*v)(p->__pyx_v_reverse, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_5_keys(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys *)o;
  tmp = ((PyObject*)p->__pyx_v_reverse);
  p->__pyx_v_reverse = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_5_keys = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_5_keys", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_5_keys), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_5_keys, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_5_keys, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_5_keys, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_5_keys, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_6_values[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_6_values = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_6_values(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *p;
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_6_values > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_6_values[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_6_values];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *)o);
  new((void*)&(p->__pyx_v_it)) quiet::PersistentDict::const_iterator();
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_6_values(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *)o;
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->__pyx_v_it);
  Py_CLEAR(p->__pyx_v_reverse);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_6_values < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_6_values[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_6_values++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_6_values(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *)o;
  if (p->__pyx_v_reverse) {
    e = (*v)(p->__pyx_v_reverse, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_6_values(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values *)o;
  tmp = ((PyObject*)p->__pyx_v_reverse);
  p->__pyx_v_reverse = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_6_values = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_6_values", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_6_values), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_6_values, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_6_values, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_6_values, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_6_values, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_7_items[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_7_items = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_7_items(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *p;
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_7_items > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_7_items[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_7_items];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *)o);
  new((void*)&(p->__pyx_v_it)) quiet::PersistentDict::const_iterator();
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_7_items(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *)o;
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->__pyx_v_it);
  Py_CLEAR(p->__pyx_v_key);
  Py_CLEAR(p->__pyx_v_reverse);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_val);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_7_items < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_7_items[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_7_items++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_7_items(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *)o;
  if (p->__pyx_v_key) {
    e = (*v)(p->__pyx_v_key, a); if (e) return e;
  }
  if (p->__pyx_v_reverse) {
    e = (*v)(p->__pyx_v_reverse, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_val) {
    e = (*v)(p->__pyx_v_val, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_7_items(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items *)o;
  tmp = ((PyObject*)p->__pyx_v_key);
  p->__pyx_v_key = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_reverse);
  p->__pyx_v_reverse = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_PDict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_val);
  p->__pyx_v_val = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_7_items = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_7_items", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_7_items), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_7_items, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_7_items, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_7_items, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_7_items, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_S);
  Py_CLEAR(p->__pyx_v_v);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *)o;
  if (p->__pyx_v_S) {
    e = (*v)(p->__pyx_v_S, a); if (e) return e;
  }
  if (p->__pyx_v_v) {
    e = (*v)(p->__pyx_v_v, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *)o;
  tmp = ((PyObject*)p->__pyx_v_S);
  p->__pyx_v_S = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_v);
  p->__pyx_v_v = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_8_fromkeys", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_key);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_key) {
    e = (*v)(p->__pyx_v_key, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_key);
  p->__pyx_v_key = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_9_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_vals);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_vals) {
    e = (*v)(p->__pyx_v_vals, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_vals);
  p->__pyx_v_vals = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_10_push_front_many", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_val);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_val) {
    e = (*v)(p->__pyx_v_val, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_val);
  p->__pyx_v_val = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_11_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_vals);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_vals) {
    e = (*v)(p->__pyx_v_vals, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_PQueue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_vals);
  p->__pyx_v_vals = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_12_push_back_many", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_val);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_val) {
    e = (*v)(p->__pyx_v_val, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_val);
  p->__pyx_v_val = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_13_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_14___iter__[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_14___iter__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_14___iter__[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_14___iter__];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_14___iter__(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_key);
  Py_CLEAR(p->__pyx_v_s_expiry);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_14___iter__[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_14___iter__++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_14___iter__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *)o;
  if (p->__pyx_v_key) {
    e = (*v)(p->__pyx_v_key, a); if (e) return e;
  }
  if (p->__pyx_v_s_expiry) {
    e = (*v)(p->__pyx_v_s_expiry, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_14___iter__(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ *)o;
  tmp = ((PyObject*)p->__pyx_v_key);
  p->__pyx_v_key = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_s_expiry);
  p->__pyx_v_s_expiry = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_14___iter__", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_14___iter__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_14___iter__, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_14___iter__, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_14___iter__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_14___iter__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_15_values[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_15_values = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_15_values(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_15_values > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_15_values[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_15_values];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_15_values(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_key);
  Py_CLEAR(p->__pyx_v_s_expiry);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_15_values < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_15_values[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_15_values++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_15_values(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *)o;
  if (p->__pyx_v_key) {
    e = (*v)(p->__pyx_v_key, a); if (e) return e;
  }
  if (p->__pyx_v_s_expiry) {
    e = (*v)(p->__pyx_v_s_expiry, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_15_values(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values *)o;
  tmp = ((PyObject*)p->__pyx_v_key);
  p->__pyx_v_key = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_s_expiry);
  p->__pyx_v_s_expiry = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_15_values = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_15_values", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_15_values), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_15_values, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_15_values, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_15_values, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_15_values, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_16_items[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_16_items = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_16_items(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_16_items > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_16_items[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_16_items];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_16_items(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_key);
  Py_CLEAR(p->__pyx_v_s_expiry);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_t_0);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_16_items < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_16_items[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_16_items++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_16_items(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *)o;
  if (p->__pyx_v_key) {
    e = (*v)(p->__pyx_v_key, a); if (e) return e;
  }
  if (p->__pyx_v_s_expiry) {
    e = (*v)(p->__pyx_v_s_expiry, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_16_items(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items *)o;
  tmp = ((PyObject*)p->__pyx_v_key);
  p->__pyx_v_key = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_s_expiry);
  p->__pyx_v_s_expiry = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_16_items = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_16_items", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_16_items), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_16_items, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_16_items, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_16_items, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_16_items, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_unary_funct);
  Py_CLEAR(p->__pyx_v_value_chain);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *)o;
  if (p->__pyx_v_unary_funct) {
    e = (*v)(p->__pyx_v_unary_funct, a); if (e) return e;
  }
  if (p->__pyx_v_value_chain) {
    e = (*v)(((PyObject*)p->__pyx_v_value_chain), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor *)o;
  tmp = ((PyObject*)p->__pyx_v_unary_funct);
  p->__pyx_v_unary_funct = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_value_chain);
  p->__pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_17__adapt_unary_functor", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_binary_funct);
  Py_CLEAR(p->__pyx_v_key_chain);
  Py_CLEAR(p->__pyx_v_value_chain);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *)o;
  if (p->__pyx_v_binary_funct) {
    e = (*v)(p->__pyx_v_binary_funct, a); if (e) return e;
  }
  if (p->__pyx_v_key_chain) {
    e = (*v)(((PyObject*)p->__pyx_v_key_chain), a); if (e) return e;
  }
  if (p->__pyx_v_value_chain) {
    e = (*v)(((PyObject*)p->__pyx_v_value_chain), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor *)o;
  tmp = ((PyObject*)p->__pyx_v_binary_funct);
  p->__pyx_v_binary_funct = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_key_chain);
  p->__pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_value_chain);
  p->__pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_18__adapt_binary_functor", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_unary_pred);
  Py_CLEAR(p->__pyx_v_value_chain);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *)o;
  if (p->__pyx_v_unary_pred) {
    e = (*v)(p->__pyx_v_unary_pred, a); if (e) return e;
  }
  if (p->__pyx_v_value_chain) {
    e = (*v)(((PyObject*)p->__pyx_v_value_chain), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate *)o;
  tmp = ((PyObject*)p->__pyx_v_unary_pred);
  p->__pyx_v_unary_pred = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_value_chain);
  p->__pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_19__adapt_unary_predicate", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate[8];
static int __pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate = 0;

static PyObject *__pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate)))) {
    o = (PyObject*)__pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate[--__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate];
    memset(o, 0, sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate(PyObject *o) {
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_binary_pred);
  Py_CLEAR(p->__pyx_v_key_chain);
  Py_CLEAR(p->__pyx_v_value_chain);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate)))) {
    __pyx_freelist_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate[__pyx_freecount_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate++] = ((struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *)o;
  if (p->__pyx_v_binary_pred) {
    e = (*v)(p->__pyx_v_binary_pred, a); if (e) return e;
  }
  if (p->__pyx_v_key_chain) {
    e = (*v)(((PyObject*)p->__pyx_v_key_chain), a); if (e) return e;
  }
  if (p->__pyx_v_value_chain) {
    e = (*v)(((PyObject*)p->__pyx_v_value_chain), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *p = (struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate *)o;
  tmp = ((PyObject*)p->__pyx_v_binary_pred);
  p->__pyx_v_binary_pred = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_key_chain);
  p->__pyx_v_key_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_value_chain);
  p->__pyx_v_value_chain = ((struct __pyx_obj_11pcontainers_6_pdict_Chain *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate = {
  PyVarObject_HEAD_INIT(0, 0)
  "pcontainers._pdict.__pyx_scope_struct_20__adapt_binary_predicate", /*tp_name*/
  sizeof(struct __pyx_obj_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate, /*tp_traverse*/
  __pyx_tp_clear_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {"set_logger", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_1set_logger, METH_VARARGS|METH_KEYWORDS, 0},
  {"set_python_logger", (PyCFunction)__pyx_pw_11pcontainers_6_pdict_3set_python_logger, METH_O, 0},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "_pdict",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_CRITICAL, __pyx_k_CRITICAL, sizeof(__pyx_k_CRITICAL), 0, 0, 1, 1},
  {&__pyx_n_s_Compressor, __pyx_k_Compressor, sizeof(__pyx_k_Compressor), 0, 0, 1, 1},
  {&__pyx_n_s_DEBUG, __pyx_k_DEBUG, sizeof(__pyx_k_DEBUG), 0, 0, 1, 1},
  {&__pyx_n_s_Decompressor, __pyx_k_Decompressor, sizeof(__pyx_k_Decompressor), 0, 0, 1, 1},
  {&__pyx_n_s_ERROR, __pyx_k_ERROR, sizeof(__pyx_k_ERROR), 0, 0, 1, 1},
  {&__pyx_n_s_Empty, __pyx_k_Empty, sizeof(__pyx_k_Empty), 0, 0, 1, 1},
  {&__pyx_n_s_EmptyDatabase, __pyx_k_EmptyDatabase, sizeof(__pyx_k_EmptyDatabase), 0, 0, 1, 1},
  {&__pyx_n_s_Event, __pyx_k_Event, sizeof(__pyx_k_Event), 0, 0, 1, 1},
  {&__pyx_n_s_ExtType, __pyx_k_ExtType, sizeof(__pyx_k_ExtType), 0, 0, 1, 1},
  {&__pyx_kp_s_HMAC_check_failed_data_has_been, __pyx_k_HMAC_check_failed_data_has_been, sizeof(__pyx_k_HMAC_check_failed_data_has_been), 0, 0, 1, 0},
  {&__pyx_n_s_INFO, __pyx_k_INFO, sizeof(__pyx_k_INFO), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_n_s_LZ4F_BLOCKSIZE_DEFAULT, __pyx_k_LZ4F_BLOCKSIZE_DEFAULT, sizeof(__pyx_k_LZ4F_BLOCKSIZE_DEFAULT), 0, 0, 1, 1},
  {&__pyx_n_s_LZ4F_COMPRESSION_MIN, __pyx_k_LZ4F_COMPRESSION_MIN, sizeof(__pyx_k_LZ4F_COMPRESSION_MIN), 0, 0, 1, 1},
  {&__pyx_n_s_Lz4FramedNoDataError, __pyx_k_Lz4FramedNoDataError, sizeof(__pyx_k_Lz4FramedNoDataError), 0, 0, 1, 1},
  {&__pyx_n_s_MBufferIO, __pyx_k_MBufferIO, sizeof(__pyx_k_MBufferIO), 0, 0, 1, 1},
  {&__pyx_n_s_MutableMapping, __pyx_k_MutableMapping, sizeof(__pyx_k_MutableMapping), 0, 0, 1, 1},
  {&__pyx_n_s_NOTSET, __pyx_k_NOTSET, sizeof(__pyx_k_NOTSET), 0, 0, 1, 1},
  {&__pyx_n_s_NotFound, __pyx_k_NotFound, sizeof(__pyx_k_NotFound), 0, 0, 1, 1},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_kp_u_PDict_dbname_dirname, __pyx_k_PDict_dbname_dirname, sizeof(__pyx_k_PDict_dbname_dirname), 0, 1, 0, 0},
  {&__pyx_n_s_PDict_items, __pyx_k_PDict_items, sizeof(__pyx_k_PDict_items), 0, 0, 1, 1},
  {&__pyx_n_s_PDict_keys, __pyx_k_PDict_keys, sizeof(__pyx_k_PDict_keys), 0, 0, 1, 1},
  {&__pyx_n_s_PDict_values, __pyx_k_PDict_values, sizeof(__pyx_k_PDict_values), 0, 0, 1, 1},
  {&__pyx_kp_u_PQueue_dbname_dirname, __pyx_k_PQueue_dbname_dirname, sizeof(__pyx_k_PQueue_dbname_dirname), 0, 1, 0, 0},
  {&__pyx_kp_u_PRawDict_dbname_dirname, __pyx_k_PRawDict_dbname_dirname, sizeof(__pyx_k_PRawDict_dbname_dirname), 0, 1, 0, 0},
  {&__pyx_n_s_PRawDict_items, __pyx_k_PRawDict_items, sizeof(__pyx_k_PRawDict_items), 0, 0, 1, 1},
  {&__pyx_n_s_PRawDict_keys, __pyx_k_PRawDict_keys, sizeof(__pyx_k_PRawDict_keys), 0, 0, 1, 1},
  {&__pyx_n_s_PRawDict_values, __pyx_k_PRawDict_values, sizeof(__pyx_k_PRawDict_values), 0, 0, 1, 1},
  {&__pyx_kp_u_PRawQueue_dbname_dirname, __pyx_k_PRawQueue_dbname_dirname, sizeof(__pyx_k_PRawQueue_dbname_dirname), 0, 1, 0, 0},
  {&__pyx_n_s_S, __pyx_k_S, sizeof(__pyx_k_S), 0, 0, 1, 1},
  {&__pyx_n_s_Thread, __pyx_k_Thread, sizeof(__pyx_k_Thread), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_k_Users_stef_Documents_Seafile_de, sizeof(__pyx_k_Users_stef_Documents_Seafile_de), 0, 0, 1, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_WARNING, __pyx_k_WARNING, sizeof(__pyx_k_WARNING), 0, 0, 1, 1},
  {&__pyx_kp_s__19, __pyx_k__19, sizeof(__pyx_k__19), 0, 0, 1, 0},
  {&__pyx_kp_s__20, __pyx_k__20, sizeof(__pyx_k__20), 0, 0, 1, 0},
  {&__pyx_kp_b__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 0, 0},
  {&__pyx_kp_s__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 1, 0},
  {&__pyx_kp_u__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 1, 0, 0},
  {&__pyx_n_s_adapt_binary_functor, __pyx_k_adapt_binary_functor, sizeof(__pyx_k_adapt_binary_functor), 0, 0, 1, 1},
  {&__pyx_n_s_adapt_binary_functor_locals_fun, __pyx_k_adapt_binary_functor_locals_fun, sizeof(__pyx_k_adapt_binary_functor_locals_fun), 0, 0, 1, 1},
  {&__pyx_n_s_adapt_binary_predicate, __pyx_k_adapt_binary_predicate, sizeof(__pyx_k_adapt_binary_predicate), 0, 0, 1, 1},
  {&__pyx_n_s_adapt_binary_predicate_locals_p, __pyx_k_adapt_binary_predicate_locals_p, sizeof(__pyx_k_adapt_binary_predicate_locals_p), 0, 0, 1, 1},
  {&__pyx_n_s_adapt_unary_functor, __pyx_k_adapt_unary_functor, sizeof(__pyx_k_adapt_unary_functor), 0, 0, 1, 1},
  {&__pyx_n_s_adapt_unary_functor_locals_func, __pyx_k_adapt_unary_functor_locals_func, sizeof(__pyx_k_adapt_unary_functor_locals_func), 0, 0, 1, 1},
  {&__pyx_n_s_adapt_unary_predicate, __pyx_k_adapt_unary_predicate, sizeof(__pyx_k_adapt_unary_predicate), 0, 0, 1, 1},
  {&__pyx_n_s_adapt_unary_predicate_locals_pr, __pyx_k_adapt_unary_predicate_locals_pr, sizeof(__pyx_k_adapt_unary_predicate_locals_pr), 0, 0, 1, 1},
  {&__pyx_n_s_allow_nan, __pyx_k_allow_nan, sizeof(__pyx_k_allow_nan), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_autoflush, __pyx_k_autoflush, sizeof(__pyx_k_autoflush), 0, 0, 1, 1},
  {&__pyx_n_s_binary_funct, __pyx_k_binary_funct, sizeof(__pyx_k_binary_funct), 0, 0, 1, 1},
  {&__pyx_n_s_binary_pred, __pyx_k_binary_pred, sizeof(__pyx_k_binary_pred), 0, 0, 1, 1},
  {&__pyx_n_s_block, __pyx_k_block, sizeof(__pyx_k_block), 0, 0, 1, 1},
  {&__pyx_n_s_block_mode_linked, __pyx_k_block_mode_linked, sizeof(__pyx_k_block_mode_linked), 0, 0, 1, 1},
  {&__pyx_n_s_block_size_id, __pyx_k_block_size_id, sizeof(__pyx_k_block_size_id), 0, 0, 1, 1},
  {&__pyx_n_s_bytes, __pyx_k_bytes, sizeof(__pyx_k_bytes), 0, 0, 1, 1},
  {&__pyx_n_s_cPickle, __pyx_k_cPickle, sizeof(__pyx_k_cPickle), 0, 0, 1, 1},
  {&__pyx_n_s_check_circular, __pyx_k_check_circular, sizeof(__pyx_k_check_circular), 0, 0, 1, 1},
  {&__pyx_n_s_checksum, __pyx_k_checksum, sizeof(__pyx_k_checksum), 0, 0, 1, 1},
  {&__pyx_n_s_chunk_size, __pyx_k_chunk_size, sizeof(__pyx_k_chunk_size), 0, 0, 1, 1},
  {&__pyx_n_s_clear, __pyx_k_clear, sizeof(__pyx_k_clear), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_collections, __pyx_k_collections, sizeof(__pyx_k_collections), 0, 0, 1, 1},
  {&__pyx_n_s_compare_digest, __pyx_k_compare_digest, sizeof(__pyx_k_compare_digest), 0, 0, 1, 1},
  {&__pyx_n_s_compress, __pyx_k_compress, sizeof(__pyx_k_compress), 0, 0, 1, 1},
  {&__pyx_n_s_compresser, __pyx_k_compresser, sizeof(__pyx_k_compresser), 0, 0, 1, 1},
  {&__pyx_n_s_copy_to, __pyx_k_copy_to, sizeof(__pyx_k_copy_to), 0, 0, 1, 1},
  {&__pyx_n_s_dbname, __pyx_k_dbname, sizeof(__pyx_k_dbname), 0, 0, 1, 1},
  {&__pyx_n_s_decode, __pyx_k_decode, sizeof(__pyx_k_decode), 0, 0, 1, 1},
  {&__pyx_n_s_decompress, __pyx_k_decompress, sizeof(__pyx_k_decompress), 0, 0, 1, 1},
  {&__pyx_n_s_default, __pyx_k_default, sizeof(__pyx_k_default), 0, 0, 1, 1},
  {&__pyx_n_s_default_expiry, __pyx_k_default_expiry, sizeof(__pyx_k_default_expiry), 0, 0, 1, 1},
  {&__pyx_n_s_destroy, __pyx_k_destroy, sizeof(__pyx_k_destroy), 0, 0, 1, 1},
  {&__pyx_n_s_digest, __pyx_k_digest, sizeof(__pyx_k_digest), 0, 0, 1, 1},
  {&__pyx_n_s_dirname, __pyx_k_dirname, sizeof(__pyx_k_dirname), 0, 0, 1, 1},
  {&__pyx_n_s_dump, __pyx_k_dump, sizeof(__pyx_k_dump), 0, 0, 1, 1},
  {&__pyx_n_s_dumps, __pyx_k_dumps, sizeof(__pyx_k_dumps), 0, 0, 1, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_empty, __pyx_k_empty, sizeof(__pyx_k_empty), 0, 0, 1, 1},
  {&__pyx_kp_s_empty_dirname, __pyx_k_empty_dirname, sizeof(__pyx_k_empty_dirname), 0, 0, 1, 0},
  {&__pyx_n_s_encoding, __pyx_k_encoding, sizeof(__pyx_k_encoding), 0, 0, 1, 1},
  {&__pyx_n_s_ensure_ascii, __pyx_k_ensure_ascii, sizeof(__pyx_k_ensure_ascii), 0, 0, 1, 1},
  {&__pyx_n_s_enter, __pyx_k_enter, sizeof(__pyx_k_enter), 0, 0, 1, 1},
  {&__pyx_n_s_erase, __pyx_k_erase, sizeof(__pyx_k_erase), 0, 0, 1, 1},
  {&__pyx_n_s_exc_tb, __pyx_k_exc_tb, sizeof(__pyx_k_exc_tb), 0, 0, 1, 1},
  {&__pyx_n_s_exc_type, __pyx_k_exc_type, sizeof(__pyx_k_exc_type), 0, 0, 1, 1},
  {&__pyx_n_s_exc_val, __pyx_k_exc_val, sizeof(__pyx_k_exc_val), 0, 0, 1, 1},
  {&__pyx_n_s_exit, __pyx_k_exit, sizeof(__pyx_k_exit), 0, 0, 1, 1},
  {&__pyx_n_s_expiry, __pyx_k_expiry, sizeof(__pyx_k_expiry), 0, 0, 1, 1},
  {&__pyx_n_s_expiry_dict___iter, __pyx_k_expiry_dict___iter, sizeof(__pyx_k_expiry_dict___iter), 0, 0, 1, 1},
  {&__pyx_n_s_expiry_dict_items, __pyx_k_expiry_dict_items, sizeof(__pyx_k_expiry_dict_items), 0, 0, 1, 1},
  {&__pyx_n_s_expiry_dict_values, __pyx_k_expiry_dict_values, sizeof(__pyx_k_expiry_dict_values), 0, 0, 1, 1},
  {&__pyx_n_s_ext_hook, __pyx_k_ext_hook, sizeof(__pyx_k_ext_hook), 0, 0, 1, 1},
  {&__pyx_n_s_first, __pyx_k_first, sizeof(__pyx_k_first), 0, 0, 1, 1},
  {&__pyx_n_s_fixed_map, __pyx_k_fixed_map, sizeof(__pyx_k_fixed_map), 0, 0, 1, 1},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_from_mview, __pyx_k_from_mview, sizeof(__pyx_k_from_mview), 0, 0, 1, 1},
  {&__pyx_n_s_fromkeys, __pyx_k_fromkeys, sizeof(__pyx_k_fromkeys), 0, 0, 1, 1},
  {&__pyx_n_s_fromkeys_locals_genexpr, __pyx_k_fromkeys_locals_genexpr, sizeof(__pyx_k_fromkeys_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_full, __pyx_k_full, sizeof(__pyx_k_full), 0, 0, 1, 1},
  {&__pyx_n_s_functor, __pyx_k_functor, sizeof(__pyx_k_functor), 0, 0, 1, 1},
  {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_get_nowait, __pyx_k_get_nowait, sizeof(__pyx_k_get_nowait), 0, 0, 1, 1},
  {&__pyx_n_s_has_key, __pyx_k_has_key, sizeof(__pyx_k_has_key), 0, 0, 1, 1},
  {&__pyx_n_s_hashlib, __pyx_k_hashlib, sizeof(__pyx_k_hashlib), 0, 0, 1, 1},
  {&__pyx_n_s_hmac, __pyx_k_hmac, sizeof(__pyx_k_hmac), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_indent, __pyx_k_indent, sizeof(__pyx_k_indent), 0, 0, 1, 1},
  {&__pyx_n_s_index_dict, __pyx_k_index_dict, sizeof(__pyx_k_index_dict), 0, 0, 1, 1},
  {&__pyx_kp_s_index_dict_is_not_initialized, __pyx_k_index_dict_is_not_initialized, sizeof(__pyx_k_index_dict_is_not_initialized), 0, 0, 1, 0},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_is_set, __pyx_k_is_set, sizeof(__pyx_k_is_set), 0, 0, 1, 1},
  {&__pyx_n_s_item, __pyx_k_item, sizeof(__pyx_k_item), 0, 0, 1, 1},
  {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
  {&__pyx_n_s_iter, __pyx_k_iter, sizeof(__pyx_k_iter), 0, 0, 1, 1},
  {&__pyx_n_s_iteritems, __pyx_k_iteritems, sizeof(__pyx_k_iteritems), 0, 0, 1, 1},
  {&__pyx_n_s_iterkeys, __pyx_k_iterkeys, sizeof(__pyx_k_iterkeys), 0, 0, 1, 1},
  {&__pyx_n_s_itervalues, __pyx_k_itervalues, sizeof(__pyx_k_itervalues), 0, 0, 1, 1},
  {&__pyx_n_s_join, __pyx_k_join, sizeof(__pyx_k_join), 0, 0, 1, 1},
  {&__pyx_n_s_json, __pyx_k_json, sizeof(__pyx_k_json), 0, 0, 1, 1},
  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
  {&__pyx_n_s_key_chain, __pyx_k_key_chain, sizeof(__pyx_k_key_chain), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_last, __pyx_k_last, sizeof(__pyx_k_last), 0, 0, 1, 1},
  {&__pyx_n_s_level, __pyx_k_level, sizeof(__pyx_k_level), 0, 0, 1, 1},
  {&__pyx_n_s_load, __pyx_k_load, sizeof(__pyx_k_load), 0, 0, 1, 1},
  {&__pyx_n_s_loads, __pyx_k_loads, sizeof(__pyx_k_loads), 0, 0, 1, 1},
  {&__pyx_n_s_logging, __pyx_k_logging, sizeof(__pyx_k_logging), 0, 0, 1, 1},
  {&__pyx_n_s_lz4framed, __pyx_k_lz4framed, sizeof(__pyx_k_lz4framed), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_make_temp, __pyx_k_make_temp, sizeof(__pyx_k_make_temp), 0, 0, 1, 1},
  {&__pyx_n_s_map_async, __pyx_k_map_async, sizeof(__pyx_k_map_async), 0, 0, 1, 1},
  {&__pyx_n_s_map_size, __pyx_k_map_size, sizeof(__pyx_k_map_size), 0, 0, 1, 1},
  {&__pyx_n_s_mapping, __pyx_k_mapping, sizeof(__pyx_k_mapping), 0, 0, 1, 1},
  {&__pyx_n_s_max_dbs, __pyx_k_max_dbs, sizeof(__pyx_k_max_dbs), 0, 0, 1, 1},
  {&__pyx_n_s_max_readers, __pyx_k_max_readers, sizeof(__pyx_k_max_readers), 0, 0, 1, 1},
  {&__pyx_n_s_mbufferio, __pyx_k_mbufferio, sizeof(__pyx_k_mbufferio), 0, 0, 1, 1},
  {&__pyx_n_s_move_to, __pyx_k_move_to, sizeof(__pyx_k_move_to), 0, 0, 1, 1},
  {&__pyx_n_s_msgpack, __pyx_k_msgpack, sizeof(__pyx_k_msgpack), 0, 0, 1, 1},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_n_s_no_lock, __pyx_k_no_lock, sizeof(__pyx_k_no_lock), 0, 0, 1, 1},
  {&__pyx_n_s_no_mem_init, __pyx_k_no_mem_init, sizeof(__pyx_k_no_mem_init), 0, 0, 1, 1},
  {&__pyx_n_s_no_meta_sync, __pyx_k_no_meta_sync, sizeof(__pyx_k_no_meta_sync), 0, 0, 1, 1},
  {&__pyx_n_s_no_read_ahead, __pyx_k_no_read_ahead, sizeof(__pyx_k_no_read_ahead), 0, 0, 1, 1},
  {&__pyx_n_s_no_subdir, __pyx_k_no_subdir, sizeof(__pyx_k_no_subdir), 0, 0, 1, 1},
  {&__pyx_n_s_no_sync, __pyx_k_no_sync, sizeof(__pyx_k_no_sync), 0, 0, 1, 1},
  {&__pyx_n_s_no_tls, __pyx_k_no_tls, sizeof(__pyx_k_no_tls), 0, 0, 1, 1},
  {&__pyx_n_s_noiteritems, __pyx_k_noiteritems, sizeof(__pyx_k_noiteritems), 0, 0, 1, 1},
  {&__pyx_n_s_noiterkeys, __pyx_k_noiterkeys, sizeof(__pyx_k_noiterkeys), 0, 0, 1, 1},
  {&__pyx_n_s_noitervalues, __pyx_k_noitervalues, sizeof(__pyx_k_noitervalues), 0, 0, 1, 1},
  {&__pyx_n_b_none, __pyx_k_none, sizeof(__pyx_k_none), 0, 0, 0, 1},
  {&__pyx_n_s_opts, __pyx_k_opts, sizeof(__pyx_k_opts), 0, 0, 1, 1},
  {&__pyx_n_s_other, __pyx_k_other, sizeof(__pyx_k_other), 0, 0, 1, 1},
  {&__pyx_n_s_pack, __pyx_k_pack, sizeof(__pyx_k_pack), 0, 0, 1, 1},
  {&__pyx_n_s_pcontainers__pdict, __pyx_k_pcontainers__pdict, sizeof(__pyx_k_pcontainers__pdict), 0, 0, 1, 1},
  {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
  {&__pyx_n_s_pop, __pyx_k_pop, sizeof(__pyx_k_pop), 0, 0, 1, 1},
  {&__pyx_n_s_pop_all, __pyx_k_pop_all, sizeof(__pyx_k_pop_all), 0, 0, 1, 1},
  {&__pyx_n_s_pop_back, __pyx_k_pop_back, sizeof(__pyx_k_pop_back), 0, 0, 1, 1},
  {&__pyx_n_s_pop_front, __pyx_k_pop_front, sizeof(__pyx_k_pop_front), 0, 0, 1, 1},
  {&__pyx_n_s_popitem, __pyx_k_popitem, sizeof(__pyx_k_popitem), 0, 0, 1, 1},
  {&__pyx_n_s_predicate, __pyx_k_predicate, sizeof(__pyx_k_predicate), 0, 0, 1, 1},
  {&__pyx_n_s_protocol, __pyx_k_protocol, sizeof(__pyx_k_protocol), 0, 0, 1, 1},
  {&__pyx_n_s_prune_expired, __pyx_k_prune_expired, sizeof(__pyx_k_prune_expired), 0, 0, 1, 1},
  {&__pyx_n_s_prune_period, __pyx_k_prune_period, sizeof(__pyx_k_prune_period), 0, 0, 1, 1},
  {&__pyx_kp_s_prune_period_must_be_strictly_po, __pyx_k_prune_period_must_be_strictly_po, sizeof(__pyx_k_prune_period_must_be_strictly_po), 0, 0, 1, 0},
  {&__pyx_n_s_pruning_thread_fun, __pyx_k_pruning_thread_fun, sizeof(__pyx_k_pruning_thread_fun), 0, 0, 1, 1},
  {&__pyx_n_s_push_back, __pyx_k_push_back, sizeof(__pyx_k_push_back), 0, 0, 1, 1},
  {&__pyx_n_s_push_back_many, __pyx_k_push_back_many, sizeof(__pyx_k_push_back_many), 0, 0, 1, 1},
  {&__pyx_n_s_push_back_many_locals_genexpr, __pyx_k_push_back_many_locals_genexpr, sizeof(__pyx_k_push_back_many_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_push_front, __pyx_k_push_front, sizeof(__pyx_k_push_front), 0, 0, 1, 1},
  {&__pyx_n_s_push_front_many, __pyx_k_push_front_many, sizeof(__pyx_k_push_front_many), 0, 0, 1, 1},
  {&__pyx_n_s_push_front_many_locals_genexpr, __pyx_k_push_front_many_locals_genexpr, sizeof(__pyx_k_push_front_many_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_put, __pyx_k_put, sizeof(__pyx_k_put), 0, 0, 1, 1},
  {&__pyx_n_s_put_nowait, __pyx_k_put_nowait, sizeof(__pyx_k_put_nowait), 0, 0, 1, 1},
  {&__pyx_n_s_py_exceptions, __pyx_k_py_exceptions, sizeof(__pyx_k_py_exceptions), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_qsize, __pyx_k_qsize, sizeof(__pyx_k_qsize), 0, 0, 1, 1},
  {&__pyx_n_s_queue, __pyx_k_queue, sizeof(__pyx_k_queue), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_s_read_only, __pyx_k_read_only, sizeof(__pyx_k_read_only), 0, 0, 1, 1},
  {&__pyx_n_s_register, __pyx_k_register, sizeof(__pyx_k_register), 0, 0, 1, 1},
  {&__pyx_n_s_remove_duplicates, __pyx_k_remove_duplicates, sizeof(__pyx_k_remove_duplicates), 0, 0, 1, 1},
  {&__pyx_n_s_remove_if, __pyx_k_remove_if, sizeof(__pyx_k_remove_if), 0, 0, 1, 1},
  {&__pyx_n_s_reverse, __pyx_k_reverse, sizeof(__pyx_k_reverse), 0, 0, 1, 1},
  {&__pyx_n_s_rmtree, __pyx_k_rmtree, sizeof(__pyx_k_rmtree), 0, 0, 1, 1},
  {&__pyx_n_s_secret, __pyx_k_secret, sizeof(__pyx_k_secret), 0, 0, 1, 1},
  {&__pyx_n_s_seek, __pyx_k_seek, sizeof(__pyx_k_seek), 0, 0, 1, 1},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_separators, __pyx_k_separators, sizeof(__pyx_k_separators), 0, 0, 1, 1},
  {&__pyx_n_s_serializer, __pyx_k_serializer, sizeof(__pyx_k_serializer), 0, 0, 1, 1},
  {&__pyx_n_s_set, __pyx_k_set, sizeof(__pyx_k_set), 0, 0, 1, 1},
  {&__pyx_n_s_setdefault, __pyx_k_setdefault, sizeof(__pyx_k_setdefault), 0, 0, 1, 1},
  {&__pyx_n_s_sha256, __pyx_k_sha256, sizeof(__pyx_k_sha256), 0, 0, 1, 1},
  {&__pyx_n_s_shutil, __pyx_k_shutil, sizeof(__pyx_k_shutil), 0, 0, 1, 1},
  {&__pyx_n_s_signer, __pyx_k_signer, sizeof(__pyx_k_signer), 0, 0, 1, 1},
  {&__pyx_n_s_simplejson, __pyx_k_simplejson, sizeof(__pyx_k_simplejson), 0, 0, 1, 1},
  {&__pyx_n_s_skipkeys, __pyx_k_skipkeys, sizeof(__pyx_k_skipkeys), 0, 0, 1, 1},
  {&__pyx_n_s_sleep, __pyx_k_sleep, sizeof(__pyx_k_sleep), 0, 0, 1, 1},
  {&__pyx_n_s_snappyx, __pyx_k_snappyx, sizeof(__pyx_k_snappyx), 0, 0, 1, 1},
  {&__pyx_n_s_start, __pyx_k_start, sizeof(__pyx_k_start), 0, 0, 1, 1},
  {&__pyx_n_s_strict, __pyx_k_strict, sizeof(__pyx_k_strict), 0, 0, 1, 1},
  {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
  {&__pyx_n_s_target, __pyx_k_target, sizeof(__pyx_k_target), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_threading, __pyx_k_threading, sizeof(__pyx_k_threading), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
  {&__pyx_n_s_timeout, __pyx_k_timeout, sizeof(__pyx_k_timeout), 0, 0, 1, 1},
  {&__pyx_kp_s_timeout_must_be_a_non_negative, __pyx_k_timeout_must_be_a_non_negative, sizeof(__pyx_k_timeout_must_be_a_non_negative), 0, 0, 1, 0},
  {&__pyx_n_s_tobytes, __pyx_k_tobytes, sizeof(__pyx_k_tobytes), 0, 0, 1, 1},
  {&__pyx_n_s_transform_values, __pyx_k_transform_values, sizeof(__pyx_k_transform_values), 0, 0, 1, 1},
  {&__pyx_n_s_unary_funct, __pyx_k_unary_funct, sizeof(__pyx_k_unary_funct), 0, 0, 1, 1},
  {&__pyx_n_s_unary_pred, __pyx_k_unary_pred, sizeof(__pyx_k_unary_pred), 0, 0, 1, 1},
  {&__pyx_n_s_unicode, __pyx_k_unicode, sizeof(__pyx_k_unicode), 0, 0, 1, 1},
  {&__pyx_n_s_unicode_errors, __pyx_k_unicode_errors, sizeof(__pyx_k_unicode_errors), 0, 0, 1, 1},
  {&__pyx_n_s_unpack, __pyx_k_unpack, sizeof(__pyx_k_unpack), 0, 0, 1, 1},
  {&__pyx_kp_s_unsupported_comparison, __pyx_k_unsupported_comparison, sizeof(__pyx_k_unsupported_comparison), 0, 0, 1, 0},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_use_bin_type, __pyx_k_use_bin_type, sizeof(__pyx_k_use_bin_type), 0, 0, 1, 1},
  {&__pyx_n_s_use_list, __pyx_k_use_list, sizeof(__pyx_k_use_list), 0, 0, 1, 1},
  {&__pyx_n_s_use_single_float, __pyx_k_use_single_float, sizeof(__pyx_k_use_single_float), 0, 0, 1, 1},
  {&__pyx_kp_s_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 0, 1, 0},
  {&__pyx_n_s_uuid, __pyx_k_uuid, sizeof(__pyx_k_uuid), 0, 0, 1, 1},
  {&__pyx_n_s_uuid4, __pyx_k_uuid4, sizeof(__pyx_k_uuid4), 0, 0, 1, 1},
  {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_value_chain, __pyx_k_value_chain, sizeof(__pyx_k_value_chain), 0, 0, 1, 1},
  {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
  {&__pyx_n_s_values_dict, __pyx_k_values_dict, sizeof(__pyx_k_values_dict), 0, 0, 1, 1},
  {&__pyx_kp_s_values_dict_and_index_dict_can_n, __pyx_k_values_dict_and_index_dict_can_n, sizeof(__pyx_k_values_dict_and_index_dict_can_n), 0, 0, 1, 0},
  {&__pyx_kp_s_values_dict_is_not_initialized, __pyx_k_values_dict_is_not_initialized, sizeof(__pyx_k_values_dict_is_not_initialized), 0, 0, 1, 0},
  {&__pyx_n_s_wait, __pyx_k_wait, sizeof(__pyx_k_wait), 0, 0, 1, 1},
  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
  {&__pyx_n_s_write_map, __pyx_k_write_map, sizeof(__pyx_k_write_map), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_super = __Pyx_GetBuiltinName(__pyx_n_s_super); if (!__pyx_builtin_super) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "pcontainers/pdict_impl.pxi":8
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")             # <<<<<<<<<<<<<<
 *         if opts is None:
 *             opts = LmdbOptions()
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_empty_dirname); if (unlikely(!__pyx_tuple_)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "pcontainers/pdict_impl.pxi":61
 *                 return True
 *             return deref((<PRawDict> self).ptr) != deref((<PRawDict> other).ptr)
 *         raise ValueError("unsupported comparison")             # <<<<<<<<<<<<<<
 * 
 *     property dirname:
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_unsupported_comparison); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "pcontainers/pdict_impl.pxi":111
 *         cdef MDB_val v
 *         cdef cpp_bool done = 0
 *         cdef bytearray obj = bytearray(4096)             # <<<<<<<<<<<<<<
 *         cdef PyBufferWrap view = move(PyBufferWrap(obj))
 *         with nogil:
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_int_4096); if (unlikely(!__pyx_tuple__3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "pcontainers/pdict_impl.pxi":152
 *         cdef cpp_bool done = 0
 *         cdef bytearray key_obj = bytearray(keysize)
 *         cdef bytearray value_obj = bytearray(4096)             # <<<<<<<<<<<<<<
 * 
 *         cdef PyBufferWrap key_view = move(PyBufferWrap(key_obj))
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_int_4096); if (unlikely(!__pyx_tuple__4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "pcontainers/pdict_impl.pxi":411
 * cdef class PDict(PRawDict):
 *     def __cinit__(self, dirname, dbname, LmdbOptions opts=None, mapping=None, Chain key_chain=None, Chain value_chain=None, **kwarg):
 *         self.key_chain = key_chain if key_chain else Chain(None, None, None)             # <<<<<<<<<<<<<<
 *         self.value_chain = value_chain if value_chain else Chain(PickleSerializer(), None, None)
 * 
 */
  __pyx_tuple__6 = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_tuple__6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "pcontainers/pqueue_impl.pxi":7
 *         cdef CBString dbn = tocbstring(make_utf8(dbname))
 *         if dirn.length() == 0:
 *             raise ValueError("empty dirname")             # <<<<<<<<<<<<<<
 *         if opts is None:
 *             opts = LmdbOptions()
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_empty_dirname); if (unlikely(!__pyx_tuple__7)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "pcontainers/pqueue_impl.pxi":96
 * 
 *         elif timeout < 0:
 *             raise ValueError("'timeout' must be a non-negative number")             # <<<<<<<<<<<<<<
 *         else:
 *             t_out = timeout
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_timeout_must_be_a_non_negative); if (unlikely(!__pyx_tuple__8)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "pcontainers/expiry_dict_impl.pxi":5
 *     def __init__(self, PDict values_dict, PDict index_dict, time_t default_expiry=3600, time_t prune_period=5):
 *         if not values_dict:
 *             raise ValueError('values_dict is not initialized')             # <<<<<<<<<<<<<<
 *         if not index_dict:
 *             raise ValueError('index_dict is not initialized')
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_values_dict_is_not_initialized); if (unlikely(!__pyx_tuple__9)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "pcontainers/expiry_dict_impl.pxi":7
 *             raise ValueError('values_dict is not initialized')
 *         if not index_dict:
 *             raise ValueError('index_dict is not initialized')             # <<<<<<<<<<<<<<
 *         if values_dict == index_dict:
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_index_dict_is_not_initialized); if (unlikely(!__pyx_tuple__10)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "pcontainers/expiry_dict_impl.pxi":9
 *             raise ValueError('index_dict is not initialized')
 *         if values_dict == index_dict:
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')             # <<<<<<<<<<<<<<
 *         if prune_period <= 0:
 *             raise ValueError("prune_period must be strictly positive")
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_values_dict_and_index_dict_can_n); if (unlikely(!__pyx_tuple__11)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "pcontainers/expiry_dict_impl.pxi":11
 *             raise ValueError('values_dict and index_dict can not point to the same LMDB database')
 *         if prune_period <= 0:
 *             raise ValueError("prune_period must be strictly positive")             # <<<<<<<<<<<<<<
 *         self.values_dict = values_dict
 *         self.index_dict = index_dict
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_prune_period_must_be_strictly_po); if (unlikely(!__pyx_tuple__12)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "pcontainers/filters_impl.pxi":18
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__14)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "pcontainers/filters_impl.pxi":41
 *         buf = MBufferIO()
 *         self.pickle_module.dump(obj, buf, protocol=self.protocol)
 *         buf.seek(0)             # <<<<<<<<<<<<<<
 *         return buf
 * 
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__15)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "pcontainers/filters_impl.pxi":47
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return self.pickle_module.load(obj)
 * 
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__16)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "pcontainers/filters_impl.pxi":67
 *         buf = MBufferIO()
 *         self.messagepack_module.pack(obj, buf, **self.mpack_args)
 *         buf.seek(0)             # <<<<<<<<<<<<<<
 *         return buf
 * 
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__17)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "pcontainers/filters_impl.pxi":73
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return self.messagepack_module.unpack(
 *             obj, use_list=self.use_list, encoding="utf-8", unicode_errors=self.mpack_args['unicode_errors'],
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__18)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "pcontainers/filters_impl.pxi":94
 *         buf = MBufferIO()
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,
 *                               separators=(',', ':'), encoding='utf-8', default=self.default)             # <<<<<<<<<<<<<<
 *         buf.seek(0)
 *         return buf
 */
  __pyx_tuple__21 = PyTuple_Pack(2, __pyx_kp_s__19, __pyx_kp_s__20); if (unlikely(!__pyx_tuple__21)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "pcontainers/filters_impl.pxi":95
 *         self.json_module.dump(obj, buf, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, indent=None,
 *                               separators=(',', ':'), encoding='utf-8', default=self.default)
 *         buf.seek(0)             # <<<<<<<<<<<<<<
 *         return buf
 * 
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__22)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "pcontainers/filters_impl.pxi":101
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return self.json_module.load(obj, encoding='utf-8')
 * 
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__23)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "pcontainers/filters_impl.pxi":115
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 *     cpdef loads(self, obj):
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__24)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "pcontainers/filters_impl.pxi":120
 *         if not isinstance(obj, MBufferIO):
 *             obj = MBufferIO(obj)
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__25)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "pcontainers/filters_impl.pxi":139
 *         if self.secret:
 *             h = self.hmac_module.new(self.secret, obj, self.hashlib_module.sha256)
 *             obj.seek(0, 2)  # pos at end             # <<<<<<<<<<<<<<
 *             obj.write(h.digest())
 *         obj.seek(0)
 */
  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_2); if (unlikely(!__pyx_tuple__26)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "pcontainers/filters_impl.pxi":141
 *             obj.seek(0, 2)  # pos at end
 *             obj.write(h.digest())
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__27)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "pcontainers/filters_impl.pxi":148
 *             obj = MBufferIO(obj)
 *         if self.secret:
 *             digest = obj[-32:].tobytes()    # read last 32 bytes             # <<<<<<<<<<<<<<
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash
 *             if not self.hmac_module.compare_digest(digest, h):
 */
  __pyx_slice__28 = PySlice_New(__pyx_int_neg_32, Py_None, Py_None); if (unlikely(!__pyx_slice__28)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_slice__28);
  __Pyx_GIVEREF(__pyx_slice__28);

  /* "pcontainers/filters_impl.pxi":149
 *         if self.secret:
 *             digest = obj[-32:].tobytes()    # read last 32 bytes
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash             # <<<<<<<<<<<<<<
 *             if not self.hmac_module.compare_digest(digest, h):
 *                 raise ValueError("HMAC check failed : data has been tampered ?")
 */
  __pyx_slice__29 = PySlice_New(__pyx_int_0, __pyx_int_neg_32, Py_None); if (unlikely(!__pyx_slice__29)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_slice__29);
  __Pyx_GIVEREF(__pyx_slice__29);

  /* "pcontainers/filters_impl.pxi":151
 *             h = self.hmac_module.new(self.secret, obj[0:-32], self.hashlib_module.sha256).digest()  # forget the last 32 bytes and make hash
 *             if not self.hmac_module.compare_digest(digest, h):
 *                 raise ValueError("HMAC check failed : data has been tampered ?")             # <<<<<<<<<<<<<<
 *             return obj[0:-32]
 *         obj.seek(0)
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_HMAC_check_failed_data_has_been); if (unlikely(!__pyx_tuple__30)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "pcontainers/filters_impl.pxi":152
 *             if not self.hmac_module.compare_digest(digest, h):
 *                 raise ValueError("HMAC check failed : data has been tampered ?")
 *             return obj[0:-32]             # <<<<<<<<<<<<<<
 *         obj.seek(0)
 *         return obj
 */
  __pyx_slice__31 = PySlice_New(__pyx_int_0, __pyx_int_neg_32, Py_None); if (unlikely(!__pyx_slice__31)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_slice__31);
  __Pyx_GIVEREF(__pyx_slice__31);

  /* "pcontainers/filters_impl.pxi":153
 *                 raise ValueError("HMAC check failed : data has been tampered ?")
 *             return obj[0:-32]
 *         obj.seek(0)             # <<<<<<<<<<<<<<
 *         return obj
 * 
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__32)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "pcontainers/filters_impl.pxi":200
 *             try:
 *                 while True:
 *                     c.update(obj.read(65536))             # <<<<<<<<<<<<<<
 *             except self.lz4_module.Lz4FramedNoDataError:
 *                 pass
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_int_65536); if (unlikely(!__pyx_tuple__33)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "pcontainers/filters_impl.pxi":196
 *             obj = MBufferIO(obj)
 *         compressed = MBufferIO()
 *         with self.lz4_module.Compressor(compressed, block_size_id=self.block_size_id, block_mode_linked=self.block_mode_linked,             # <<<<<<<<<<<<<<
 *                                         checksum=self.checksum, autoflush=True, level=self.level) as c:
 *             try:
 */
  __pyx_tuple__34 = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_tuple__34)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "pcontainers/filters_impl.pxi":203
 *             except self.lz4_module.Lz4FramedNoDataError:
 *                 pass
 *         compressed.seek(0)             # <<<<<<<<<<<<<<
 *         return compressed
 * 
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__35)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "pcontainers/filters_impl.pxi":212
 *         for chunk in self.lz4_module.Decompressor(obj):
 *            decompressed.write(chunk)
 *         decompressed.seek(0)             # <<<<<<<<<<<<<<
 *         return decompressed
 * 
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__36)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "pcontainers/_pdict.pyx":32
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):
 *     def functor(x):             # <<<<<<<<<<<<<<
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 *     return functor
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_n_s_x); if (unlikely(!__pyx_tuple__37)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);
  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_n_s_functor, 32, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/_pdict.pyx":38
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):
 *     def functor(x, y):             # <<<<<<<<<<<<<<
 *         return value_chain.dumps(
 *             binary_funct(
 */
  __pyx_tuple__39 = PyTuple_Pack(2, __pyx_n_s_x, __pyx_n_s_y); if (unlikely(!__pyx_tuple__39)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_n_s_functor, 38, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/_pdict.pyx":49
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):
 *     def predicate(x):             # <<<<<<<<<<<<<<
 *         return bool(unary_pred(value_chain.loads(x)))
 *     return predicate
 */
  __pyx_tuple__41 = PyTuple_Pack(1, __pyx_n_s_x); if (unlikely(!__pyx_tuple__41)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);
  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_n_s_predicate, 49, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/_pdict.pyx":55
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):
 *     def predicate(x, y):             # <<<<<<<<<<<<<<
 *         return bool(
 *             binary_pred(
 */
  __pyx_tuple__43 = PyTuple_Pack(2, __pyx_n_s_x, __pyx_n_s_y); if (unlikely(!__pyx_tuple__43)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);
  __pyx_codeobj__44 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__43, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_n_s_predicate, 55, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__44)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/helpers.pxi":8
 *         return s
 *     if PyBytes_Check(s):
 *         return s.decode('utf-8')             # <<<<<<<<<<<<<<
 *     if hasattr(s, '__unicode__'):
 *         return s.__unicode__()
 */
  __pyx_tuple__45 = PyTuple_Pack(1, __pyx_kp_s_utf_8); if (unlikely(!__pyx_tuple__45)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "pcontainers/helpers.pxi":12
 *         return s.__unicode__()
 *     if hasattr(s, '__bytes__'):
 *         return s.__bytes__().decode('utf-8')             # <<<<<<<<<<<<<<
 *     s = str(s)
 *     if PyUnicode_Check(s):
 */
  __pyx_tuple__46 = PyTuple_Pack(1, __pyx_kp_s_utf_8); if (unlikely(!__pyx_tuple__46)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "pcontainers/helpers.pxi":16
 *     if PyUnicode_Check(s):
 *         return s
 *     return s.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_kp_s_utf_8); if (unlikely(!__pyx_tuple__47)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "pcontainers/_pdict.pyx":31
 * 
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x):
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 */
  __pyx_tuple__48 = PyTuple_Pack(4, __pyx_n_s_unary_funct, __pyx_n_s_value_chain, __pyx_n_s_functor, __pyx_n_s_functor); if (unlikely(!__pyx_tuple__48)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_n_s_adapt_unary_functor, 31, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/_pdict.pyx":37
 * 
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x, y):
 *         return value_chain.dumps(
 */
  __pyx_tuple__50 = PyTuple_Pack(5, __pyx_n_s_binary_funct, __pyx_n_s_key_chain, __pyx_n_s_value_chain, __pyx_n_s_functor, __pyx_n_s_functor); if (unlikely(!__pyx_tuple__50)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_n_s_adapt_binary_functor, 37, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/_pdict.pyx":48
 * 
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x):
 *         return bool(unary_pred(value_chain.loads(x)))
 */
  __pyx_tuple__52 = PyTuple_Pack(4, __pyx_n_s_unary_pred, __pyx_n_s_value_chain, __pyx_n_s_predicate, __pyx_n_s_predicate); if (unlikely(!__pyx_tuple__52)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__52, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_n_s_adapt_unary_predicate, 48, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pcontainers/_pdict.pyx":54
 * 
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x, y):
 *         return bool(
 */
  __pyx_tuple__54 = PyTuple_Pack(5, __pyx_n_s_binary_pred, __pyx_n_s_key_chain, __pyx_n_s_value_chain, __pyx_n_s_predicate, __pyx_n_s_predicate); if (unlikely(!__pyx_tuple__54)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Users_stef_Documents_Seafile_de, __pyx_n_s_adapt_binary_predicate, 54, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_16 = PyInt_FromLong(16); if (unlikely(!__pyx_int_16)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_126 = PyInt_FromLong(126); if (unlikely(!__pyx_int_126)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_4096 = PyInt_FromLong(4096); if (unlikely(!__pyx_int_4096)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_65536 = PyInt_FromLong(65536L); if (unlikely(!__pyx_int_65536)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_10485760 = PyInt_FromLong(10485760L); if (unlikely(!__pyx_int_10485760)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_neg_32 = PyInt_FromLong(-32); if (unlikely(!__pyx_int_neg_32)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_pdict(void); /*proto*/
PyMODINIT_FUNC init_pdict(void)
#else
PyMODINIT_FUNC PyInit__pdict(void); /*proto*/
PyMODINIT_FUNC PyInit__pdict(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit__pdict(void)", 0);
  if (__Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("_pdict", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_pcontainers___pdict) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "pcontainers._pdict")) {
      if (unlikely(PyDict_SetItemString(modules, "pcontainers._pdict", __pyx_m) < 0)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  if (__Pyx_ExportFunction("set_logger", (void (*)(void))__pyx_f_11pcontainers_6_pdict_set_logger, "PyObject *(int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_set_logger *__pyx_optional_args)") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("set_python_logger", (void (*)(void))__pyx_f_11pcontainers_6_pdict_set_python_logger, "PyObject *(PyObject *, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Type init code ---*/
  __pyx_vtabptr_11pcontainers_6_pdict_PRawDict = &__pyx_vtable_11pcontainers_6_pdict_PRawDict;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.noiterkeys = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_noiterkeys;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.noitervalues = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_noitervalues;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.noiteritems = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_noiteritems;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.erase = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_erase;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.get = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_get;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.setdefault = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_setdefault;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.pop = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_pop;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.popitem = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_popitem;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.clear = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_clear;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.has_key = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_has_key;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.transform_values = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_transform_values;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.remove_if = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_8PRawDict_remove_if;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.iterkeys = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iterkeys *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_iterkeys;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.itervalues = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_itervalues *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_itervalues;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.iteritems = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_iteritems *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_iteritems;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.copy_to = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_copy_to;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.move_to = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_move_to;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.remove_duplicates = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_8PRawDict_remove_duplicates;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_key = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_key_buf = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key_buf;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_key_buf_const = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_key_buf_const;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_value = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_value_buf = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value_buf;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_value_buf_const = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_value_buf_const;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_item = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_item_buf = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item_buf;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_get_item_buf_const = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::const_iterator &))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_get_item_buf_const;
  __pyx_vtable_11pcontainers_6_pdict_PRawDict.raw_set_item_buf = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, quiet::PersistentDict::iterator &, PyObject *, PyObject *))__pyx_f_11pcontainers_6_pdict_8PRawDict_raw_set_item_buf;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_PRawDict) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_PRawDict.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_PRawDict.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_PRawDict) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PRawDict", (PyObject *)&__pyx_type_11pcontainers_6_pdict_PRawDict) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_PRawDict = &__pyx_type_11pcontainers_6_pdict_PRawDict;
  __pyx_vtabptr_11pcontainers_6_pdict_PDict = &__pyx_vtable_11pcontainers_6_pdict_PDict;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_PRawDict;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.noiterkeys = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5PDict_noiterkeys;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.noitervalues = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5PDict_noitervalues;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.noiteritems = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5PDict_noiteritems;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.erase = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5PDict_erase;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.get = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_get *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_5PDict_get;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.setdefault = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_setdefault *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_5PDict_setdefault;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.pop = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_pop *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_5PDict_pop;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.popitem = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5PDict_popitem;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.transform_values = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5PDict_transform_values;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.remove_if = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5PDict_remove_if;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.copy_to = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_copy_to *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_5PDict_copy_to;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.move_to = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_move_to *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_5PDict_move_to;
  __pyx_vtable_11pcontainers_6_pdict_PDict.__pyx_base.remove_duplicates = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawDict *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_8PRawDict_remove_duplicates *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_5PDict_remove_duplicates;
  __pyx_type_11pcontainers_6_pdict_PDict.tp_base = __pyx_ptype_11pcontainers_6_pdict_PRawDict;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_PDict) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_PDict.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_PDict.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_PDict) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PDict", (PyObject *)&__pyx_type_11pcontainers_6_pdict_PDict) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_PDict = &__pyx_type_11pcontainers_6_pdict_PDict;
  __pyx_vtabptr_11pcontainers_6_pdict_PRawQueue = &__pyx_vtable_11pcontainers_6_pdict_PRawQueue;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.push_front = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_push_front;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.push_back = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_push_back;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.pop_back = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_back;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.pop_front = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_front;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.pop_all = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_pop_all;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.clear = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_clear;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.empty = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_empty;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.qsize = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_qsize;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.full = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_full;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.put = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_put *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_9PRawQueue_put;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.get = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_get *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_9PRawQueue_get;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.put_nowait = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_put_nowait;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.get_nowait = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_get_nowait;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.transform_values = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_transform_values;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.remove_if = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_remove_if;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.move_to = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_9PRawQueue_move_to;
  __pyx_vtable_11pcontainers_6_pdict_PRawQueue.remove_duplicates = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_9PRawQueue_remove_duplicates;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_PRawQueue) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_PRawQueue.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_PRawQueue.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_PRawQueue) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PRawQueue", (PyObject *)&__pyx_type_11pcontainers_6_pdict_PRawQueue) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_PRawQueue = &__pyx_type_11pcontainers_6_pdict_PRawQueue;
  __pyx_vtabptr_11pcontainers_6_pdict_PQueue = &__pyx_vtable_11pcontainers_6_pdict_PQueue;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_PRawQueue;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base.push_front = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6PQueue_push_front;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base.push_back = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6PQueue_push_back;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base.pop_back = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6PQueue_pop_back;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base.pop_front = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6PQueue_pop_front;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base.pop_all = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6PQueue_pop_all;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base.transform_values = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6PQueue_transform_values;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base.remove_if = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6PQueue_remove_if;
  __pyx_vtable_11pcontainers_6_pdict_PQueue.__pyx_base.move_to = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_PRawQueue *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_9PRawQueue_move_to *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_6PQueue_move_to;
  __pyx_type_11pcontainers_6_pdict_PQueue.tp_base = __pyx_ptype_11pcontainers_6_pdict_PRawQueue;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_PQueue) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_PQueue.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_PQueue.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_PQueue) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PQueue", (PyObject *)&__pyx_type_11pcontainers_6_pdict_PQueue) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_PQueue = &__pyx_type_11pcontainers_6_pdict_PQueue;
  __pyx_vtabptr_11pcontainers_6_pdict_expiry_dict = &__pyx_vtable_11pcontainers_6_pdict_expiry_dict;
  __pyx_vtable_11pcontainers_6_pdict_expiry_dict.get = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_get *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_11expiry_dict_get;
  __pyx_vtable_11pcontainers_6_pdict_expiry_dict.set = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, PyObject *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_set *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_11expiry_dict_set;
  __pyx_vtable_11pcontainers_6_pdict_expiry_dict.pop = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_11pcontainers_6_pdict_11expiry_dict_pop *__pyx_optional_args))__pyx_f_11pcontainers_6_pdict_11expiry_dict_pop;
  __pyx_vtable_11pcontainers_6_pdict_expiry_dict.popitem = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_11expiry_dict_popitem;
  __pyx_vtable_11pcontainers_6_pdict_expiry_dict.prune_expired = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_expiry_dict *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_11expiry_dict_prune_expired;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_expiry_dict) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_expiry_dict.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_expiry_dict.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_expiry_dict) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "expiry_dict", (PyObject *)&__pyx_type_11pcontainers_6_pdict_expiry_dict) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_expiry_dict = &__pyx_type_11pcontainers_6_pdict_expiry_dict;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_LmdbOptions) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_LmdbOptions.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "LmdbOptions", (PyObject *)&__pyx_type_11pcontainers_6_pdict_LmdbOptions) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_LmdbOptions = &__pyx_type_11pcontainers_6_pdict_LmdbOptions;
  __pyx_vtabptr_11pcontainers_6_pdict_Filter = &__pyx_vtable_11pcontainers_6_pdict_Filter;
  __pyx_vtable_11pcontainers_6_pdict_Filter.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6Filter_dumps;
  __pyx_vtable_11pcontainers_6_pdict_Filter.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_6Filter_loads;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_Filter) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_Filter.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_Filter.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_Filter) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Filter", (PyObject *)&__pyx_type_11pcontainers_6_pdict_Filter) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_Filter = &__pyx_type_11pcontainers_6_pdict_Filter;
  __pyx_vtabptr_11pcontainers_6_pdict_Serializer = &__pyx_vtable_11pcontainers_6_pdict_Serializer;
  __pyx_vtable_11pcontainers_6_pdict_Serializer.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Filter;
  __pyx_type_11pcontainers_6_pdict_Serializer.tp_base = __pyx_ptype_11pcontainers_6_pdict_Filter;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_Serializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_Serializer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_Serializer.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_Serializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Serializer", (PyObject *)&__pyx_type_11pcontainers_6_pdict_Serializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_Serializer = &__pyx_type_11pcontainers_6_pdict_Serializer;
  __pyx_vtabptr_11pcontainers_6_pdict_NoneSerializer = &__pyx_vtable_11pcontainers_6_pdict_NoneSerializer;
  __pyx_vtable_11pcontainers_6_pdict_NoneSerializer.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Serializer;
  __pyx_vtable_11pcontainers_6_pdict_NoneSerializer.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_14NoneSerializer_dumps;
  __pyx_vtable_11pcontainers_6_pdict_NoneSerializer.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_14NoneSerializer_loads;
  __pyx_type_11pcontainers_6_pdict_NoneSerializer.tp_base = __pyx_ptype_11pcontainers_6_pdict_Serializer;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_NoneSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_NoneSerializer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_NoneSerializer.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_NoneSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "NoneSerializer", (PyObject *)&__pyx_type_11pcontainers_6_pdict_NoneSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_NoneSerializer = &__pyx_type_11pcontainers_6_pdict_NoneSerializer;
  __pyx_vtabptr_11pcontainers_6_pdict_PickleSerializer = &__pyx_vtable_11pcontainers_6_pdict_PickleSerializer;
  __pyx_vtable_11pcontainers_6_pdict_PickleSerializer.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Serializer;
  __pyx_vtable_11pcontainers_6_pdict_PickleSerializer.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_16PickleSerializer_dumps;
  __pyx_vtable_11pcontainers_6_pdict_PickleSerializer.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_16PickleSerializer_loads;
  __pyx_type_11pcontainers_6_pdict_PickleSerializer.tp_base = __pyx_ptype_11pcontainers_6_pdict_Serializer;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_PickleSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_PickleSerializer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_PickleSerializer.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_PickleSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PickleSerializer", (PyObject *)&__pyx_type_11pcontainers_6_pdict_PickleSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_PickleSerializer = &__pyx_type_11pcontainers_6_pdict_PickleSerializer;
  __pyx_vtabptr_11pcontainers_6_pdict_MessagePackSerializer = &__pyx_vtable_11pcontainers_6_pdict_MessagePackSerializer;
  __pyx_vtable_11pcontainers_6_pdict_MessagePackSerializer.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Serializer;
  __pyx_vtable_11pcontainers_6_pdict_MessagePackSerializer.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_21MessagePackSerializer_dumps;
  __pyx_vtable_11pcontainers_6_pdict_MessagePackSerializer.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_21MessagePackSerializer_loads;
  __pyx_type_11pcontainers_6_pdict_MessagePackSerializer.tp_base = __pyx_ptype_11pcontainers_6_pdict_Serializer;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_MessagePackSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_MessagePackSerializer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_MessagePackSerializer.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_MessagePackSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "MessagePackSerializer", (PyObject *)&__pyx_type_11pcontainers_6_pdict_MessagePackSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_MessagePackSerializer = &__pyx_type_11pcontainers_6_pdict_MessagePackSerializer;
  __pyx_vtabptr_11pcontainers_6_pdict_JsonSerializer = &__pyx_vtable_11pcontainers_6_pdict_JsonSerializer;
  __pyx_vtable_11pcontainers_6_pdict_JsonSerializer.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Serializer;
  __pyx_vtable_11pcontainers_6_pdict_JsonSerializer.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_14JsonSerializer_dumps;
  __pyx_vtable_11pcontainers_6_pdict_JsonSerializer.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_14JsonSerializer_loads;
  __pyx_type_11pcontainers_6_pdict_JsonSerializer.tp_base = __pyx_ptype_11pcontainers_6_pdict_Serializer;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_JsonSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_JsonSerializer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_JsonSerializer.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_JsonSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "JsonSerializer", (PyObject *)&__pyx_type_11pcontainers_6_pdict_JsonSerializer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_JsonSerializer = &__pyx_type_11pcontainers_6_pdict_JsonSerializer;
  __pyx_vtabptr_11pcontainers_6_pdict_Signer = &__pyx_vtable_11pcontainers_6_pdict_Signer;
  __pyx_vtable_11pcontainers_6_pdict_Signer.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Filter;
  __pyx_type_11pcontainers_6_pdict_Signer.tp_base = __pyx_ptype_11pcontainers_6_pdict_Filter;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_Signer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_Signer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_Signer.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_Signer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Signer", (PyObject *)&__pyx_type_11pcontainers_6_pdict_Signer) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_Signer = &__pyx_type_11pcontainers_6_pdict_Signer;
  __pyx_vtabptr_11pcontainers_6_pdict_NoneSigner = &__pyx_vtable_11pcontainers_6_pdict_NoneSigner;
  __pyx_vtable_11pcontainers_6_pdict_NoneSigner.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Signer;
  __pyx_vtable_11pcontainers_6_pdict_NoneSigner.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_10NoneSigner_dumps;
  __pyx_vtable_11pcontainers_6_pdict_NoneSigner.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_10NoneSigner_loads;
  __pyx_type_11pcontainers_6_pdict_NoneSigner.tp_base = __pyx_ptype_11pcontainers_6_pdict_Signer;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_NoneSigner) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_NoneSigner.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_NoneSigner.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_NoneSigner) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "NoneSigner", (PyObject *)&__pyx_type_11pcontainers_6_pdict_NoneSigner) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_NoneSigner = &__pyx_type_11pcontainers_6_pdict_NoneSigner;
  __pyx_vtabptr_11pcontainers_6_pdict_HMACSigner = &__pyx_vtable_11pcontainers_6_pdict_HMACSigner;
  __pyx_vtable_11pcontainers_6_pdict_HMACSigner.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Signer;
  __pyx_vtable_11pcontainers_6_pdict_HMACSigner.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_10HMACSigner_dumps;
  __pyx_vtable_11pcontainers_6_pdict_HMACSigner.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_10HMACSigner_loads;
  __pyx_type_11pcontainers_6_pdict_HMACSigner.tp_base = __pyx_ptype_11pcontainers_6_pdict_Signer;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_HMACSigner) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_HMACSigner.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_HMACSigner.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_HMACSigner) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "HMACSigner", (PyObject *)&__pyx_type_11pcontainers_6_pdict_HMACSigner) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_HMACSigner = &__pyx_type_11pcontainers_6_pdict_HMACSigner;
  __pyx_vtabptr_11pcontainers_6_pdict_Compresser = &__pyx_vtable_11pcontainers_6_pdict_Compresser;
  __pyx_vtable_11pcontainers_6_pdict_Compresser.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Filter;
  __pyx_type_11pcontainers_6_pdict_Compresser.tp_base = __pyx_ptype_11pcontainers_6_pdict_Filter;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_Compresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_Compresser.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_Compresser.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_Compresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Compresser", (PyObject *)&__pyx_type_11pcontainers_6_pdict_Compresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_Compresser = &__pyx_type_11pcontainers_6_pdict_Compresser;
  __pyx_vtabptr_11pcontainers_6_pdict_NoneCompresser = &__pyx_vtable_11pcontainers_6_pdict_NoneCompresser;
  __pyx_vtable_11pcontainers_6_pdict_NoneCompresser.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Compresser;
  __pyx_vtable_11pcontainers_6_pdict_NoneCompresser.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_14NoneCompresser_dumps;
  __pyx_vtable_11pcontainers_6_pdict_NoneCompresser.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_14NoneCompresser_loads;
  __pyx_type_11pcontainers_6_pdict_NoneCompresser.tp_base = __pyx_ptype_11pcontainers_6_pdict_Compresser;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_NoneCompresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_NoneCompresser.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_NoneCompresser.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_NoneCompresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "NoneCompresser", (PyObject *)&__pyx_type_11pcontainers_6_pdict_NoneCompresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_NoneCompresser = &__pyx_type_11pcontainers_6_pdict_NoneCompresser;
  __pyx_vtabptr_11pcontainers_6_pdict_SnappyCompresser = &__pyx_vtable_11pcontainers_6_pdict_SnappyCompresser;
  __pyx_vtable_11pcontainers_6_pdict_SnappyCompresser.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Compresser;
  __pyx_vtable_11pcontainers_6_pdict_SnappyCompresser.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_16SnappyCompresser_dumps;
  __pyx_vtable_11pcontainers_6_pdict_SnappyCompresser.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_16SnappyCompresser_loads;
  __pyx_type_11pcontainers_6_pdict_SnappyCompresser.tp_base = __pyx_ptype_11pcontainers_6_pdict_Compresser;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_SnappyCompresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_SnappyCompresser.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_SnappyCompresser.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_SnappyCompresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "SnappyCompresser", (PyObject *)&__pyx_type_11pcontainers_6_pdict_SnappyCompresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_SnappyCompresser = &__pyx_type_11pcontainers_6_pdict_SnappyCompresser;
  __pyx_vtabptr_11pcontainers_6_pdict_LZ4Compresser = &__pyx_vtable_11pcontainers_6_pdict_LZ4Compresser;
  __pyx_vtable_11pcontainers_6_pdict_LZ4Compresser.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Compresser;
  __pyx_vtable_11pcontainers_6_pdict_LZ4Compresser.__pyx_base.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_13LZ4Compresser_dumps;
  __pyx_vtable_11pcontainers_6_pdict_LZ4Compresser.__pyx_base.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_13LZ4Compresser_loads;
  __pyx_type_11pcontainers_6_pdict_LZ4Compresser.tp_base = __pyx_ptype_11pcontainers_6_pdict_Compresser;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_LZ4Compresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_LZ4Compresser.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_LZ4Compresser.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_LZ4Compresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "LZ4Compresser", (PyObject *)&__pyx_type_11pcontainers_6_pdict_LZ4Compresser) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_LZ4Compresser = &__pyx_type_11pcontainers_6_pdict_LZ4Compresser;
  __pyx_vtabptr_11pcontainers_6_pdict_Chain = &__pyx_vtable_11pcontainers_6_pdict_Chain;
  __pyx_vtable_11pcontainers_6_pdict_Chain.__pyx_base = *__pyx_vtabptr_11pcontainers_6_pdict_Filter;
  __pyx_vtable_11pcontainers_6_pdict_Chain.__pyx_base.dumps = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5Chain_dumps;
  __pyx_vtable_11pcontainers_6_pdict_Chain.__pyx_base.loads = (PyObject *(*)(struct __pyx_obj_11pcontainers_6_pdict_Filter *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11pcontainers_6_pdict_5Chain_loads;
  __pyx_type_11pcontainers_6_pdict_Chain.tp_base = __pyx_ptype_11pcontainers_6_pdict_Filter;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict_Chain) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict_Chain.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_11pcontainers_6_pdict_Chain.tp_dict, __pyx_vtabptr_11pcontainers_6_pdict_Chain) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Chain", (PyObject *)&__pyx_type_11pcontainers_6_pdict_Chain) < 0) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_11pcontainers_6_pdict_Chain = &__pyx_type_11pcontainers_6_pdict_Chain;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct__keys) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct__keys.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct__keys = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct__keys;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_1_values) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_1_values.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_1_values = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_1_values;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_2_items) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_2_items.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_2_items = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_2_items;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_3_fromkeys;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_4_genexpr;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_5_keys) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_5_keys.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_5_keys = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_5_keys;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_6_values) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_6_values.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_6_values = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_6_values;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_7_items) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_7_items.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_7_items = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_7_items;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_8_fromkeys;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_9_genexpr;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_10_push_front_many;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_11_genexpr;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_12_push_back_many;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr) < 0) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_13_genexpr;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_14___iter__) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_14___iter__.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_14___iter__ = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_14___iter__;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_15_values) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_15_values.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_15_values = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_15_values;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_16_items) < 0) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_16_items.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_16_items = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_16_items;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_17__adapt_unary_functor;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_18__adapt_binary_functor;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_19__adapt_unary_predicate;
  if (PyType_Ready(&__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate.tp_print = 0;
  __pyx_ptype_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate = &__pyx_type_11pcontainers_6_pdict___pyx_scope_struct_20__adapt_binary_predicate;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[9]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  __pyx_t_1 = __Pyx_ImportModule("pcontainers._py_exceptions"); if (!__pyx_t_1) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_lmdb_error", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_lmdb_error, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_not_initialized", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_not_initialized, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_access_error", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_access_error, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_key_exist", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_key_exist, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_not_found", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_not_found, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_empty_key", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_empty_key, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_empty_database", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_empty_database, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_page_not_found", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_page_not_found, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_corrupted", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_corrupted, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_panic", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_panic, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_version_mismatch", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_version_mismatch, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_invalid", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_invalid, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_map_full", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_map_full, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_dbs_full", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_dbs_full, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_readers_full", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_readers_full, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_tls_full", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_tls_full, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_txn_full", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_txn_full, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_cursor_full", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_cursor_full, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_page_full", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_page_full, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_map_resized", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_map_resized, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_incompatible", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_incompatible, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_bad_rslot", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_bad_rslot, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_bad_txn", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_bad_txn, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_bad_val_size", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_bad_val_size, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "py_bad_dbi", (void **)&__pyx_vp_11pcontainers_14_py_exceptions_py_bad_dbi, "PyObject *") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  /*--- Function import code ---*/
  __pyx_t_2 = __Pyx_ImportModule("pcontainers._py_exceptions"); if (!__pyx_t_2) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "custom_handler", (void (**)(void))&__pyx_f_11pcontainers_14_py_exceptions_custom_handler, "void (void)") < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif

  /* "pcontainers/_pdict.pyx":10
 * from libc.time cimport time as c_time
 * 
 * import logging             # <<<<<<<<<<<<<<
 * import uuid
 * import shutil
 */
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_logging, 0, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_logging, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/_pdict.pyx":11
 * 
 * import logging
 * import uuid             # <<<<<<<<<<<<<<
 * import shutil
 * import collections
 */
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_uuid, 0, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_uuid, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/_pdict.pyx":12
 * import logging
 * import uuid
 * import shutil             # <<<<<<<<<<<<<<
 * import collections
 * import threading
 */
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_shutil, 0, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_shutil, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/_pdict.pyx":13
 * import uuid
 * import shutil
 * import collections             # <<<<<<<<<<<<<<
 * import threading
 * from time import sleep
 */
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_collections, 0, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_collections, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/_pdict.pyx":14
 * import shutil
 * import collections
 * import threading             # <<<<<<<<<<<<<<
 * from time import sleep
 * from queue import Empty
 */
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_threading, 0, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_threading, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/_pdict.pyx":15
 * import collections
 * import threading
 * from time import sleep             # <<<<<<<<<<<<<<
 * from queue import Empty
 * 
 */
  __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_sleep);
  __Pyx_GIVEREF(__pyx_n_s_sleep);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_sleep);
  __pyx_t_4 = __Pyx_Import(__pyx_n_s_time, __pyx_t_3, -1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_sleep); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sleep, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/_pdict.pyx":16
 * import threading
 * from time import sleep
 * from queue import Empty             # <<<<<<<<<<<<<<
 * 
 * # noinspection PyPackageRequirements
 */
  __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_n_s_Empty);
  __Pyx_GIVEREF(__pyx_n_s_Empty);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_Empty);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_queue, __pyx_t_4, -1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_Empty); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Empty, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/_pdict.pyx":19
 * 
 * # noinspection PyPackageRequirements
 * from mbufferio import MBufferIO             # <<<<<<<<<<<<<<
 * 
 * from ._py_exceptions import EmptyDatabase, NotFound
 */
  __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_MBufferIO);
  __Pyx_GIVEREF(__pyx_n_s_MBufferIO);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_MBufferIO);
  __pyx_t_4 = __Pyx_Import(__pyx_n_s_mbufferio, __pyx_t_3, -1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_MBufferIO); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MBufferIO, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/_pdict.pyx":21
 * from mbufferio import MBufferIO
 * 
 * from ._py_exceptions import EmptyDatabase, NotFound             # <<<<<<<<<<<<<<
 * 
 * include "lmdb_options_impl.pxi"
 */
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_n_s_EmptyDatabase);
  __Pyx_GIVEREF(__pyx_n_s_EmptyDatabase);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_EmptyDatabase);
  __Pyx_INCREF(__pyx_n_s_NotFound);
  __Pyx_GIVEREF(__pyx_n_s_NotFound);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_NotFound);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_py_exceptions, __pyx_t_4, 1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_EmptyDatabase); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_EmptyDatabase, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_NotFound); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NotFound, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pcontainers/pdict_impl.pxi":35
 * 
 *     @classmethod
 *     def make_temp(cls, destroy=True, LmdbOptions opts=None, Chain key_chain=None, Chain value_chain=None):             # <<<<<<<<<<<<<<
 *         cdef shared_ptr[TempDirectory] temp_dir_ptr = make_temp_directory(True, False)
 *         d = cls(dirname=topy(temp_dir_ptr.get().get_path()), dbname=uuid.uuid4(), opts=opts, key_chain=key_chain, value_chain=value_chain)
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PRawDict, __pyx_n_s_make_temp); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":34
 *         )
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def make_temp(cls, destroy=True, LmdbOptions opts=None, Chain key_chain=None, Chain value_chain=None):
 *         cdef shared_ptr[TempDirectory] temp_dir_ptr = make_temp_directory(True, False)
 */
  __pyx_t_4 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PRawDict->tp_dict, __pyx_n_s_make_temp, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  PyType_Modified(__pyx_ptype_11pcontainers_6_pdict_PRawDict);

  /* "pcontainers/pdict_impl.pxi":372
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else make_utf8(v)
 */
  __pyx_t_4 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PRawDict, __pyx_n_s_fromkeys); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);

  /* "pcontainers/pdict_impl.pxi":371
 * 
 *     # noinspection PyPep8Naming
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):
 *         d = cls(dirname, dbname, opts=opts)
 */
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PRawDict->tp_dict, __pyx_n_s_fromkeys, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_11pcontainers_6_pdict_PRawDict);

  /* "pcontainers/pdict_impl.pxi":562
 *     # noinspection PyPep8Naming
 *     @classmethod
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):             # <<<<<<<<<<<<<<
 *         d = cls(dirname, dbname, opts=opts)
 *         v = b'' if v is None else v
 */
  __pyx_t_3 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict, __pyx_n_s_fromkeys); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "pcontainers/pdict_impl.pxi":561
 * 
 *     # noinspection PyPep8Naming
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromkeys(cls, dirname, dbname, opts=None, S=None, v=None):
 *         d = cls(dirname, dbname, opts=opts)
 */
  __pyx_t_4 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict->tp_dict, __pyx_n_s_fromkeys, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  PyType_Modified(__pyx_ptype_11pcontainers_6_pdict_PDict);

  /* "pcontainers/pdict_impl.pxi":598
 * 
 * 
 * collections.MutableMapping.register(PRawDict)             # <<<<<<<<<<<<<<
 * collections.MutableMapping.register(PDict)
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_collections); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_MutableMapping); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_register); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PRawDict)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PRawDict));
    __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PRawDict));
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PRawDict));
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/pdict_impl.pxi":599
 * 
 * collections.MutableMapping.register(PRawDict)
 * collections.MutableMapping.register(PDict)             # <<<<<<<<<<<<<<
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_collections); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_MutableMapping); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_register); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict));
    __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict));
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_ptype_11pcontainers_6_pdict_PDict));
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/logging_impl.pxi":2
 * 
 * cpdef set_logger(int level=logging.DEBUG):             # <<<<<<<<<<<<<<
 *     cdef PlogSeverity plog_level = PlogDebug
 *     if level == logging.DEBUG:
 */
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_logging); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_DEBUG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_k__13 = __pyx_t_7;
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_logging); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_DEBUG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 2; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_k__13 = __pyx_t_7;

  /* "pcontainers/_pdict.pyx":31
 * 
 * 
 * def _adapt_unary_functor(unary_funct, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x):
 *         return value_chain.dumps(unary_funct(value_chain.loads(x))).tobytes()
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_11pcontainers_6_pdict_5_adapt_unary_functor, NULL, __pyx_n_s_pcontainers__pdict); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_adapt_unary_functor, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/_pdict.pyx":37
 * 
 * 
 * def _adapt_binary_functor(binary_funct, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def functor(x, y):
 *         return value_chain.dumps(
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_11pcontainers_6_pdict_7_adapt_binary_functor, NULL, __pyx_n_s_pcontainers__pdict); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_adapt_binary_functor, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/_pdict.pyx":48
 * 
 * 
 * def _adapt_unary_predicate(unary_pred, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x):
 *         return bool(unary_pred(value_chain.loads(x)))
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_11pcontainers_6_pdict_9_adapt_unary_predicate, NULL, __pyx_n_s_pcontainers__pdict); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_adapt_unary_predicate, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/_pdict.pyx":54
 * 
 * 
 * def _adapt_binary_predicate(binary_pred, Chain key_chain, Chain value_chain):             # <<<<<<<<<<<<<<
 *     def predicate(x, y):
 *         return bool(
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_11pcontainers_6_pdict_11_adapt_binary_predicate, NULL, __pyx_n_s_pcontainers__pdict); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_adapt_binary_predicate, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/_pdict.pyx":1
 * # -*- coding: utf-8 -*-             # <<<<<<<<<<<<<<
 * 
 * # noinspection PyUnresolvedReferences
 */
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pcontainers/helpers.pxi":42
 * 
 * 
 * cdef inline make_mbufferio(void* ptr, size_t size):             # <<<<<<<<<<<<<<
 *     cdef Py_buffer* view = <Py_buffer*> PyMem_Malloc(sizeof(Py_buffer))
 *     PyBuffer_FillInfo(view, None, ptr, size, 1, PyBUF_SIMPLE)
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init pcontainers._pdict", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pcontainers._pdict");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#endif
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) {
            Py_RETURN_TRUE;
        } else {
            Py_RETURN_FALSE;
        }
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                #if PyLong_SHIFT < 30 && PyLong_SHIFT != 15
                default: return PyLong_Type.tp_richcompare(op1, op2, Py_EQ);
                #else
                default: Py_RETURN_FALSE;
                #endif
            }
        }
            if (a == b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            if ((double)a == (double)b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    return PyObject_RichCompare(op1, op2, Py_EQ);
}
#endif

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
#else
    PyErr_GetExcInfo(type, value, tb);
#endif
}
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(type, value, tb);
#endif
}

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_COMPILING_IN_CPYTHON
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *function = PyMethod_GET_FUNCTION(method);
            result = __Pyx_PyObject_CallOneArg(function, self);
            Py_DECREF(method);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                             int is_tuple, int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    if (!is_tuple && unlikely(!PyTuple_Check(tuple))) {
        iternextfunc iternext;
        iter = PyObject_GetIter(tuple);
        if (unlikely(!iter)) goto bad;
        if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
        iternext = Py_TYPE(iter)->tp_iternext;
        value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
        value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
        if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
        Py_DECREF(iter);
    } else {
        if (!has_known_size && unlikely(PyTuple_GET_SIZE(tuple) != 2)) {
            __Pyx_UnpackTupleError(tuple, 2);
            goto bad;
        }
#if CYTHON_COMPILING_IN_PYPY
        value1 = PySequence_ITEM(tuple, 0);
        if (unlikely(!value1)) goto bad;
        value2 = PySequence_ITEM(tuple, 1);
        if (unlikely(!value2)) goto bad;
#else
        value1 = PyTuple_GET_ITEM(tuple, 0);
        value2 = PyTuple_GET_ITEM(tuple, 1);
        Py_INCREF(value1);
        Py_INCREF(value2);
#endif
        if (decref_tuple) { Py_DECREF(tuple); }
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
#if !CYTHON_COMPILING_IN_PYPY
    if (is_dict) {
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
    }
#endif
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
#else
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
#endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (PyErr_ExceptionMatches(PyExc_OverflowError))
                    PyErr_Clear();
                else
                    goto bad;
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_COMPILING_IN_CPYTHON
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_COMPILING_IN_CPYTHON
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CyFunctionObject, func.m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyMem_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
#if CYTHON_COMPILING_IN_PYPY
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    PyObject *self = f->m_self;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0 = PySequence_ITEM(arg, 0);
                if (unlikely(!arg0)) return NULL;
                result = (*meth)(self, arg0);
                Py_DECREF(arg0);
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
#else
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
	return PyCFunction_Call(func, arg, kw);
}
#endif
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_Call,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
#if !CYTHON_COMPILING_IN_PYPY
    __pyx_CyFunctionType_type.tp_call = PyCFunction_Call;
#endif
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (__pyx_CyFunctionType == NULL) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyMem_Malloc(size);
    if (!m->defaults)
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result)
        result = __Pyx_GetModuleGlobalName(name);
    return result;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

static CYTHON_INLINE time_t __Pyx_PyInt_As_time_t(PyObject *x) {
    const time_t neg_one = (time_t) -1, const_zero = (time_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(time_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(time_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (time_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (time_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(time_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(time_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) >= 2 * PyLong_SHIFT) {
                            return (time_t) (((((time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(time_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) >= 3 * PyLong_SHIFT) {
                            return (time_t) (((((((time_t)digits[2]) << PyLong_SHIFT) | (time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(time_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) >= 4 * PyLong_SHIFT) {
                            return (time_t) (((((((((time_t)digits[3]) << PyLong_SHIFT) | (time_t)digits[2]) << PyLong_SHIFT) | (time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (time_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(time_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(time_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(time_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(time_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (time_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(time_t, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(time_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(time_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) - 1 > 2 * PyLong_SHIFT) {
                            return (time_t) (((time_t)-1)*(((((time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(time_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) - 1 > 2 * PyLong_SHIFT) {
                            return (time_t) ((((((time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(time_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) - 1 > 3 * PyLong_SHIFT) {
                            return (time_t) (((time_t)-1)*(((((((time_t)digits[2]) << PyLong_SHIFT) | (time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(time_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) - 1 > 3 * PyLong_SHIFT) {
                            return (time_t) ((((((((time_t)digits[2]) << PyLong_SHIFT) | (time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(time_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) - 1 > 4 * PyLong_SHIFT) {
                            return (time_t) (((time_t)-1)*(((((((((time_t)digits[3]) << PyLong_SHIFT) | (time_t)digits[2]) << PyLong_SHIFT) | (time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(time_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(time_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(time_t) - 1 > 4 * PyLong_SHIFT) {
                            return (time_t) ((((((((((time_t)digits[3]) << PyLong_SHIFT) | (time_t)digits[2]) << PyLong_SHIFT) | (time_t)digits[1]) << PyLong_SHIFT) | (time_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(time_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(time_t, long, PyLong_AsLong(x))
            } else if (sizeof(time_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(time_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            time_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (time_t) -1;
        }
    } else {
        time_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (time_t) -1;
        val = __Pyx_PyInt_As_time_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to time_t");
    return (time_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to time_t");
    return (time_t) -1;
}

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(unsigned int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
            } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_time_t(time_t value) {
    const time_t neg_one = (time_t) -1, const_zero = (time_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(time_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(time_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(time_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(time_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(time_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(time_t),
                                     little, !is_unsigned);
    }
}

static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    if (PyObject_TypeCheck(method, methoddescr_type)) {
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else if (PyCFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#ifdef __Pyx_CyFunction_USED
    else if (PyObject_TypeCheck(method, __pyx_CyFunctionType)) {
        return PyClassMethod_New(method);
    }
#endif
    PyErr_SetString(PyExc_TypeError,
                   "Class-level classmethod() can only be called on "
                   "a method_descriptor or instance method.");
    return NULL;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            args = PyTuple_New(2);
            if (unlikely(!args)) goto bad;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            Py_DECREF(method); method = NULL;
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
bad:
    Py_XDECREF(method);
    return result;
}

#include <structmember.h>
#include <frameobject.h>
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
#if PY_VERSION_HEX >= 0x030300A0
        if (ev && Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
#endif
        if (!ev || !PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            if (!ev) {
                Py_INCREF(Py_None);
                ev = Py_None;
            } else if (PyTuple_Check(ev)) {
                if (PyTuple_GET_SIZE(ev) >= 1) {
                    PyObject *value;
#if CYTHON_COMPILING_IN_CPYTHON
                    value = PySequence_ITEM(ev, 0);
#else
                    value = PyTuple_GET_ITEM(ev, 0);
                    Py_INCREF(value);
#endif
                    Py_DECREF(ev);
                    ev = value;
                } else {
                    Py_INCREF(Py_None);
                    Py_DECREF(ev);
                    ev = Py_None;
                }
            }
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = ev;
            return 0;
        }
    } else if (!PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
#endif
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__pyx_CoroutineObject *self) {
    PyObject *exc_type = self->exc_type;
    PyObject *exc_value = self->exc_value;
    PyObject *exc_traceback = self->exc_traceback;
    self->exc_type = NULL;
    self->exc_value = NULL;
    self->exc_traceback = NULL;
    Py_XDECREF(exc_type);
    Py_XDECREF(exc_value);
    Py_XDECREF(exc_traceback);
}
static CYTHON_INLINE
int __Pyx_Coroutine_CheckRunning(__pyx_CoroutineObject *gen) {
    if (unlikely(gen->is_running)) {
        PyErr_SetString(PyExc_ValueError,
                        "generator already executing");
        return 1;
    }
    return 0;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value) {
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            PyErr_SetString(PyExc_TypeError,
                            "can't send non-None value to a "
                            "just-started generator");
            return NULL;
        }
    }
    if (unlikely(self->resume_label == -1)) {
        PyErr_SetNone(PyExc_StopIteration);
        return NULL;
    }
    if (value) {
#if CYTHON_COMPILING_IN_PYPY
#else
        if (self->exc_traceback) {
            PyThreadState *tstate = PyThreadState_GET();
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
#endif
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
    }
    self->is_running = 1;
    retval = self->body((PyObject *) self, value);
    self->is_running = 0;
    if (retval) {
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
#if CYTHON_COMPILING_IN_PYPY
#else
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_CLEAR(f->f_back);
        }
#endif
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(PyObject *retval) {
    if (unlikely(!retval && !PyErr_Occurred())) {
        PyErr_SetNone(PyExc_StopIteration);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen_FetchStopIterationValue(&val);
    ret = __Pyx_Coroutine_SendEx(gen, val);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = PyIter_Next(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value);
    }
    return __Pyx_Coroutine_MethodReturn(retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL);
    if (retval) {
        Py_DECREF(retval);
        PyErr_SetString(PyExc_RuntimeError,
                        "generator ignored GeneratorExit");
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (!raised_exception
        || raised_exception == PyExc_StopIteration
        || raised_exception == PyExc_GeneratorExit
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_GeneratorExit)
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_StopIteration))
    {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *typ;
    PyObject *tb = NULL;
    PyObject *val = NULL;
    PyObject *yf = gen->yieldfrom;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit)) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(__Pyx_Coroutine_SendEx(gen, NULL));
            goto throw_here;
        }
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Throw(yf, args);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Throw(yf, args);
        } else
        #endif
        {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            ret = PyObject_CallObject(meth, args);
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(__Pyx_Coroutine_SendEx(gen, NULL));
}
static int __Pyx_Coroutine_traverse(PyObject *self, visitproc visit, void *arg) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    Py_VISIT(gen->exc_type);
    Py_VISIT(gen->exc_value);
    Py_VISIT(gen->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    Py_CLEAR(gen->exc_type);
    Py_CLEAR(gen->exc_value);
    Py_CLEAR(gen->exc_traceback);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label > 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *res;
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    if (gen->resume_label <= 0)
        return ;
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
#endif
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
    res = __Pyx_Coroutine_Close(self);
    if (res == NULL)
        PyErr_WriteUnraisable(self);
    else
        Py_DECREF(res);
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self)
{
    Py_INCREF(self->gi_name);
    return self->gi_name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self)
{
    Py_INCREF(self->gi_qualname);
    return self->gi_qualname;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(PyTypeObject* type, __pyx_coroutine_body_t body,
                                                   PyObject *closure, PyObject *name, PyObject *qualname) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (gen == NULL)
        return NULL;
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->exc_type = NULL;
    gen->exc_value = NULL;
    gen->exc_traceback = NULL;
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    PyObject_GC_Track(gen);
    return gen;
}

static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (!abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_VERSION_HEX >= 0x03030000) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_VERSION_HEX >= 0x03030000) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if (0) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if PY_VERSION_HEX >= 0x030400a1
    __Pyx_Coroutine_del,
#endif
};
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = PyObject_GenericGetAttr;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(__pyx_m, (char *)"__pyx_capi__");
    if (!d) {
        PyErr_Clear();
        d = PyDict_New();
        if (!d)
            goto bad;
        Py_INCREF(d);
        if (PyModule_AddObject(__pyx_m, (char *)"__pyx_capi__", d) < 0)
            goto bad;
    }
    tmp.fp = f;
#if PY_VERSION_HEX >= 0x02070000
    cobj = PyCapsule_New(tmp.p, sig, 0);
#else
    cobj = PyCObject_FromVoidPtrAndDesc(tmp.p, (void *)sig, 0);
#endif
    if (!cobj)
        goto bad;
    if (PyDict_SetItemString(d, name, cobj) < 0)
        goto bad;
    Py_DECREF(cobj);
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(cobj);
    Py_XDECREF(d);
    return -1;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

#ifndef __PYX_HAVE_RT_ImportVoidPtr
#define __PYX_HAVE_RT_ImportVoidPtr
static int __Pyx_ImportVoidPtr(PyObject *module, const char *name, void **p, const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, name);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C variable %.200s",
                PyModule_GetName(module), name);
        goto bad;
    }
#if PY_VERSION_HEX >= 0x02070000
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C variable %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), name, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    *p = PyCapsule_GetPointer(cobj, sig);
#else
    {const char *desc, *s1, *s2;
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C variable %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), name, sig, desc);
        goto bad;
    }
    *p = PyCObject_AsVoidPtr(cobj);}
#endif
    if (!(*p))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

#ifndef __PYX_HAVE_RT_ImportFunction
#define __PYX_HAVE_RT_ImportFunction
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
#if PY_VERSION_HEX >= 0x02070000
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
#else
    {const char *desc, *s1, *s2;
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, desc);
        goto bad;
    }
    tmp.p = PyCObject_AsVoidPtr(cobj);}
#endif
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
